{
    "cve": "CVE-2018-15756",
    "gav": {
        "groupId": "org.springframework",
        "artifactId": "spring-web",
        "version": "4.3.1.RELEASE"
    },
    "timestamp": "2018-11-30",
    "comment": "{\"artifacts\": [\"spring-web\"], \"references\": [\"https://github.com/spring-projects/spring-framework/commit/044772641d12b9281185f6cf50f8485b8747132\", \"https://github.com/spring-projects/spring-framework/commit/423aa28ed584b4ff6e5bad218c09beef5e91951\"]}",
    "details": [
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/044772641d12b9281185f6cf50f8485b8747132/org/springframework/http/HttpRange.class",
            "qname": "org.springframework.http.HttpRange",
            "diff": "{\"lhs\" : {\"toResourceRegion.3\":\"if $r2 == class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" goto $z0 = 0\",\"toResourceRegion.5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")]\",\"toResourceRegion.7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")\",\"createByteRange.1\":[\"$r0 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r0.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, null)\", \"return $r0\"],\"createByteRange.2\":[\"$r0 = new org.springframework.http.HttpRange$ByteRange\"],\"createByteRange.4\":[\"specialinvoke $r0.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, $r1)\", \"return $r0\"],\"createSuffixRange.1\":[\"$r0 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke $r0.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l0)\", \"return $r0\"],\"parseRanges.19\":\"r0 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r15, \\\",\\\")\",\"parseRange.8\":[\"if i0 >= $i2 goto $r11 = new org.springframework.http.HttpRange$ByteRange\"],\"parseRange.14\":[\"$r13 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r13.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, r1)\", \"return $r13\", \"$r11 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r11.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, null)\", \"return $r11\", \"if i0 != 0 goto $r2 = new java.lang.IllegalArgumentException\"],\"parseRange.23\":[\"$r9 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke $r9.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l7)\", \"return $r9\", \"$r2 = new java.lang.IllegalArgumentException\", \"$r3 = new java.lang.StringBuilder\", \"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Range \\'\")\"],\"parseRange.33\":[\"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)\", \"throw $r2\"],\"toResourceRegions.2\":[\"$z0 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r0)\", \"if $z0 == 0 goto $r5 = new java.util.ArrayList\", \"$r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\", \"return $r8\", \"$r5 = new java.util.ArrayList\"],\"toResourceRegions.8\":[\"specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z1 == 0 goto return $r5\", \"$r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r6\", \"$r7 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7)\", \"goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\"],\"toResourceRegions.18\":null},\"rhs\" : {\"toResourceRegion.3\":\"if class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" == $r2 goto $z0 = 0\",\"toResourceRegion.5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")]\",\"toResourceRegion.7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")\",\"createByteRange.1\":[\"r1 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r1.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, null)\", \"r2 = (org.springframework.http.HttpRange) r1\", \"return r2\"],\"createByteRange.2\":[\"r2 = new org.springframework.http.HttpRange$ByteRange\"],\"createByteRange.4\":[\"specialinvoke r2.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, $r1)\", \"r3 = (org.springframework.http.HttpRange) r2\", \"return r3\"],\"createSuffixRange.1\":[\"r1 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke r1.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l0)\", \"r2 = (org.springframework.http.HttpRange) r1\", \"return r2\"],\"parseRanges.19\":\"r0 = virtualinvoke r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(\\\",\\\\\\\\s*\\\")\",\"parseRange.8\":[\"if i0 >= $i2 goto r15 = new org.springframework.http.HttpRange$ByteRange\"],\"parseRange.14\":[\"r14 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r14.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, r1)\", \"r19 = (org.springframework.http.HttpRange) r14\", \"return r19\", \"r15 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r15.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, null)\", \"r20 = (org.springframework.http.HttpRange) r15\", \"return r20\", \"if i0 != 0 goto r18 = new java.lang.IllegalArgumentException\"],\"parseRange.23\":[\"r16 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke r16.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l7)\", \"r21 = (org.springframework.http.HttpRange) r16\", \"return r21\", \"r18 = new java.lang.IllegalArgumentException\", \"r17 = new java.lang.StringBuilder\", \"specialinvoke r17.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Range \\'\")\"],\"parseRange.33\":[\"specialinvoke r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)\", \"throw r18\"],\"toResourceRegions.2\":[\"if r0 == null goto $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"toResourceRegions.8\":[\"if $i0 != 0 goto $r6 = new java.util.ArrayList\", \"$r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"toResourceRegions.18\":[\"$r6 = new java.util.ArrayList\", \"$i1 = interfaceinvoke r0.<java.util.List: int size()>()\", \"specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto return $r6\", \"$r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r7\", \"$r8 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r8)\", \"goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\", \"return $r6\"]}}",
            "commit": "044772641d12b9281185f6cf50f8485b8747132",
            "contained": true,
            "affectedFile": "/org/springframework/http/HttpRange.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/423aa28ed584b4ff6e5bad218c09beef5e91951/org/springframework/http/HttpRange.class",
            "qname": "org.springframework.http.HttpRange",
            "diff": "{\"lhs\" : {\"toResourceRegion.3\":\"if $r2 == class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" goto $z0 = 0\",\"toResourceRegion.5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")]\",\"toResourceRegion.7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")\",\"createByteRange.1\":[\"$r0 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r0.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, null)\", \"return $r0\"],\"createByteRange.2\":[\"$r0 = new org.springframework.http.HttpRange$ByteRange\"],\"createByteRange.4\":[\"specialinvoke $r0.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, $r1)\", \"return $r0\"],\"createSuffixRange.1\":[\"$r0 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke $r0.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l0)\", \"return $r0\"],\"parseRanges.19\":\"r0 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r15, \\\",\\\")\",\"parseRange.8\":[\"if i0 >= $i2 goto $r11 = new org.springframework.http.HttpRange$ByteRange\"],\"parseRange.14\":[\"$r13 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r13.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, r1)\", \"return $r13\", \"$r11 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r11.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, null)\", \"return $r11\", \"if i0 != 0 goto $r2 = new java.lang.IllegalArgumentException\"],\"parseRange.23\":[\"$r9 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke $r9.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l7)\", \"return $r9\", \"$r2 = new java.lang.IllegalArgumentException\", \"$r3 = new java.lang.StringBuilder\", \"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Range \\'\")\"],\"parseRange.33\":[\"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)\", \"throw $r2\"],\"toResourceRegions.2\":[\"$z0 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r0)\", \"if $z0 == 0 goto $r5 = new java.util.ArrayList\", \"$r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\", \"return $r8\", \"$r5 = new java.util.ArrayList\"],\"toResourceRegions.8\":[\"specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z1 == 0 goto return $r5\", \"$r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r6\", \"$r7 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7)\", \"goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\"],\"toResourceRegions.18\":null},\"rhs\" : {\"toResourceRegion.3\":\"if class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" == $r2 goto $z0 = 0\",\"toResourceRegion.5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")]\",\"toResourceRegion.7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")\",\"createByteRange.1\":[\"r1 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r1.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, null)\", \"r2 = (org.springframework.http.HttpRange) r1\", \"return r2\"],\"createByteRange.2\":[\"r2 = new org.springframework.http.HttpRange$ByteRange\"],\"createByteRange.4\":[\"specialinvoke r2.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, $r1)\", \"r3 = (org.springframework.http.HttpRange) r2\", \"return r3\"],\"createSuffixRange.1\":[\"r1 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke r1.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l0)\", \"r2 = (org.springframework.http.HttpRange) r1\", \"return r2\"],\"parseRanges.19\":\"r0 = virtualinvoke r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(\\\",\\\\\\\\s*\\\")\",\"parseRange.8\":[\"if i0 >= $i2 goto r15 = new org.springframework.http.HttpRange$ByteRange\"],\"parseRange.14\":[\"r14 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r14.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, r1)\", \"r19 = (org.springframework.http.HttpRange) r14\", \"return r19\", \"r15 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r15.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, null)\", \"r20 = (org.springframework.http.HttpRange) r15\", \"return r20\", \"if i0 != 0 goto r18 = new java.lang.IllegalArgumentException\"],\"parseRange.23\":[\"r16 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke r16.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l7)\", \"r21 = (org.springframework.http.HttpRange) r16\", \"return r21\", \"r18 = new java.lang.IllegalArgumentException\", \"r17 = new java.lang.StringBuilder\", \"specialinvoke r17.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Range \\'\")\"],\"parseRange.33\":[\"specialinvoke r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)\", \"throw r18\"],\"toResourceRegions.2\":[\"if r0 == null goto $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"toResourceRegions.8\":[\"if $i0 != 0 goto $r6 = new java.util.ArrayList\", \"$r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"toResourceRegions.18\":[\"$r6 = new java.util.ArrayList\", \"$i1 = interfaceinvoke r0.<java.util.List: int size()>()\", \"specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto return $r6\", \"$r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r7\", \"$r8 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r8)\", \"goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\", \"return $r6\"]}}",
            "commit": "423aa28ed584b4ff6e5bad218c09beef5e91951",
            "contained": true,
            "affectedFile": "/org/springframework/http/HttpRange.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/c8e320019ffe7298fc4cbeeb194b2bfd6389b6d/org/springframework/http/HttpRange.class",
            "qname": "org.springframework.http.HttpRange",
            "diff": "{\"lhs\" : {\"toResourceRegion.3\":\"if $r2 == class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" goto $z0 = 0\",\"toResourceRegion.5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")]\",\"toResourceRegion.7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")\",\"createByteRange.1\":[\"$r0 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r0.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, null)\", \"return $r0\"],\"createByteRange.2\":[\"$r0 = new org.springframework.http.HttpRange$ByteRange\"],\"createByteRange.4\":[\"specialinvoke $r0.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, $r1)\", \"return $r0\"],\"createSuffixRange.1\":[\"$r0 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke $r0.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l0)\", \"return $r0\"],\"parseRanges.19\":\"r0 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r15, \\\",\\\")\",\"parseRange.8\":[\"if i0 >= $i2 goto $r11 = new org.springframework.http.HttpRange$ByteRange\"],\"parseRange.14\":[\"$r13 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r13.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, r1)\", \"return $r13\", \"$r11 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r11.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, null)\", \"return $r11\", \"if i0 != 0 goto $r2 = new java.lang.IllegalArgumentException\"],\"parseRange.23\":[\"$r9 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke $r9.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l7)\", \"return $r9\", \"$r2 = new java.lang.IllegalArgumentException\", \"$r3 = new java.lang.StringBuilder\", \"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Range \\'\")\"],\"parseRange.33\":[\"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)\", \"throw $r2\"],\"toResourceRegions.2\":[\"$z0 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r0)\", \"if $z0 == 0 goto $r5 = new java.util.ArrayList\", \"$r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\", \"return $r8\", \"$r5 = new java.util.ArrayList\"],\"toResourceRegions.8\":[\"specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z1 == 0 goto return $r5\", \"$r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r6\", \"$r7 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7)\", \"goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\"],\"toResourceRegions.18\":null},\"rhs\" : {\"toResourceRegion.3\":\"if class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" == $r2 goto $z0 = 0\",\"toResourceRegion.5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")]\",\"toResourceRegion.7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")\",\"createByteRange.1\":[\"r1 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r1.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, null)\", \"r2 = (org.springframework.http.HttpRange) r1\", \"return r2\"],\"createByteRange.2\":[\"r2 = new org.springframework.http.HttpRange$ByteRange\"],\"createByteRange.4\":[\"specialinvoke r2.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, $r1)\", \"r3 = (org.springframework.http.HttpRange) r2\", \"return r3\"],\"createSuffixRange.1\":[\"r1 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke r1.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l0)\", \"r2 = (org.springframework.http.HttpRange) r1\", \"return r2\"],\"parseRanges.19\":\"r0 = virtualinvoke r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(\\\",\\\\\\\\s*\\\")\",\"parseRange.8\":[\"if i0 >= $i2 goto r15 = new org.springframework.http.HttpRange$ByteRange\"],\"parseRange.14\":[\"r14 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r14.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, r1)\", \"r19 = (org.springframework.http.HttpRange) r14\", \"return r19\", \"r15 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r15.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, null)\", \"r20 = (org.springframework.http.HttpRange) r15\", \"return r20\", \"if i0 != 0 goto r18 = new java.lang.IllegalArgumentException\"],\"parseRange.23\":[\"r16 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke r16.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l7)\", \"r21 = (org.springframework.http.HttpRange) r16\", \"return r21\", \"r18 = new java.lang.IllegalArgumentException\", \"r17 = new java.lang.StringBuilder\", \"specialinvoke r17.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Range \\'\")\"],\"parseRange.33\":[\"specialinvoke r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)\", \"throw r18\"],\"toResourceRegions.2\":[\"if r0 == null goto $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"toResourceRegions.8\":[\"if $i0 != 0 goto $r6 = new java.util.ArrayList\", \"$r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"toResourceRegions.18\":[\"$r6 = new java.util.ArrayList\", \"$i1 = interfaceinvoke r0.<java.util.List: int size()>()\", \"specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto return $r6\", \"$r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r7\", \"$r8 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r8)\", \"goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\", \"return $r6\"]}}",
            "commit": "c8e320019ffe7298fc4cbeeb194b2bfd6389b6d",
            "contained": true,
            "affectedFile": "/org/springframework/http/HttpRange.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/044772641d12b9281185f6cf50f8485b8747132/org/springframework/http/HttpRange.class",
            "qname": "org.springframework.http.HttpRange.getLengthFor(Resource)",
            "diff": "{\"lhs\" : {\"toResourceRegion.3\":\"if $r2 == class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" goto $z0 = 0\",\"toResourceRegion.5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")]\",\"toResourceRegion.7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")\",\"createByteRange.1\":[\"$r0 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r0.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, null)\", \"return $r0\"],\"createByteRange.2\":[\"$r0 = new org.springframework.http.HttpRange$ByteRange\"],\"createByteRange.4\":[\"specialinvoke $r0.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, $r1)\", \"return $r0\"],\"createSuffixRange.1\":[\"$r0 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke $r0.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l0)\", \"return $r0\"],\"parseRanges.19\":\"r0 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r15, \\\",\\\")\",\"parseRange.8\":[\"if i0 >= $i2 goto $r11 = new org.springframework.http.HttpRange$ByteRange\"],\"parseRange.14\":[\"$r13 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r13.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, r1)\", \"return $r13\", \"$r11 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r11.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, null)\", \"return $r11\", \"if i0 != 0 goto $r2 = new java.lang.IllegalArgumentException\"],\"parseRange.23\":[\"$r9 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke $r9.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l7)\", \"return $r9\", \"$r2 = new java.lang.IllegalArgumentException\", \"$r3 = new java.lang.StringBuilder\", \"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Range \\'\")\"],\"parseRange.33\":[\"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)\", \"throw $r2\"],\"toResourceRegions.2\":[\"$z0 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r0)\", \"if $z0 == 0 goto $r5 = new java.util.ArrayList\", \"$r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\", \"return $r8\", \"$r5 = new java.util.ArrayList\"],\"toResourceRegions.8\":[\"specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z1 == 0 goto return $r5\", \"$r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r6\", \"$r7 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7)\", \"goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\"],\"toResourceRegions.18\":null},\"rhs\" : {\"toResourceRegion.3\":\"if class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" == $r2 goto $z0 = 0\",\"toResourceRegion.5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")]\",\"toResourceRegion.7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")\",\"createByteRange.1\":[\"r1 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r1.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, null)\", \"r2 = (org.springframework.http.HttpRange) r1\", \"return r2\"],\"createByteRange.2\":[\"r2 = new org.springframework.http.HttpRange$ByteRange\"],\"createByteRange.4\":[\"specialinvoke r2.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, $r1)\", \"r3 = (org.springframework.http.HttpRange) r2\", \"return r3\"],\"createSuffixRange.1\":[\"r1 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke r1.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l0)\", \"r2 = (org.springframework.http.HttpRange) r1\", \"return r2\"],\"parseRanges.19\":\"r0 = virtualinvoke r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(\\\",\\\\\\\\s*\\\")\",\"parseRange.8\":[\"if i0 >= $i2 goto r15 = new org.springframework.http.HttpRange$ByteRange\"],\"parseRange.14\":[\"r14 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r14.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, r1)\", \"r19 = (org.springframework.http.HttpRange) r14\", \"return r19\", \"r15 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r15.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, null)\", \"r20 = (org.springframework.http.HttpRange) r15\", \"return r20\", \"if i0 != 0 goto r18 = new java.lang.IllegalArgumentException\"],\"parseRange.23\":[\"r16 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke r16.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l7)\", \"r21 = (org.springframework.http.HttpRange) r16\", \"return r21\", \"r18 = new java.lang.IllegalArgumentException\", \"r17 = new java.lang.StringBuilder\", \"specialinvoke r17.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Range \\'\")\"],\"parseRange.33\":[\"specialinvoke r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)\", \"throw r18\"],\"toResourceRegions.2\":[\"if r0 == null goto $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"toResourceRegions.8\":[\"if $i0 != 0 goto $r6 = new java.util.ArrayList\", \"$r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"toResourceRegions.18\":[\"$r6 = new java.util.ArrayList\", \"$i1 = interfaceinvoke r0.<java.util.List: int size()>()\", \"specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto return $r6\", \"$r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r7\", \"$r8 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r8)\", \"goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\", \"return $r6\"]}}",
            "commit": "044772641d12b9281185f6cf50f8485b8747132",
            "contained": true,
            "affectedFile": "/org/springframework/http/HttpRange.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/423aa28ed584b4ff6e5bad218c09beef5e91951/org/springframework/http/HttpRange.class",
            "qname": "org.springframework.http.HttpRange.getLengthFor(Resource)",
            "diff": "{\"lhs\" : {\"toResourceRegion.3\":\"if $r2 == class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" goto $z0 = 0\",\"toResourceRegion.5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")]\",\"toResourceRegion.7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")\",\"createByteRange.1\":[\"$r0 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r0.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, null)\", \"return $r0\"],\"createByteRange.2\":[\"$r0 = new org.springframework.http.HttpRange$ByteRange\"],\"createByteRange.4\":[\"specialinvoke $r0.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, $r1)\", \"return $r0\"],\"createSuffixRange.1\":[\"$r0 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke $r0.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l0)\", \"return $r0\"],\"parseRanges.19\":\"r0 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r15, \\\",\\\")\",\"parseRange.8\":[\"if i0 >= $i2 goto $r11 = new org.springframework.http.HttpRange$ByteRange\"],\"parseRange.14\":[\"$r13 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r13.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, r1)\", \"return $r13\", \"$r11 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r11.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, null)\", \"return $r11\", \"if i0 != 0 goto $r2 = new java.lang.IllegalArgumentException\"],\"parseRange.23\":[\"$r9 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke $r9.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l7)\", \"return $r9\", \"$r2 = new java.lang.IllegalArgumentException\", \"$r3 = new java.lang.StringBuilder\", \"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Range \\'\")\"],\"parseRange.33\":[\"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)\", \"throw $r2\"],\"toResourceRegions.2\":[\"$z0 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r0)\", \"if $z0 == 0 goto $r5 = new java.util.ArrayList\", \"$r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\", \"return $r8\", \"$r5 = new java.util.ArrayList\"],\"toResourceRegions.8\":[\"specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z1 == 0 goto return $r5\", \"$r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r6\", \"$r7 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7)\", \"goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\"],\"toResourceRegions.18\":null},\"rhs\" : {\"toResourceRegion.3\":\"if class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" == $r2 goto $z0 = 0\",\"toResourceRegion.5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")]\",\"toResourceRegion.7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")\",\"createByteRange.1\":[\"r1 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r1.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, null)\", \"r2 = (org.springframework.http.HttpRange) r1\", \"return r2\"],\"createByteRange.2\":[\"r2 = new org.springframework.http.HttpRange$ByteRange\"],\"createByteRange.4\":[\"specialinvoke r2.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, $r1)\", \"r3 = (org.springframework.http.HttpRange) r2\", \"return r3\"],\"createSuffixRange.1\":[\"r1 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke r1.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l0)\", \"r2 = (org.springframework.http.HttpRange) r1\", \"return r2\"],\"parseRanges.19\":\"r0 = virtualinvoke r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(\\\",\\\\\\\\s*\\\")\",\"parseRange.8\":[\"if i0 >= $i2 goto r15 = new org.springframework.http.HttpRange$ByteRange\"],\"parseRange.14\":[\"r14 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r14.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, r1)\", \"r19 = (org.springframework.http.HttpRange) r14\", \"return r19\", \"r15 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r15.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, null)\", \"r20 = (org.springframework.http.HttpRange) r15\", \"return r20\", \"if i0 != 0 goto r18 = new java.lang.IllegalArgumentException\"],\"parseRange.23\":[\"r16 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke r16.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l7)\", \"r21 = (org.springframework.http.HttpRange) r16\", \"return r21\", \"r18 = new java.lang.IllegalArgumentException\", \"r17 = new java.lang.StringBuilder\", \"specialinvoke r17.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Range \\'\")\"],\"parseRange.33\":[\"specialinvoke r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)\", \"throw r18\"],\"toResourceRegions.2\":[\"if r0 == null goto $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"toResourceRegions.8\":[\"if $i0 != 0 goto $r6 = new java.util.ArrayList\", \"$r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"toResourceRegions.18\":[\"$r6 = new java.util.ArrayList\", \"$i1 = interfaceinvoke r0.<java.util.List: int size()>()\", \"specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto return $r6\", \"$r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r7\", \"$r8 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r8)\", \"goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\", \"return $r6\"]}}",
            "commit": "423aa28ed584b4ff6e5bad218c09beef5e91951",
            "contained": true,
            "affectedFile": "/org/springframework/http/HttpRange.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/c8e320019ffe7298fc4cbeeb194b2bfd6389b6d/org/springframework/http/HttpRange.class",
            "qname": "org.springframework.http.HttpRange.getLengthFor(Resource)",
            "diff": "{\"lhs\" : {\"toResourceRegion.3\":\"if $r2 == class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" goto $z0 = 0\",\"toResourceRegion.5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")]\",\"toResourceRegion.7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")\",\"createByteRange.1\":[\"$r0 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r0.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, null)\", \"return $r0\"],\"createByteRange.2\":[\"$r0 = new org.springframework.http.HttpRange$ByteRange\"],\"createByteRange.4\":[\"specialinvoke $r0.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, $r1)\", \"return $r0\"],\"createSuffixRange.1\":[\"$r0 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke $r0.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l0)\", \"return $r0\"],\"parseRanges.19\":\"r0 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r15, \\\",\\\")\",\"parseRange.8\":[\"if i0 >= $i2 goto $r11 = new org.springframework.http.HttpRange$ByteRange\"],\"parseRange.14\":[\"$r13 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r13.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, r1)\", \"return $r13\", \"$r11 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke $r11.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, null)\", \"return $r11\", \"if i0 != 0 goto $r2 = new java.lang.IllegalArgumentException\"],\"parseRange.23\":[\"$r9 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke $r9.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l7)\", \"return $r9\", \"$r2 = new java.lang.IllegalArgumentException\", \"$r3 = new java.lang.StringBuilder\", \"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Range \\'\")\"],\"parseRange.33\":[\"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)\", \"throw $r2\"],\"toResourceRegions.2\":[\"$z0 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r0)\", \"if $z0 == 0 goto $r5 = new java.util.ArrayList\", \"$r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\", \"return $r8\", \"$r5 = new java.util.ArrayList\"],\"toResourceRegions.8\":[\"specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z1 == 0 goto return $r5\", \"$r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r6\", \"$r7 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7)\", \"goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\"],\"toResourceRegions.18\":null},\"rhs\" : {\"toResourceRegion.3\":\"if class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" == $r2 goto $z0 = 0\",\"toResourceRegion.5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")]\",\"toResourceRegion.7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")\",\"createByteRange.1\":[\"r1 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r1.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, null)\", \"r2 = (org.springframework.http.HttpRange) r1\", \"return r2\"],\"createByteRange.2\":[\"r2 = new org.springframework.http.HttpRange$ByteRange\"],\"createByteRange.4\":[\"specialinvoke r2.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l0, $r1)\", \"r3 = (org.springframework.http.HttpRange) r2\", \"return r3\"],\"createSuffixRange.1\":[\"r1 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke r1.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l0)\", \"r2 = (org.springframework.http.HttpRange) r1\", \"return r2\"],\"parseRanges.19\":\"r0 = virtualinvoke r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(\\\",\\\\\\\\s*\\\")\",\"parseRange.8\":[\"if i0 >= $i2 goto r15 = new org.springframework.http.HttpRange$ByteRange\"],\"parseRange.14\":[\"r14 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r14.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, r1)\", \"r19 = (org.springframework.http.HttpRange) r14\", \"return r19\", \"r15 = new org.springframework.http.HttpRange$ByteRange\", \"specialinvoke r15.<org.springframework.http.HttpRange$ByteRange: void <init>(long,java.lang.Long)>(l6, null)\", \"r20 = (org.springframework.http.HttpRange) r15\", \"return r20\", \"if i0 != 0 goto r18 = new java.lang.IllegalArgumentException\"],\"parseRange.23\":[\"r16 = new org.springframework.http.HttpRange$SuffixByteRange\", \"specialinvoke r16.<org.springframework.http.HttpRange$SuffixByteRange: void <init>(long)>(l7)\", \"r21 = (org.springframework.http.HttpRange) r16\", \"return r21\", \"r18 = new java.lang.IllegalArgumentException\", \"r17 = new java.lang.StringBuilder\", \"specialinvoke r17.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Range \\'\")\"],\"parseRange.33\":[\"specialinvoke r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)\", \"throw r18\"],\"toResourceRegions.2\":[\"if r0 == null goto $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"toResourceRegions.8\":[\"if $i0 != 0 goto $r6 = new java.util.ArrayList\", \"$r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"toResourceRegions.18\":[\"$r6 = new java.util.ArrayList\", \"$i1 = interfaceinvoke r0.<java.util.List: int size()>()\", \"specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto return $r6\", \"$r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r7\", \"$r8 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r8)\", \"goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\", \"return $r6\"]}}",
            "commit": "c8e320019ffe7298fc4cbeeb194b2bfd6389b6d",
            "contained": true,
            "affectedFile": "/org/springframework/http/HttpRange.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/044772641d12b9281185f6cf50f8485b8747132/org/springframework/http/HttpRange.class",
            "qname": "org.springframework.http.HttpRange.parseRanges(String)",
            "diff": "{\"lhs\" : {\"19\":\"r0 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r15, \\\",\\\")\"},\"rhs\" : {\"19\":\"r0 = virtualinvoke r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(\\\",\\\\\\\\s*\\\")\"}}",
            "commit": "044772641d12b9281185f6cf50f8485b8747132",
            "contained": true,
            "affectedFile": "/org/springframework/http/HttpRange.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/423aa28ed584b4ff6e5bad218c09beef5e91951/org/springframework/http/HttpRange.class",
            "qname": "org.springframework.http.HttpRange.parseRanges(String)",
            "diff": "{\"lhs\" : {\"19\":\"r0 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r15, \\\",\\\")\"},\"rhs\" : {\"19\":\"r0 = virtualinvoke r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(\\\",\\\\\\\\s*\\\")\"}}",
            "commit": "423aa28ed584b4ff6e5bad218c09beef5e91951",
            "contained": true,
            "affectedFile": "/org/springframework/http/HttpRange.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/c8e320019ffe7298fc4cbeeb194b2bfd6389b6d/org/springframework/http/HttpRange.class",
            "qname": "org.springframework.http.HttpRange.parseRanges(String)",
            "diff": "{\"lhs\" : {\"19\":\"r0 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r15, \\\",\\\")\"},\"rhs\" : {\"19\":\"r0 = virtualinvoke r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(\\\",\\\\\\\\s*\\\")\"}}",
            "commit": "c8e320019ffe7298fc4cbeeb194b2bfd6389b6d",
            "contained": true,
            "affectedFile": "/org/springframework/http/HttpRange.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/044772641d12b9281185f6cf50f8485b8747132/org/springframework/http/HttpRange.class",
            "qname": "org.springframework.http.HttpRange.toResourceRegion(Resource)",
            "diff": "{\"lhs\" : {\"3\":\"if $r2 == class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" goto $z0 = 0\",\"5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")]\",\"7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")\"},\"rhs\" : {\"3\":\"if class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" == $r2 goto $z0 = 0\",\"5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")]\",\"7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")\"}}",
            "commit": "044772641d12b9281185f6cf50f8485b8747132",
            "contained": true,
            "affectedFile": "/org/springframework/http/HttpRange.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/423aa28ed584b4ff6e5bad218c09beef5e91951/org/springframework/http/HttpRange.class",
            "qname": "org.springframework.http.HttpRange.toResourceRegion(Resource)",
            "diff": "{\"lhs\" : {\"3\":\"if $r2 == class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" goto $z0 = 0\",\"5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")]\",\"7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")\"},\"rhs\" : {\"3\":\"if class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" == $r2 goto $z0 = 0\",\"5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")]\",\"7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")\"}}",
            "commit": "423aa28ed584b4ff6e5bad218c09beef5e91951",
            "contained": true,
            "affectedFile": "/org/springframework/http/HttpRange.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/c8e320019ffe7298fc4cbeeb194b2bfd6389b6d/org/springframework/http/HttpRange.class",
            "qname": "org.springframework.http.HttpRange.toResourceRegion(Resource)",
            "diff": "{\"lhs\" : {\"3\":\"if $r2 == class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" goto $z0 = 0\",\"5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")]\",\"7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Cannot convert an InputStreamResource to a ResourceRegion\\\")\"},\"rhs\" : {\"3\":\"if class \\\"Lorg\\/springframework\\/core\\/io\\/InputStreamResource;\\\" == $r2 goto $z0 = 0\",\"5\":\"goto [?= staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")]\",\"7\":\"staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, \\\"Can\\\\'t convert an InputStreamResource to a ResourceRegion\\\")\"}}",
            "commit": "c8e320019ffe7298fc4cbeeb194b2bfd6389b6d",
            "contained": true,
            "affectedFile": "/org/springframework/http/HttpRange.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/044772641d12b9281185f6cf50f8485b8747132/org/springframework/http/HttpRange.class",
            "qname": "org.springframework.http.HttpRange.toResourceRegions(List,Resource)",
            "diff": "{\"lhs\" : {\"2\":[\"$z0 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r0)\", \"if $z0 == 0 goto $r5 = new java.util.ArrayList\", \"$r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\", \"return $r8\", \"$r5 = new java.util.ArrayList\"],\"8\":[\"specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z1 == 0 goto return $r5\", \"$r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r6\", \"$r7 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7)\", \"goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\"],\"18\":null},\"rhs\" : {\"2\":[\"if r0 == null goto $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"8\":[\"if $i0 != 0 goto $r6 = new java.util.ArrayList\", \"$r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"18\":[\"$r6 = new java.util.ArrayList\", \"$i1 = interfaceinvoke r0.<java.util.List: int size()>()\", \"specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto return $r6\", \"$r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r7\", \"$r8 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r8)\", \"goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\", \"return $r6\"]}}",
            "commit": "044772641d12b9281185f6cf50f8485b8747132",
            "contained": true,
            "affectedFile": "/org/springframework/http/HttpRange.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/423aa28ed584b4ff6e5bad218c09beef5e91951/org/springframework/http/HttpRange.class",
            "qname": "org.springframework.http.HttpRange.toResourceRegions(List,Resource)",
            "diff": "{\"lhs\" : {\"2\":[\"$z0 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r0)\", \"if $z0 == 0 goto $r5 = new java.util.ArrayList\", \"$r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\", \"return $r8\", \"$r5 = new java.util.ArrayList\"],\"8\":[\"specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z1 == 0 goto return $r5\", \"$r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r6\", \"$r7 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7)\", \"goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\"],\"18\":null},\"rhs\" : {\"2\":[\"if r0 == null goto $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"8\":[\"if $i0 != 0 goto $r6 = new java.util.ArrayList\", \"$r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"18\":[\"$r6 = new java.util.ArrayList\", \"$i1 = interfaceinvoke r0.<java.util.List: int size()>()\", \"specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto return $r6\", \"$r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r7\", \"$r8 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r8)\", \"goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\", \"return $r6\"]}}",
            "commit": "423aa28ed584b4ff6e5bad218c09beef5e91951",
            "contained": true,
            "affectedFile": "/org/springframework/http/HttpRange.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/c8e320019ffe7298fc4cbeeb194b2bfd6389b6d/org/springframework/http/HttpRange.class",
            "qname": "org.springframework.http.HttpRange.toResourceRegions(List,Resource)",
            "diff": "{\"lhs\" : {\"2\":[\"$z0 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r0)\", \"if $z0 == 0 goto $r5 = new java.util.ArrayList\", \"$r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\", \"return $r8\", \"$r5 = new java.util.ArrayList\"],\"8\":[\"specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z1 == 0 goto return $r5\", \"$r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r6\", \"$r7 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7)\", \"goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\"],\"18\":null},\"rhs\" : {\"2\":[\"if r0 == null goto $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"8\":[\"if $i0 != 0 goto $r6 = new java.util.ArrayList\", \"$r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()\"],\"18\":[\"$r6 = new java.util.ArrayList\", \"$i1 = interfaceinvoke r0.<java.util.List: int size()>()\", \"specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1)\", \"r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto return $r6\", \"$r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()\", \"r4 = (org.springframework.http.HttpRange) $r7\", \"$r8 = virtualinvoke r4.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r1)\", \"interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r8)\", \"goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]\", \"return $r6\"]}}",
            "commit": "c8e320019ffe7298fc4cbeeb194b2bfd6389b6d",
            "contained": true,
            "affectedFile": "/org/springframework/http/HttpRange.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/044772641d12b9281185f6cf50f8485b8747132/org/springframework/http/HttpRangeTests.class",
            "qname": "org.springframework.http.HttpRangeTests",
            "diff": null,
            "commit": "044772641d12b9281185f6cf50f8485b8747132",
            "contained": false,
            "affectedFile": "/org/springframework/http/HttpRangeTests.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/423aa28ed584b4ff6e5bad218c09beef5e91951/org/springframework/http/HttpRangeTests.class",
            "qname": "org.springframework.http.HttpRangeTests",
            "diff": null,
            "commit": "423aa28ed584b4ff6e5bad218c09beef5e91951",
            "contained": false,
            "affectedFile": "/org/springframework/http/HttpRangeTests.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/c8e320019ffe7298fc4cbeeb194b2bfd6389b6d/org/springframework/http/HttpRangeTests.class",
            "qname": "org.springframework.http.HttpRangeTests",
            "diff": null,
            "commit": "c8e320019ffe7298fc4cbeeb194b2bfd6389b6d",
            "contained": false,
            "affectedFile": "/org/springframework/http/HttpRangeTests.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/044772641d12b9281185f6cf50f8485b8747132/org/springframework/http/HttpRangeTests.class",
            "qname": "org.springframework.http.HttpRangeTests.parseRangesValidations()",
            "diff": null,
            "commit": "044772641d12b9281185f6cf50f8485b8747132",
            "contained": false,
            "affectedFile": "/org/springframework/http/HttpRangeTests.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/423aa28ed584b4ff6e5bad218c09beef5e91951/org/springframework/http/HttpRangeTests.class",
            "qname": "org.springframework.http.HttpRangeTests.parseRangesValidations()",
            "diff": null,
            "commit": "423aa28ed584b4ff6e5bad218c09beef5e91951",
            "contained": false,
            "affectedFile": "/org/springframework/http/HttpRangeTests.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/c8e320019ffe7298fc4cbeeb194b2bfd6389b6d/org/springframework/http/HttpRangeTests.class",
            "qname": "org.springframework.http.HttpRangeTests.parseRangesValidations()",
            "diff": null,
            "commit": "c8e320019ffe7298fc4cbeeb194b2bfd6389b6d",
            "contained": false,
            "affectedFile": "/org/springframework/http/HttpRangeTests.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/044772641d12b9281185f6cf50f8485b8747132/org/springframework/http/HttpRangeTests.class",
            "qname": "org.springframework.http.HttpRangeTests.toResourceRegionsValidations()",
            "diff": null,
            "commit": "044772641d12b9281185f6cf50f8485b8747132",
            "contained": false,
            "affectedFile": "/org/springframework/http/HttpRangeTests.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/423aa28ed584b4ff6e5bad218c09beef5e91951/org/springframework/http/HttpRangeTests.class",
            "qname": "org.springframework.http.HttpRangeTests.toResourceRegionsValidations()",
            "diff": null,
            "commit": "423aa28ed584b4ff6e5bad218c09beef5e91951",
            "contained": false,
            "affectedFile": "/org/springframework/http/HttpRangeTests.class"
        },
        {
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/c8e320019ffe7298fc4cbeeb194b2bfd6389b6d/org/springframework/http/HttpRangeTests.class",
            "qname": "org.springframework.http.HttpRangeTests.toResourceRegionsValidations()",
            "diff": null,
            "commit": "c8e320019ffe7298fc4cbeeb194b2bfd6389b6d",
            "contained": false,
            "affectedFile": "/org/springframework/http/HttpRangeTests.class"
        }
    ],
    "vulnerable": false
}