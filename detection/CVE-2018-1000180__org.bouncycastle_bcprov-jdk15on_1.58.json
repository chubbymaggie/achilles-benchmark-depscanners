{
    "gav": {
        "groupId": "org.bouncycastle",
        "artifactId": "bcprov-jdk15on",
        "version": "1.58"
    },
    "cve": "CVE-2018-1000180",
    "vulnerable": true,
    "details": [
        {
            "affectedFile": "/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class",
            "diff": "{\"lhs\" : {\"iterations\":null,\"init.4\":null,\"chooseRandomPrime.4\":[\"$r4 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$i2 = virtualinvoke $r4.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getCertainty()>()\", \"i1 = staticinvoke <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: int getNumberOfIterations(int,int)>(i0, $i2)\", \"i5 = 0\", \"$i3 = 5 * i0\", \"if i5 == $i3 goto $r5 = new java.lang.IllegalStateException\", \"$r6 = new java.math.BigInteger\", \"$r7 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$r8 = virtualinvoke $r7.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: java.security.SecureRandom getRandom()>()\", \"specialinvoke $r6.<java.math.BigInteger: void <init>(int,int,java.util.Random)>(i0, 1, $r8)\", \"$r9 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r1)\", \"$r10 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$z0 = virtualinvoke $r9.<java.math.BigInteger: boolean equals(java.lang.Object)>($r10)\", \"if $z0 == 0 goto $r11 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r6)\", \"goto [?= i5 = i5 + 1]\", \"$r11 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r6)\", \"$i4 = virtualinvoke $r11.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r2)\", \"if $i4 >= 0 goto $z1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger,int)>($r6, i1)\", \"goto [?= i5 = i5 + 1]\", \"$z1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger,int)>($r6, i1)\", \"if $z1 != 0 goto $r12 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"goto [?= i5 = i5 + 1]\", \"$r12 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$r13 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r12)\", \"$r14 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r13)\", \"$r15 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$z2 = virtualinvoke $r14.<java.math.BigInteger: boolean equals(java.lang.Object)>($r15)\", \"if $z2 != 0 goto return $r6\", \"goto [?= i5 = i5 + 1]\", \"return $r6\", \"i5 = i5 + 1\", \"goto [?= $i3 = 5 * i0]\", \"$r5 = new java.lang.IllegalStateException\", \"specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"unable to generate prime number for RSA key\")\", \"throw $r5\"],\"isProbablePrime\":\"<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger,int)>\",\"isProbablePrime\":null},\"rhs\" : {\"iterations\":\"<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: int iterations>\",\"init.4\":[\"$r3 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$i0 = virtualinvoke $r3.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getStrength()>()\", \"$r4 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$i1 = virtualinvoke $r4.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getCertainty()>()\", \"$i2 = staticinvoke <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: int getNumberOfIterations(int,int)>($i0, $i1)\", \"r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: int iterations> = $i2\"],\"chooseRandomPrime.4\":[\"i3 = 0\", \"$i1 = 5 * i0\", \"if i3 == $i1 goto $r4 = new java.lang.IllegalStateException\", \"$r5 = new java.math.BigInteger\", \"$r6 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$r7 = virtualinvoke $r6.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: java.security.SecureRandom getRandom()>()\", \"specialinvoke $r5.<java.math.BigInteger: void <init>(int,int,java.util.Random)>(i0, 1, $r7)\", \"$r8 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r1)\", \"$r9 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$z0 = virtualinvoke $r8.<java.math.BigInteger: boolean equals(java.lang.Object)>($r9)\", \"if $z0 == 0 goto $r10 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r5)\", \"goto [?= i3 = i3 + 1]\", \"$r10 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r5)\", \"$i2 = virtualinvoke $r10.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r2)\", \"if $i2 >= 0 goto $z1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger)>($r5)\", \"goto [?= i3 = i3 + 1]\", \"$z1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger)>($r5)\", \"if $z1 != 0 goto $r11 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"goto [?= i3 = i3 + 1]\", \"$r11 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$r12 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r11)\", \"$r13 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r12)\", \"$r14 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$z2 = virtualinvoke $r13.<java.math.BigInteger: boolean equals(java.lang.Object)>($r14)\", \"if $z2 != 0 goto return $r5\", \"goto [?= i3 = i3 + 1]\", \"return $r5\", \"i3 = i3 + 1\", \"goto [?= $i1 = 5 * i0]\", \"$r4 = new java.lang.IllegalStateException\", \"specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"unable to generate prime number for RSA key\")\", \"throw $r4\"],\"isProbablePrime\":null,\"isProbablePrime\":\"<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger)>\"}}",
            "contained": true,
            "commit": "22467b6e8fe19717ecdf201c0cf91bacf04a55ad",
            "qname": "org.bouncycastle.crypto.generators.RSAKeyPairGenerator",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/22467b6e8fe19717ecdf201c0cf91bacf04a55ad/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class"
        },
        {
            "affectedFile": "/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class",
            "diff": "",
            "contained": true,
            "commit": "73780ac522b7795fc165630aba8d5f5729acc839",
            "qname": "org.bouncycastle.crypto.generators.RSAKeyPairGenerator",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/73780ac522b7795fc165630aba8d5f5729acc839/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class"
        },
        {
            "affectedFile": "/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class",
            "diff": "{\"lhs\" : {\"4\":[\"$r4 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$i2 = virtualinvoke $r4.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getCertainty()>()\", \"i1 = staticinvoke <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: int getNumberOfIterations(int,int)>(i0, $i2)\", \"i5 = 0\", \"$i3 = 5 * i0\", \"if i5 == $i3 goto $r5 = new java.lang.IllegalStateException\", \"$r6 = new java.math.BigInteger\", \"$r7 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$r8 = virtualinvoke $r7.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: java.security.SecureRandom getRandom()>()\", \"specialinvoke $r6.<java.math.BigInteger: void <init>(int,int,java.util.Random)>(i0, 1, $r8)\", \"$r9 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r1)\", \"$r10 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$z0 = virtualinvoke $r9.<java.math.BigInteger: boolean equals(java.lang.Object)>($r10)\", \"if $z0 == 0 goto $r11 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r6)\", \"goto [?= i5 = i5 + 1]\", \"$r11 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r6)\", \"$i4 = virtualinvoke $r11.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r2)\", \"if $i4 >= 0 goto $z1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger,int)>($r6, i1)\", \"goto [?= i5 = i5 + 1]\", \"$z1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger,int)>($r6, i1)\", \"if $z1 != 0 goto $r12 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"goto [?= i5 = i5 + 1]\", \"$r12 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$r13 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r12)\", \"$r14 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r13)\", \"$r15 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$z2 = virtualinvoke $r14.<java.math.BigInteger: boolean equals(java.lang.Object)>($r15)\", \"if $z2 != 0 goto return $r6\", \"goto [?= i5 = i5 + 1]\", \"return $r6\", \"i5 = i5 + 1\", \"goto [?= $i3 = 5 * i0]\", \"$r5 = new java.lang.IllegalStateException\", \"specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"unable to generate prime number for RSA key\")\", \"throw $r5\"]},\"rhs\" : {\"4\":[\"i3 = 0\", \"$i1 = 5 * i0\", \"if i3 == $i1 goto $r4 = new java.lang.IllegalStateException\", \"$r5 = new java.math.BigInteger\", \"$r6 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$r7 = virtualinvoke $r6.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: java.security.SecureRandom getRandom()>()\", \"specialinvoke $r5.<java.math.BigInteger: void <init>(int,int,java.util.Random)>(i0, 1, $r7)\", \"$r8 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r1)\", \"$r9 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$z0 = virtualinvoke $r8.<java.math.BigInteger: boolean equals(java.lang.Object)>($r9)\", \"if $z0 == 0 goto $r10 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r5)\", \"goto [?= i3 = i3 + 1]\", \"$r10 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r5)\", \"$i2 = virtualinvoke $r10.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r2)\", \"if $i2 >= 0 goto $z1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger)>($r5)\", \"goto [?= i3 = i3 + 1]\", \"$z1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger)>($r5)\", \"if $z1 != 0 goto $r11 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"goto [?= i3 = i3 + 1]\", \"$r11 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$r12 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r11)\", \"$r13 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r12)\", \"$r14 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$z2 = virtualinvoke $r13.<java.math.BigInteger: boolean equals(java.lang.Object)>($r14)\", \"if $z2 != 0 goto return $r5\", \"goto [?= i3 = i3 + 1]\", \"return $r5\", \"i3 = i3 + 1\", \"goto [?= $i1 = 5 * i0]\", \"$r4 = new java.lang.IllegalStateException\", \"specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"unable to generate prime number for RSA key\")\", \"throw $r4\"]}}",
            "contained": true,
            "commit": "22467b6e8fe19717ecdf201c0cf91bacf04a55ad",
            "qname": "org.bouncycastle.crypto.generators.RSAKeyPairGenerator.chooseRandomPrime(int,BigInteger,BigInteger)",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/22467b6e8fe19717ecdf201c0cf91bacf04a55ad/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class"
        },
        {
            "affectedFile": "/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class",
            "diff": "",
            "contained": true,
            "commit": "73780ac522b7795fc165630aba8d5f5729acc839",
            "qname": "org.bouncycastle.crypto.generators.RSAKeyPairGenerator.chooseRandomPrime(int,BigInteger,BigInteger)",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/73780ac522b7795fc165630aba8d5f5729acc839/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class"
        },
        {
            "affectedFile": "/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class",
            "diff": "",
            "contained": true,
            "commit": "73780ac522b7795fc165630aba8d5f5729acc839",
            "qname": "org.bouncycastle.crypto.generators.RSAKeyPairGenerator.init(KeyGenerationParameters)",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/73780ac522b7795fc165630aba8d5f5729acc839/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class"
        },
        {
            "affectedFile": "/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class",
            "diff": "{\"lhs\" : {\"iterations\":null,\"init.4\":null,\"chooseRandomPrime.4\":[\"$r4 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$i2 = virtualinvoke $r4.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getCertainty()>()\", \"i1 = staticinvoke <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: int getNumberOfIterations(int,int)>(i0, $i2)\", \"i5 = 0\", \"$i3 = 5 * i0\", \"if i5 == $i3 goto $r5 = new java.lang.IllegalStateException\", \"$r6 = new java.math.BigInteger\", \"$r7 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$r8 = virtualinvoke $r7.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: java.security.SecureRandom getRandom()>()\", \"specialinvoke $r6.<java.math.BigInteger: void <init>(int,int,java.util.Random)>(i0, 1, $r8)\", \"$r9 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r1)\", \"$r10 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$z0 = virtualinvoke $r9.<java.math.BigInteger: boolean equals(java.lang.Object)>($r10)\", \"if $z0 == 0 goto $r11 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r6)\", \"goto [?= i5 = i5 + 1]\", \"$r11 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r6)\", \"$i4 = virtualinvoke $r11.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r2)\", \"if $i4 >= 0 goto $z1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger,int)>($r6, i1)\", \"goto [?= i5 = i5 + 1]\", \"$z1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger,int)>($r6, i1)\", \"if $z1 != 0 goto $r12 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"goto [?= i5 = i5 + 1]\", \"$r12 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$r13 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r12)\", \"$r14 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r13)\", \"$r15 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$z2 = virtualinvoke $r14.<java.math.BigInteger: boolean equals(java.lang.Object)>($r15)\", \"if $z2 != 0 goto return $r6\", \"goto [?= i5 = i5 + 1]\", \"return $r6\", \"i5 = i5 + 1\", \"goto [?= $i3 = 5 * i0]\", \"$r5 = new java.lang.IllegalStateException\", \"specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"unable to generate prime number for RSA key\")\", \"throw $r5\"],\"isProbablePrime\":\"<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger,int)>\",\"isProbablePrime\":null},\"rhs\" : {\"iterations\":\"<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: int iterations>\",\"init.4\":[\"$r3 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$i0 = virtualinvoke $r3.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getStrength()>()\", \"$r4 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$i1 = virtualinvoke $r4.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getCertainty()>()\", \"$i2 = staticinvoke <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: int getNumberOfIterations(int,int)>($i0, $i1)\", \"r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: int iterations> = $i2\"],\"chooseRandomPrime.4\":[\"i3 = 0\", \"$i1 = 5 * i0\", \"if i3 == $i1 goto $r4 = new java.lang.IllegalStateException\", \"$r5 = new java.math.BigInteger\", \"$r6 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$r7 = virtualinvoke $r6.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: java.security.SecureRandom getRandom()>()\", \"specialinvoke $r5.<java.math.BigInteger: void <init>(int,int,java.util.Random)>(i0, 1, $r7)\", \"$r8 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r1)\", \"$r9 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$z0 = virtualinvoke $r8.<java.math.BigInteger: boolean equals(java.lang.Object)>($r9)\", \"if $z0 == 0 goto $r10 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r5)\", \"goto [?= i3 = i3 + 1]\", \"$r10 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r5)\", \"$i2 = virtualinvoke $r10.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r2)\", \"if $i2 >= 0 goto $z1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger)>($r5)\", \"goto [?= i3 = i3 + 1]\", \"$z1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger)>($r5)\", \"if $z1 != 0 goto $r11 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"goto [?= i3 = i3 + 1]\", \"$r11 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$r12 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r11)\", \"$r13 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r12)\", \"$r14 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$z2 = virtualinvoke $r13.<java.math.BigInteger: boolean equals(java.lang.Object)>($r14)\", \"if $z2 != 0 goto return $r5\", \"goto [?= i3 = i3 + 1]\", \"return $r5\", \"i3 = i3 + 1\", \"goto [?= $i1 = 5 * i0]\", \"$r4 = new java.lang.IllegalStateException\", \"specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"unable to generate prime number for RSA key\")\", \"throw $r4\"],\"isProbablePrime\":null,\"isProbablePrime\":\"<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger)>\"}}",
            "contained": true,
            "commit": "22467b6e8fe19717ecdf201c0cf91bacf04a55ad",
            "qname": "org.bouncycastle.crypto.generators.RSAKeyPairGenerator.isProbablePrime(BigInteger)",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/22467b6e8fe19717ecdf201c0cf91bacf04a55ad/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class"
        },
        {
            "affectedFile": "/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class",
            "diff": "",
            "contained": true,
            "commit": "73780ac522b7795fc165630aba8d5f5729acc839",
            "qname": "org.bouncycastle.crypto.generators.RSAKeyPairGenerator.isProbablePrime(BigInteger)",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/73780ac522b7795fc165630aba8d5f5729acc839/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class"
        },
        {
            "affectedFile": "/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class",
            "diff": "{\"lhs\" : {\"iterations\":null,\"init.4\":null,\"chooseRandomPrime.4\":[\"$r4 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$i2 = virtualinvoke $r4.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getCertainty()>()\", \"i1 = staticinvoke <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: int getNumberOfIterations(int,int)>(i0, $i2)\", \"i5 = 0\", \"$i3 = 5 * i0\", \"if i5 == $i3 goto $r5 = new java.lang.IllegalStateException\", \"$r6 = new java.math.BigInteger\", \"$r7 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$r8 = virtualinvoke $r7.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: java.security.SecureRandom getRandom()>()\", \"specialinvoke $r6.<java.math.BigInteger: void <init>(int,int,java.util.Random)>(i0, 1, $r8)\", \"$r9 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r1)\", \"$r10 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$z0 = virtualinvoke $r9.<java.math.BigInteger: boolean equals(java.lang.Object)>($r10)\", \"if $z0 == 0 goto $r11 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r6)\", \"goto [?= i5 = i5 + 1]\", \"$r11 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r6)\", \"$i4 = virtualinvoke $r11.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r2)\", \"if $i4 >= 0 goto $z1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger,int)>($r6, i1)\", \"goto [?= i5 = i5 + 1]\", \"$z1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger,int)>($r6, i1)\", \"if $z1 != 0 goto $r12 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"goto [?= i5 = i5 + 1]\", \"$r12 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$r13 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r12)\", \"$r14 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r13)\", \"$r15 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$z2 = virtualinvoke $r14.<java.math.BigInteger: boolean equals(java.lang.Object)>($r15)\", \"if $z2 != 0 goto return $r6\", \"goto [?= i5 = i5 + 1]\", \"return $r6\", \"i5 = i5 + 1\", \"goto [?= $i3 = 5 * i0]\", \"$r5 = new java.lang.IllegalStateException\", \"specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"unable to generate prime number for RSA key\")\", \"throw $r5\"],\"isProbablePrime\":\"<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger,int)>\",\"isProbablePrime\":null},\"rhs\" : {\"iterations\":\"<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: int iterations>\",\"init.4\":[\"$r3 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$i0 = virtualinvoke $r3.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getStrength()>()\", \"$r4 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$i1 = virtualinvoke $r4.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getCertainty()>()\", \"$i2 = staticinvoke <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: int getNumberOfIterations(int,int)>($i0, $i1)\", \"r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: int iterations> = $i2\"],\"chooseRandomPrime.4\":[\"i3 = 0\", \"$i1 = 5 * i0\", \"if i3 == $i1 goto $r4 = new java.lang.IllegalStateException\", \"$r5 = new java.math.BigInteger\", \"$r6 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>\", \"$r7 = virtualinvoke $r6.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: java.security.SecureRandom getRandom()>()\", \"specialinvoke $r5.<java.math.BigInteger: void <init>(int,int,java.util.Random)>(i0, 1, $r7)\", \"$r8 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r1)\", \"$r9 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$z0 = virtualinvoke $r8.<java.math.BigInteger: boolean equals(java.lang.Object)>($r9)\", \"if $z0 == 0 goto $r10 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r5)\", \"goto [?= i3 = i3 + 1]\", \"$r10 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r5)\", \"$i2 = virtualinvoke $r10.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r2)\", \"if $i2 >= 0 goto $z1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger)>($r5)\", \"goto [?= i3 = i3 + 1]\", \"$z1 = virtualinvoke r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger)>($r5)\", \"if $z1 != 0 goto $r11 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"goto [?= i3 = i3 + 1]\", \"$r11 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$r12 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r11)\", \"$r13 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r12)\", \"$r14 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>\", \"$z2 = virtualinvoke $r13.<java.math.BigInteger: boolean equals(java.lang.Object)>($r14)\", \"if $z2 != 0 goto return $r5\", \"goto [?= i3 = i3 + 1]\", \"return $r5\", \"i3 = i3 + 1\", \"goto [?= $i1 = 5 * i0]\", \"$r4 = new java.lang.IllegalStateException\", \"specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"unable to generate prime number for RSA key\")\", \"throw $r4\"],\"isProbablePrime\":null,\"isProbablePrime\":\"<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: boolean isProbablePrime(java.math.BigInteger)>\"}}",
            "contained": true,
            "commit": "22467b6e8fe19717ecdf201c0cf91bacf04a55ad",
            "qname": "org.bouncycastle.crypto.generators.RSAKeyPairGenerator.isProbablePrime(BigInteger,int)",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/22467b6e8fe19717ecdf201c0cf91bacf04a55ad/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class"
        },
        {
            "affectedFile": "/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class",
            "diff": "",
            "contained": true,
            "commit": "73780ac522b7795fc165630aba8d5f5729acc839",
            "qname": "org.bouncycastle.crypto.generators.RSAKeyPairGenerator.isProbablePrime(BigInteger,int)",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/73780ac522b7795fc165630aba8d5f5729acc839/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.class"
        }
    ],
    "comment": "{\"artifacts\": [\"bcprov-jdk15on[1.54-1.60)\"], \"references\": [\"\"]}",
    "timestamp": "2018-11-30"
}