{
    "comment": "",
    "timestamp": "2018-11-30",
    "cve": "CVE-2017-9096-2",
    "details": [
        {
            "contained": true,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/testutils/CompareTool.class",
            "qname": "com.itextpdf.testutils.CompareTool",
            "diff": "{\"lhs\" : {\"outPages\":\"<com.itextpdf.testutils.CompareTool: java.util.List outPages>\",\"outPagesRef\":\"<com.itextpdf.testutils.CompareTool: java.util.List outPagesRef>\",\"cmpPages\":\"<com.itextpdf.testutils.CompareTool: java.util.List cmpPages>\",\"cmpPagesRef\":\"<com.itextpdf.testutils.CompareTool: java.util.List cmpPagesRef>\",\"compareByContentErrorsLimit\":\"<com.itextpdf.testutils.CompareTool: int compareByContentErrorsLimit>\",\"generateCompareByContentXmlReport\":\"<com.itextpdf.testutils.CompareTool: boolean generateCompareByContentXmlReport>\",\"xmlReportName\":\"<com.itextpdf.testutils.CompareTool: java.lang.String xmlReportName>\",\"floatComparisonError\":\"<com.itextpdf.testutils.CompareTool: double floatComparisonError>\",\"absoluteError\":\"<com.itextpdf.testutils.CompareTool: boolean absoluteError>\",\"<init>\":\"<com.itextpdf.testutils.CompareTool: void <init>()>\",\"compare.1\":[\"r1 := @parameter0: java.lang.String\", \"r2 := @parameter1: java.lang.String\", \"r3 := @parameter2: java.util.Map\", \"$r4 = specialinvoke r0.<com.itextpdf.testutils.CompareTool: java.lang.String compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)>(r1, r2, r3, null)\", \"return $r4\"],\"compare\":\"<com.itextpdf.testutils.CompareTool: java.lang.String compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)>\",\"runProcess\":\"<com.itextpdf.testutils.CompareTool: java.lang.Process runProcess(java.lang.String,java.lang.String)>\",\"compare.7\":\"$r6 = specialinvoke r0.<com.itextpdf.testutils.CompareTool: java.lang.String compare(java.lang.String,java.lang.String,java.util.Map)>(r3, r4, r5)\",\"setCompareByContentErrorsLimit\":\"<com.itextpdf.testutils.CompareTool: com.itextpdf.testutils.CompareTool setCompareByContentErrorsLimit(int)>\",\"setGenerateCompareByContentXmlReport\":\"<com.itextpdf.testutils.CompareTool: void setGenerateCompareByContentXmlReport(boolean)>\",\"setFloatAbsoluteError\":\"<com.itextpdf.testutils.CompareTool: com.itextpdf.testutils.CompareTool setFloatAbsoluteError(float)>\",\"setFloatRelativeError\":\"<com.itextpdf.testutils.CompareTool: com.itextpdf.testutils.CompareTool setFloatRelativeError(float)>\",\"getXmlReportName\":\"<com.itextpdf.testutils.CompareTool: java.lang.String getXmlReportName()>\",\"setXmlReportName\":\"<com.itextpdf.testutils.CompareTool: void setXmlReportName(java.lang.String)>\",\"compareByContent\":\"<com.itextpdf.testutils.CompareTool: java.lang.String compareByContent(java.lang.String,java.lang.String,java.util.Map)>\",\"compareByContent\":\"<com.itextpdf.testutils.CompareTool: java.lang.String compareByContent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>\",\"compareByContent\":\"<com.itextpdf.testutils.CompareTool: java.lang.String compareByContent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>\",\"loadPagesFromReader\":\"<com.itextpdf.testutils.CompareTool: void loadPagesFromReader(com.itextpdf.text.pdf.PdfReader,java.util.List,java.util.List)>\",\"addPagesFromDict\":\"<com.itextpdf.testutils.CompareTool: void addPagesFromDict(com.itextpdf.text.pdf.PdfObject,java.util.List,java.util.List)>\",\"compareObjects\":\"<com.itextpdf.testutils.CompareTool: boolean compareObjects(com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfObject,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)>\",\"compareDictionaries\":\"<com.itextpdf.testutils.CompareTool: boolean compareDictionaries(com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfDictionary)>\",\"compareDictionariesExtended\":\"<com.itextpdf.testutils.CompareTool: boolean compareDictionariesExtended(com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)>\",\"compareContentStreamsByParsing\":\"<com.itextpdf.testutils.CompareTool: boolean compareContentStreamsByParsing(com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfObject)>\",\"compareContentStreamsByParsing\":\"<com.itextpdf.testutils.CompareTool: boolean compareContentStreamsByParsing(com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfDictionary)>\",\"compareContentStreamsByParsingExtended\":\"<com.itextpdf.testutils.CompareTool: boolean compareContentStreamsByParsingExtended(com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)>\",\"compareInlineImagesExtended\":\"<com.itextpdf.testutils.CompareTool: boolean compareInlineImagesExtended(com.itextpdf.text.pdf.PdfContentParser,com.itextpdf.text.pdf.PdfContentParser,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)>\",\"compareStreams\":\"<com.itextpdf.testutils.CompareTool: boolean compareStreams(com.itextpdf.text.pdf.PRStream,com.itextpdf.text.pdf.PRStream)>\",\"compareStreamsExtended\":\"<com.itextpdf.testutils.CompareTool: boolean compareStreamsExtended(com.itextpdf.text.pdf.PRStream,com.itextpdf.text.pdf.PRStream,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)>\",\"compareArrays\":\"<com.itextpdf.testutils.CompareTool: boolean compareArrays(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfArray)>\",\"compareArraysExtended\":\"<com.itextpdf.testutils.CompareTool: boolean compareArraysExtended(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfArray,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)>\",\"compareNames\":\"<com.itextpdf.testutils.CompareTool: boolean compareNames(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfName)>\",\"compareNamesExtended\":\"<com.itextpdf.testutils.CompareTool: boolean compareNamesExtended(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfName,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)>\",\"compareNumbers\":\"<com.itextpdf.testutils.CompareTool: boolean compareNumbers(com.itextpdf.text.pdf.PdfNumber,com.itextpdf.text.pdf.PdfNumber)>\",\"compareNumbersExtended\":\"<com.itextpdf.testutils.CompareTool: boolean compareNumbersExtended(com.itextpdf.text.pdf.PdfNumber,com.itextpdf.text.pdf.PdfNumber,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)>\",\"compareStrings\":\"<com.itextpdf.testutils.CompareTool: boolean compareStrings(com.itextpdf.text.pdf.PdfString,com.itextpdf.text.pdf.PdfString)>\",\"compareStringsExtended\":\"<com.itextpdf.testutils.CompareTool: boolean compareStringsExtended(com.itextpdf.text.pdf.PdfString,com.itextpdf.text.pdf.PdfString,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)>\",\"compareLiterals\":\"<com.itextpdf.testutils.CompareTool: boolean compareLiterals(com.itextpdf.text.pdf.PdfLiteral,com.itextpdf.text.pdf.PdfLiteral)>\",\"compareLiteralsExtended\":\"<com.itextpdf.testutils.CompareTool: boolean compareLiteralsExtended(com.itextpdf.text.pdf.PdfLiteral,com.itextpdf.text.pdf.PdfLiteral,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)>\",\"compareBooleans\":\"<com.itextpdf.testutils.CompareTool: boolean compareBooleans(com.itextpdf.text.pdf.PdfBoolean,com.itextpdf.text.pdf.PdfBoolean)>\",\"compareBooleansExtended\":\"<com.itextpdf.testutils.CompareTool: boolean compareBooleansExtended(com.itextpdf.text.pdf.PdfBoolean,com.itextpdf.text.pdf.PdfBoolean,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)>\",\"compareXmp\":\"<com.itextpdf.testutils.CompareTool: java.lang.String compareXmp(byte[],byte[])>\",\"compareXmp\":\"<com.itextpdf.testutils.CompareTool: java.lang.String compareXmp(byte[],byte[],boolean)>\",\"compareXmp\":\"<com.itextpdf.testutils.CompareTool: java.lang.String compareXmp(java.lang.String,java.lang.String)>\",\"compareXmp\":\"<com.itextpdf.testutils.CompareTool: java.lang.String compareXmp(java.lang.String,java.lang.String,boolean)>\",\"compareDocumentInfo.4\":[\"virtualinvoke $r7.<java.io.PrintStream: void print(java.lang.String)>(\"[itext] INFO  Comparing document info.......\")\", \"r17 = null\"],\"compareDocumentInfo.17\":[\"$r16 = r5[i1]\", \"$r15 = r6[i1]\", \"$z0 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r15)\"],\"compareDocumentInfo.21\":[\"r17 = \"Document info fail\"\"],\"compareDocumentInfo.27\":[\"if r17 != null goto $r12 = <java.lang.System: java.io.PrintStream out>\", \"$r14 = <java.lang.System: java.io.PrintStream out>\", \"virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"OK\")\", \"goto [?= $r13 = <java.lang.System: java.io.PrintStream out>]\", \"$r12 = <java.lang.System: java.io.PrintStream out>\", \"virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"Fail\")\", \"$r13 = <java.lang.System: java.io.PrintStream out>\", \"virtualinvoke $r13.<java.io.PrintStream: void flush()>()\", \"return r17\"],\"linksAreSame\":\"<com.itextpdf.testutils.CompareTool: boolean linksAreSame(com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink,com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink)>\",\"compareLinks.4\":[\"virtualinvoke $r7.<java.io.PrintStream: void print(java.lang.String)>(\"[itext] INFO  Comparing link annotations....\")\", \"r27 = null\"],\"compareLinks.22\":[\"$r25 = newarray (java.lang.Object)[1]\"],\"compareLinks.24\":[\"$r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8)\", \"$r25[0] = $r26\", \"r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"Different number of links on page %d.\", $r25)\"],\"compareLinks.31\":[\"$r13 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i10)\"],\"compareLinks.33\":[\"$r15 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i10)\", \"$r16 = (com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink) $r15\", \"$z0 = specialinvoke r0.<com.itextpdf.testutils.CompareTool: boolean linksAreSame(com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink,com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink)>($r14, $r16)\"],\"compareLinks.37\":[\"$r17 = newarray (java.lang.Object)[3]\"],\"compareLinks.39\":[\"$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7)\", \"$r17[0] = $r18\", \"$r19 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i10)\", \"$r20 = (com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink) $r19\", \"$r21 = virtualinvoke $r20.<com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink: java.lang.String toString()>()\", \"$r17[1] = $r21\", \"$r22 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i10)\", \"$r23 = (com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink) $r22\", \"$r24 = virtualinvoke $r23.<com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink: java.lang.String toString()>()\", \"$r17[2] = $r24\", \"r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"Different links on page %d.\\n%s\\n%s\", $r17)\"],\"compareLinks.57\":[\"if r27 != null goto $r10 = <java.lang.System: java.io.PrintStream out>\", \"$r12 = <java.lang.System: java.io.PrintStream out>\", \"virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"OK\")\", \"goto [?= $r11 = <java.lang.System: java.io.PrintStream out>]\", \"$r10 = <java.lang.System: java.io.PrintStream out>\", \"virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\"Fail\")\", \"$r11 = <java.lang.System: java.io.PrintStream out>\", \"virtualinvoke $r11.<java.io.PrintStream: void flush()>()\", \"return r27\"],\"compareTagStructures.4\":[\"virtualinvoke $r7.<java.io.PrintStream: void print(java.lang.String)>(\"[itext] INFO  Comparing tag structures......\")\"],\"compareTagStructures.6\":[\"r4 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\".pdf\", \".cmp.xml\")\", \"r17 = null\"],\"compareTagStructures.26\":[\"r17 = \"The tag structures are different.\"\"],\"compareTagStructures.29\":[\"if r17 != null goto $r14 = <java.lang.System: java.io.PrintStream out>\", \"$r16 = <java.lang.System: java.io.PrintStream out>\", \"virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"OK\")\", \"goto [?= $r15 = <java.lang.System: java.io.PrintStream out>]\", \"$r14 = <java.lang.System: java.io.PrintStream out>\", \"virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"Fail\")\", \"$r15 = <java.lang.System: java.io.PrintStream out>\", \"virtualinvoke $r15.<java.io.PrintStream: void flush()>()\", \"return r17\"],\"access$100.1\":\"$r1 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String outPdfName>\",\"access$200\":\"<com.itextpdf.testutils.CompareTool: java.lang.String access$200(com.itextpdf.testutils.CompareTool)>\",\"<init>\":null,\"compare\":null,\"compareXmp\":null,\"compareXmp\":null,\"access$000\":null},\"rhs\" : {\"outPages\":null,\"outPagesRef\":null,\"cmpPages\":null,\"cmpPagesRef\":null,\"compareByContentErrorsLimit\":null,\"generateCompareByContentXmlReport\":null,\"xmlReportName\":null,\"floatComparisonError\":null,\"absoluteError\":null,\"<init>\":null,\"compare.1\":[\"r204 := @parameter0: java.lang.String\", \"r1 := @parameter1: java.lang.String\", \"r2 := @parameter2: java.util.Map\", \"$r5 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String gsExec>\", \"if $r5 != null goto r245 = new java.io.File\", \"return \"Path to GhostScript is not specified. Please use -DgsExec=<path_to_ghostscript> (e.g. -DgsExec=\\\"C:/Program Files/gs/gs8.64/bin/gswin32c.exe\\\")\"\", \"r245 = new java.io.File\", \"$r7 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String gsExec>\", \"specialinvoke r245.<java.io.File: void <init>(java.lang.String)>($r7)\", \"$z1 = virtualinvoke r245.<java.io.File: boolean exists()>()\", \"if $z1 != 0 goto $z2 = virtualinvoke r204.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\", \"r246 = new java.lang.StringBuilder\", \"specialinvoke r246.<java.lang.StringBuilder: void <init>()>()\", \"r247 = new java.io.File\", \"$r199 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String gsExec>\", \"specialinvoke r247.<java.io.File: void <init>(java.lang.String)>($r199)\", \"$r200 = virtualinvoke r247.<java.io.File: java.lang.String getAbsolutePath()>()\", \"$r201 = virtualinvoke r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r200)\", \"$r202 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" does not exist\")\", \"$r203 = virtualinvoke $r202.<java.lang.StringBuilder: java.lang.String toString()>()\", \"return $r203\", \"$z2 = virtualinvoke r204.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\", \"if $z2 != 0 goto r249 = new java.io.File\", \"r248 = new java.lang.StringBuilder\", \"specialinvoke r248.<java.lang.StringBuilder: void <init>()>()\", \"$r195 = virtualinvoke r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r204)\", \"$r196 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"r204 = virtualinvoke $r196.<java.lang.StringBuilder: java.lang.String toString()>()\", \"r249 = new java.io.File\", \"specialinvoke r249.<java.io.File: void <init>(java.lang.String)>(r204)\", \"$z3 = virtualinvoke r249.<java.io.File: boolean exists()>()\", \"if $z3 != 0 goto r250 = new com.itextpdf.testutils.CompareTool$PngFileFilter\", \"virtualinvoke r249.<java.io.File: boolean mkdir()>()\", \"goto [?= r253 = new java.io.File]\", \"r250 = new com.itextpdf.testutils.CompareTool$PngFileFilter\", \"specialinvoke r250.<com.itextpdf.testutils.CompareTool$PngFileFilter: void <init>(com.itextpdf.testutils.CompareTool)>(r0)\", \"r291 = (java.io.FileFilter) r250\", \"r205 = virtualinvoke r249.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>(r291)\", \"i12 = lengthof r205\", \"i13 = 0\", \"if i13 >= i12 goto r251 = new com.itextpdf.testutils.CompareTool$CmpPngFileFilter\", \"r207 = r205[i13]\", \"virtualinvoke r207.<java.io.File: boolean delete()>()\", \"i13 = i13 + 1\", \"goto [?= (branch)]\", \"r251 = new com.itextpdf.testutils.CompareTool$CmpPngFileFilter\", \"specialinvoke r251.<com.itextpdf.testutils.CompareTool$CmpPngFileFilter: void <init>(com.itextpdf.testutils.CompareTool)>(r0)\", \"r292 = (java.io.FileFilter) r251\", \"r208 = virtualinvoke r249.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>(r292)\", \"i14 = lengthof r208\", \"i15 = 0\", \"if i15 >= i14 goto r253 = new java.io.File\", \"r210 = r208[i15]\", \"virtualinvoke r210.<java.io.File: boolean delete()>()\", \"i15 = i15 + 1\", \"goto [?= (branch)]\", \"r253 = new java.io.File\", \"r252 = new java.lang.StringBuilder\", \"specialinvoke r252.<java.lang.StringBuilder: void <init>()>()\", \"$r13 = virtualinvoke r252.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r204)\", \"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke r253.<java.io.File: void <init>(java.lang.String)>($r15)\", \"$z4 = virtualinvoke r253.<java.io.File: boolean exists()>()\", \"if $z4 == 0 goto (branch)\", \"virtualinvoke r253.<java.io.File: boolean delete()>()\", \"if r2 == null goto $z14 = virtualinvoke r249.<java.io.File: boolean exists()>()\", \"$z6 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>()\", \"if $z6 != 0 goto $z14 = virtualinvoke r249.<java.io.File: boolean exists()>()\", \"r254 = new com.itextpdf.text.pdf.PdfReader\", \"$r156 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String cmpPdf>\", \"specialinvoke r254.<com.itextpdf.text.pdf.PdfReader: void <init>(java.lang.String)>($r156)\", \"r255 = new com.itextpdf.text.pdf.PdfReader\", \"$r158 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String outPdf>\", \"specialinvoke r255.<com.itextpdf.text.pdf.PdfReader: void <init>(java.lang.String)>($r158)\", \"r258 = new com.itextpdf.text.pdf.PdfStamper\", \"r257 = new java.io.FileOutputStream\", \"r256 = new java.lang.StringBuilder\", \"specialinvoke r256.<java.lang.StringBuilder: void <init>()>()\", \"$r162 = virtualinvoke r256.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r204)\", \"$r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ignored_areas_\")\", \"$r164 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String outPdfName>\", \"$r165 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r164)\", \"$r166 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke r257.<java.io.FileOutputStream: void <init>(java.lang.String)>($r166)\", \"specialinvoke r258.<com.itextpdf.text.pdf.PdfStamper: void <init>(com.itextpdf.text.pdf.PdfReader,java.io.OutputStream)>(r255, r257)\", \"r261 = new com.itextpdf.text.pdf.PdfStamper\", \"r260 = new java.io.FileOutputStream\", \"r259 = new java.lang.StringBuilder\", \"specialinvoke r259.<java.lang.StringBuilder: void <init>()>()\", \"$r170 = virtualinvoke r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r204)\", \"$r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ignored_areas_\")\", \"$r172 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String cmpPdfName>\", \"$r173 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r172)\", \"$r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke r260.<java.io.FileOutputStream: void <init>(java.lang.String)>($r174)\", \"specialinvoke r261.<com.itextpdf.text.pdf.PdfStamper: void <init>(com.itextpdf.text.pdf.PdfReader,java.io.OutputStream)>(r254, r260)\", \"$r175 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>()\", \"r216 = interfaceinvoke $r175.<java.util.Set: java.util.Iterator iterator()>()\", \"$z7 = interfaceinvoke r216.<java.util.Iterator: boolean hasNext()>()\", \"if $z7 == 0 goto virtualinvoke r258.<com.itextpdf.text.pdf.PdfStamper: void close()>()\", \"$r188 = interfaceinvoke r216.<java.util.Iterator: java.lang.Object next()>()\", \"r217 = (java.util.Map$Entry) $r188\", \"$r189 = interfaceinvoke r217.<java.util.Map$Entry: java.lang.Object getKey()>()\", \"$r190 = (java.lang.Integer) $r189\", \"i16 = virtualinvoke $r190.<java.lang.Integer: int intValue()>()\", \"$r191 = interfaceinvoke r217.<java.util.Map$Entry: java.lang.Object getValue()>()\", \"r218 = (java.util.List) $r191\", \"if r218 == null goto (branch)\", \"$z8 = interfaceinvoke r218.<java.util.List: boolean isEmpty()>()\", \"if $z8 != 0 goto (branch)\", \"r219 = virtualinvoke r258.<com.itextpdf.text.pdf.PdfStamper: com.itextpdf.text.pdf.PdfContentByte getOverContent(int)>(i16)\", \"r220 = virtualinvoke r261.<com.itextpdf.text.pdf.PdfStamper: com.itextpdf.text.pdf.PdfContentByte getOverContent(int)>(i16)\", \"r221 = interfaceinvoke r218.<java.util.List: java.util.Iterator iterator()>()\", \"$z9 = interfaceinvoke r221.<java.util.Iterator: boolean hasNext()>()\", \"if $z9 == 0 goto (branch)\", \"$r192 = interfaceinvoke r221.<java.util.Iterator: java.lang.Object next()>()\", \"r222 = (com.itextpdf.text.Rectangle) $r192\", \"$r193 = <com.itextpdf.text.BaseColor: com.itextpdf.text.BaseColor BLACK>\", \"virtualinvoke r222.<com.itextpdf.text.Rectangle: void setBackgroundColor(com.itextpdf.text.BaseColor)>($r193)\", \"virtualinvoke r219.<com.itextpdf.text.pdf.PdfContentByte: void rectangle(com.itextpdf.text.Rectangle)>(r222)\", \"virtualinvoke r220.<com.itextpdf.text.pdf.PdfContentByte: void rectangle(com.itextpdf.text.Rectangle)>(r222)\", \"goto [?= $z9 = interfaceinvoke r221.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $z7 = interfaceinvoke r216.<java.util.Iterator: boolean hasNext()>()]\", \"virtualinvoke r258.<com.itextpdf.text.pdf.PdfStamper: void close()>()\", \"virtualinvoke r261.<com.itextpdf.text.pdf.PdfStamper: void close()>()\", \"virtualinvoke r255.<com.itextpdf.text.pdf.PdfReader: void close()>()\", \"virtualinvoke r254.<com.itextpdf.text.pdf.PdfReader: void close()>()\", \"r262 = new java.lang.StringBuilder\", \"specialinvoke r262.<java.lang.StringBuilder: void <init>()>()\", \"$r177 = virtualinvoke r262.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r204)\", \"$r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ignored_areas_\")\", \"$r179 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String outPdfName>\", \"$r180 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r179)\", \"$r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.String toString()>()\", \"r263 = new java.lang.StringBuilder\", \"specialinvoke r263.<java.lang.StringBuilder: void <init>()>()\", \"$r183 = virtualinvoke r263.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r204)\", \"$r184 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ignored_areas_\")\", \"$r185 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String cmpPdfName>\", \"$r186 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r185)\", \"$r187 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke r0.<com.itextpdf.testutils.CompareTool: void init(java.lang.String,java.lang.String)>($r181, $r187)\", \"$z14 = virtualinvoke r249.<java.io.File: boolean exists()>()\", \"if $z14 == 0 goto $r17 = \"Cannot open target directory for <filename>.\"\", \"virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()\", \"$r21 = \" -dNOPAUSE -dBATCH -sDEVICE=png16m -r150 -sOutputFile=<outputfile> <inputfile>\"\", \"r264 = new java.lang.StringBuilder\", \"specialinvoke r264.<java.lang.StringBuilder: void <init>()>()\", \"$r22 = virtualinvoke r264.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r204)\", \"$r23 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String cmpImage>\", \"$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r26 = virtualinvoke $r21.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<outputfile>\", $r25)\", \"$r27 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String cmpPdf>\", \"r223 = virtualinvoke $r26.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<inputfile>\", $r27)\", \"$r28 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()\", \"r265 = new java.lang.StringBuilder\", \"specialinvoke r265.<java.lang.StringBuilder: void <init>()>()\", \"$r30 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String gsExec>\", \"$r31 = virtualinvoke r265.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)\", \"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r223)\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()\", \"r224 = virtualinvoke $r28.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r33)\", \"r267 = new java.io.BufferedReader\", \"r266 = new java.io.InputStreamReader\", \"$r36 = virtualinvoke r224.<java.lang.Process: java.io.InputStream getInputStream()>()\", \"specialinvoke r266.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r36)\", \"specialinvoke r267.<java.io.BufferedReader: void <init>(java.io.Reader)>(r266)\", \"r269 = new java.io.BufferedReader\", \"r268 = new java.io.InputStreamReader\", \"$r39 = virtualinvoke r224.<java.lang.Process: java.io.InputStream getErrorStream()>()\", \"specialinvoke r268.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r39)\", \"specialinvoke r269.<java.io.BufferedReader: void <init>(java.io.Reader)>(r268)\", \"$r40 = virtualinvoke r267.<java.io.BufferedReader: java.lang.String readLine()>()\", \"if $r40 == null goto virtualinvoke r267.<java.io.BufferedReader: void close()>()\", \"$r154 = <java.lang.System: java.io.PrintStream out>\", \"virtualinvoke $r154.<java.io.PrintStream: void println(java.lang.String)>($r40)\", \"goto [?= $r40 = virtualinvoke r267.<java.io.BufferedReader: java.lang.String readLine()>()]\", \"virtualinvoke r267.<java.io.BufferedReader: void close()>()\", \"$r41 = virtualinvoke r269.<java.io.BufferedReader: java.lang.String readLine()>()\", \"if $r41 == null goto virtualinvoke r269.<java.io.BufferedReader: void close()>()\", \"$r153 = <java.lang.System: java.io.PrintStream out>\", \"virtualinvoke $r153.<java.io.PrintStream: void println(java.lang.String)>($r41)\", \"goto [?= $r41 = virtualinvoke r269.<java.io.BufferedReader: java.lang.String readLine()>()]\", \"virtualinvoke r269.<java.io.BufferedReader: void close()>()\", \"$i1 = virtualinvoke r224.<java.lang.Process: int waitFor()>()\", \"if $i1 != 0 goto $r43 = \"GhostScript failed for <filename>.\"\", \"virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()\", \"$r47 = \" -dNOPAUSE -dBATCH -sDEVICE=png16m -r150 -sOutputFile=<outputfile> <inputfile>\"\", \"r270 = new java.lang.StringBuilder\", \"specialinvoke r270.<java.lang.StringBuilder: void <init>()>()\", \"$r48 = virtualinvoke r270.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r204)\", \"$r49 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String outImage>\", \"$r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49)\", \"$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r52 = virtualinvoke $r47.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<outputfile>\", $r51)\", \"$r53 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String outPdf>\", \"r229 = virtualinvoke $r52.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<inputfile>\", $r53)\", \"$r54 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()\", \"r271 = new java.lang.StringBuilder\", \"specialinvoke r271.<java.lang.StringBuilder: void <init>()>()\", \"$r56 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String gsExec>\", \"$r57 = virtualinvoke r271.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)\", \"$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r229)\", \"$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()\", \"r230 = virtualinvoke $r54.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r59)\", \"r273 = new java.io.BufferedReader\", \"r272 = new java.io.InputStreamReader\", \"$r62 = virtualinvoke r230.<java.lang.Process: java.io.InputStream getInputStream()>()\", \"specialinvoke r272.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r62)\", \"specialinvoke r273.<java.io.BufferedReader: void <init>(java.io.Reader)>(r272)\", \"r275 = new java.io.BufferedReader\", \"r274 = new java.io.InputStreamReader\", \"$r65 = virtualinvoke r230.<java.lang.Process: java.io.InputStream getErrorStream()>()\", \"specialinvoke r274.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r65)\", \"specialinvoke r275.<java.io.BufferedReader: void <init>(java.io.Reader)>(r274)\", \"$r66 = virtualinvoke r273.<java.io.BufferedReader: java.lang.String readLine()>()\", \"if $r66 == null goto virtualinvoke r273.<java.io.BufferedReader: void close()>()\", \"$r152 = <java.lang.System: java.io.PrintStream out>\", \"virtualinvoke $r152.<java.io.PrintStream: void println(java.lang.String)>($r66)\", \"goto [?= $r66 = virtualinvoke r273.<java.io.BufferedReader: java.lang.String readLine()>()]\", \"virtualinvoke r273.<java.io.BufferedReader: void close()>()\", \"$r67 = virtualinvoke r275.<java.io.BufferedReader: java.lang.String readLine()>()\", \"if $r67 == null goto virtualinvoke r275.<java.io.BufferedReader: void close()>()\", \"$r151 = <java.lang.System: java.io.PrintStream out>\", \"virtualinvoke $r151.<java.io.PrintStream: void println(java.lang.String)>($r67)\", \"goto [?= $r67 = virtualinvoke r275.<java.io.BufferedReader: java.lang.String readLine()>()]\", \"virtualinvoke r275.<java.io.BufferedReader: void close()>()\", \"i17 = virtualinvoke r230.<java.lang.Process: int waitFor()>()\", \"if i17 != 0 goto $r69 = \"GhostScript failed for <filename>.\"\", \"r276 = new com.itextpdf.testutils.CompareTool$PngFileFilter\", \"specialinvoke r276.<com.itextpdf.testutils.CompareTool$PngFileFilter: void <init>(com.itextpdf.testutils.CompareTool)>(r0)\", \"r293 = (java.io.FileFilter) r276\", \"r235 = virtualinvoke r249.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>(r293)\", \"r277 = new com.itextpdf.testutils.CompareTool$CmpPngFileFilter\", \"specialinvoke r277.<com.itextpdf.testutils.CompareTool$CmpPngFileFilter: void <init>(com.itextpdf.testutils.CompareTool)>(r0)\", \"r294 = (java.io.FileFilter) r277\", \"r236 = virtualinvoke r249.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>(r294)\", \"z15 = 0\", \"$i3 = lengthof r235\", \"$i2 = lengthof r236\", \"if $i3 == $i2 goto $i5 = lengthof r235\", \"z15 = 1\", \"$i5 = lengthof r235\", \"$i4 = lengthof r236\", \"i18 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4)\", \"if i18 >= 1 goto r278 = new com.itextpdf.testutils.CompareTool$ImageNameComparator\", \"return \"No files for comparing!!!\\nThe result or sample pdf file is not processed by GhostScript.\"\", \"r278 = new com.itextpdf.testutils.CompareTool$ImageNameComparator\", \"specialinvoke r278.<com.itextpdf.testutils.CompareTool$ImageNameComparator: void <init>(com.itextpdf.testutils.CompareTool)>(r0)\", \"r295 = (java.util.Comparator) r278\", \"staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r235, r295)\", \"r279 = new com.itextpdf.testutils.CompareTool$ImageNameComparator\", \"specialinvoke r279.<com.itextpdf.testutils.CompareTool$ImageNameComparator: void <init>(com.itextpdf.testutils.CompareTool)>(r0)\", \"r296 = (java.util.Comparator) r279\", \"staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r236, r296)\", \"r237 = null\", \"i19 = 0\", \"if i19 >= i18 goto (branch)\", \"$r79 = <java.lang.System: java.io.PrintStream out>\", \"r280 = new java.lang.StringBuilder\", \"specialinvoke r280.<java.lang.StringBuilder: void <init>()>()\", \"$r80 = virtualinvoke r280.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Comparing page \")\", \"$i6 = i19 + 1\", \"$r81 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6)\", \"$r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)\", \"$r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\")\", \"$r84 = r235[i19]\", \"$r85 = virtualinvoke $r84.<java.io.File: java.lang.String getAbsolutePath()>()\", \"$r86 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85)\", \"$r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")...\")\", \"$r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>()\", \"virtualinvoke $r79.<java.io.PrintStream: void print(java.lang.String)>($r88)\", \"r281 = new java.io.FileInputStream\", \"$r90 = r235[i19]\", \"specialinvoke r281.<java.io.FileInputStream: void <init>(java.io.File)>($r90)\", \"r282 = new java.io.FileInputStream\", \"$r92 = r236[i19]\", \"specialinvoke r282.<java.io.FileInputStream: void <init>(java.io.File)>($r92)\", \"z0 = specialinvoke r0.<com.itextpdf.testutils.CompareTool: boolean compareStreams(java.io.InputStream,java.io.InputStream)>(r281, r282)\", \"virtualinvoke r281.<java.io.FileInputStream: void close()>()\", \"virtualinvoke r282.<java.io.FileInputStream: void close()>()\", \"if z0 != 0 goto $r93 = <java.lang.System: java.io.PrintStream out>\", \"r283 = new java.io.File\", \"$r95 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String compareExec>\", \"specialinvoke r283.<java.io.File: void <init>(java.lang.String)>($r95)\", \"$z5 = virtualinvoke r283.<java.io.File: boolean exists()>()\", \"if $z5 == 0 goto $r97 = \"File <filename> differs on page <pagenumber>.\"\", \"virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()\", \"$r105 = \" <image1> <image2> <difference>\"\", \"$r104 = r235[i19]\", \"$r106 = virtualinvoke $r104.<java.io.File: java.lang.String getAbsolutePath()>()\", \"$r107 = virtualinvoke $r105.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<image1>\", $r106)\", \"$r108 = r236[i19]\", \"$r109 = virtualinvoke $r108.<java.io.File: java.lang.String getAbsolutePath()>()\", \"$r110 = virtualinvoke $r107.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<image2>\", $r109)\", \"r284 = new java.lang.StringBuilder\", \"specialinvoke r284.<java.lang.StringBuilder: void <init>()>()\", \"$r112 = virtualinvoke r284.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r204)\", \"$r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$i8 = i19 + 1\", \"$r114 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8)\", \"$r115 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r114)\", \"$r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".png\")\", \"$r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>()\", \"r4 = virtualinvoke $r110.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<difference>\", $r117)\", \"$r118 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()\", \"r285 = new java.lang.StringBuilder\", \"specialinvoke r285.<java.lang.StringBuilder: void <init>()>()\", \"$r120 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String compareExec>\", \"$r121 = virtualinvoke r285.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r120)\", \"$r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)\", \"$r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>()\", \"r240 = virtualinvoke $r118.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r123)\", \"r287 = new java.io.BufferedReader\", \"r286 = new java.io.InputStreamReader\", \"$r126 = virtualinvoke r240.<java.lang.Process: java.io.InputStream getErrorStream()>()\", \"specialinvoke r286.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r126)\", \"specialinvoke r287.<java.io.BufferedReader: void <init>(java.io.Reader)>(r286)\", \"$r127 = virtualinvoke r287.<java.io.BufferedReader: java.lang.String readLine()>()\", \"if $r127 == null goto virtualinvoke r287.<java.io.BufferedReader: void close()>()\", \"$r150 = <java.lang.System: java.io.PrintStream out>\", \"virtualinvoke $r150.<java.io.PrintStream: void println(java.lang.String)>($r127)\", \"goto [?= $r127 = virtualinvoke r287.<java.io.BufferedReader: java.lang.String readLine()>()]\", \"virtualinvoke r287.<java.io.BufferedReader: void close()>()\", \"i0 = virtualinvoke r240.<java.lang.Process: int waitFor()>()\", \"if i0 != 0 goto $r129 = \"File <filename> differs on page <pagenumber>.\"\", \"if r237 != null goto r289 = new java.lang.StringBuilder\", \"$r139 = \"File <filename> differs on page <pagenumber>.\"\", \"$r138 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String outPdf>\", \"$r140 = virtualinvoke $r139.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<filename>\", $r138)\", \"$i10 = i19 + 1\", \"$r141 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i10)\", \"r243 = virtualinvoke $r140.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<pagenumber>\", $r141)\", \"r288 = new java.lang.StringBuilder\", \"specialinvoke r288.<java.lang.StringBuilder: void <init>()>()\", \"$r143 = virtualinvoke r288.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r243)\", \"$r144 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\nPlease, examine \")\", \"$r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r204)\", \"$r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$i11 = i19 + 1\", \"$r147 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i11)\", \"$r148 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r147)\", \"$r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".png for more details.\")\", \"r237 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= (branch)]\", \"r289 = new java.lang.StringBuilder\", \"specialinvoke r289.<java.lang.StringBuilder: void <init>()>()\", \"$r134 = virtualinvoke r289.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"File \")\", \"$r135 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String outPdf>\", \"$r136 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r135)\", \"$r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" differs.\\nPlease, examine difference images for more details.\")\", \"r237 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= (branch)]\", \"$r129 = \"File <filename> differs on page <pagenumber>.\"\", \"$r128 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String outPdf>\", \"$r130 = virtualinvoke $r129.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<filename>\", $r128)\", \"$i9 = i19 + 1\", \"$r131 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9)\", \"r237 = virtualinvoke $r130.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<pagenumber>\", $r131)\", \"goto [?= $r132 = <java.lang.System: java.io.PrintStream out>]\", \"$r97 = \"File <filename> differs on page <pagenumber>.\"\", \"$r96 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String outPdf>\", \"$r98 = virtualinvoke $r97.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<filename>\", $r96)\", \"$i7 = i19 + 1\", \"$r99 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7)\", \"r244 = virtualinvoke $r98.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<pagenumber>\", $r99)\", \"r290 = new java.lang.StringBuilder\", \"specialinvoke r290.<java.lang.StringBuilder: void <init>()>()\", \"$r101 = virtualinvoke r290.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r244)\", \"$r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\nYou can optionally specify path to ImageMagick compare tool (e.g. -DcompareExec=\\\"C:/Program Files/ImageMagick-6.5.4-2/compare.exe\\\") to visualize differences.\")\", \"r237 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= (branch)]\", \"$r132 = <java.lang.System: java.io.PrintStream out>\", \"virtualinvoke $r132.<java.io.PrintStream: void println(java.lang.String)>(r237)\", \"goto [?= i19 = i19 + 1]\", \"$r93 = <java.lang.System: java.io.PrintStream out>\", \"virtualinvoke $r93.<java.io.PrintStream: void println(java.lang.String)>(\"done.\")\", \"i19 = i19 + 1\", \"goto [?= (branch)]\", \"if r237 == null goto (branch)\", \"return r237\", \"if z15 == 0 goto (branch)\", \"$r76 = \"Unexpected number of pages for <filename>.\"\", \"$r75 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String outPdf>\", \"$r77 = virtualinvoke $r76.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<filename>\", $r75)\", \"return $r77\", \"goto [?= (branch)]\", \"$r69 = \"GhostScript failed for <filename>.\"\", \"$r68 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String outPdf>\", \"$r70 = virtualinvoke $r69.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<filename>\", $r68)\", \"return $r70\", \"goto [?= (branch)]\", \"$r43 = \"GhostScript failed for <filename>.\"\", \"$r42 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String cmpPdf>\", \"$r44 = virtualinvoke $r43.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<filename>\", $r42)\", \"return $r44\", \"goto [?= return null]\", \"$r17 = \"Cannot open target directory for <filename>.\"\", \"$r16 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String outPdf>\", \"$r18 = virtualinvoke $r17.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"<filename>\", $r16)\", \"return $r18\", \"return null\"],\"compare\":null,\"runProcess\":null,\"compare.7\":\"$r6 = virtualinvoke r0.<com.itextpdf.testutils.CompareTool: java.lang.String compare(java.lang.String,java.lang.String,java.util.Map)>(r3, r4, r5)\",\"setCompareByContentErrorsLimit\":null,\"setGenerateCompareByContentXmlReport\":null,\"setFloatAbsoluteError\":null,\"setFloatRelativeError\":null,\"getXmlReportName\":null,\"setXmlReportName\":null,\"compareByContent\":null,\"compareByContent\":null,\"compareByContent\":null,\"loadPagesFromReader\":null,\"addPagesFromDict\":null,\"compareObjects\":null,\"compareDictionaries\":null,\"compareDictionariesExtended\":null,\"compareContentStreamsByParsing\":null,\"compareContentStreamsByParsing\":null,\"compareContentStreamsByParsingExtended\":null,\"compareInlineImagesExtended\":null,\"compareStreams\":null,\"compareStreamsExtended\":null,\"compareArrays\":null,\"compareArraysExtended\":null,\"compareNames\":null,\"compareNamesExtended\":null,\"compareNumbers\":null,\"compareNumbersExtended\":null,\"compareStrings\":null,\"compareStringsExtended\":null,\"compareLiterals\":null,\"compareLiteralsExtended\":null,\"compareBooleans\":null,\"compareBooleansExtended\":null,\"compareXmp\":null,\"compareXmp\":null,\"compareXmp\":null,\"compareXmp\":null,\"compareDocumentInfo.4\":[\"virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Comparing document info...\")\", \"r14 = null\"],\"compareDocumentInfo.17\":[\"$r13 = r5[i1]\", \"$r12 = r6[i1]\", \"$z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12)\"],\"compareDocumentInfo.21\":[\"r14 = \"Document info fail\"\"],\"compareDocumentInfo.27\":[\"return r14\"],\"linksAreSame\":null,\"compareLinks.4\":[\"virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Comparing link annotations...\")\", \"r26 = null\"],\"compareLinks.22\":[\"$r24 = newarray (java.lang.Object)[1]\"],\"compareLinks.24\":[\"$r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8)\", \"$r24[0] = $r25\", \"r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"Different number of links on page %d.\", $r24)\"],\"compareLinks.31\":[\"$r10 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i10)\", \"$r11 = (com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink) $r10\", \"$r12 = virtualinvoke $r11.<com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink: java.lang.String toString()>()\", \"$r13 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i10)\"],\"compareLinks.33\":[\"$r15 = virtualinvoke $r14.<com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink: java.lang.String toString()>()\", \"$z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r15)\"],\"compareLinks.37\":[\"$r16 = newarray (java.lang.Object)[3]\"],\"compareLinks.39\":[\"$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7)\", \"$r16[0] = $r17\", \"$r18 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i10)\", \"$r19 = (com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink) $r18\", \"$r20 = virtualinvoke $r19.<com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink: java.lang.String toString()>()\", \"$r16[1] = $r20\", \"$r21 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i10)\", \"$r22 = (com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink) $r21\", \"$r23 = virtualinvoke $r22.<com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink: java.lang.String toString()>()\", \"$r16[2] = $r23\", \"r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"Different links on page %d.\\n%s\\n%s\", $r16)\"],\"compareLinks.57\":[\"return r26\"],\"compareTagStructures.4\":[\"virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Comparing tag structures...\")\"],\"compareTagStructures.6\":[\"r4 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\".pdf\", \".xml\")\", \"r14 = null\"],\"compareTagStructures.26\":[\"r14 = \"The tag structures are different.\"\"],\"compareTagStructures.29\":[\"return r14\"],\"access$100.1\":\"$r1 = r0.<com.itextpdf.testutils.CompareTool: java.lang.String cmpPdfName>\",\"access$200\":null,\"<init>\":\"<com.itextpdf.testutils.CompareTool: void <init>(java.lang.String,java.lang.String)>\",\"compare\":\"<com.itextpdf.testutils.CompareTool: java.lang.String compare(java.lang.String,java.lang.String)>\",\"compareXmp\":\"<com.itextpdf.testutils.CompareTool: java.lang.String compareXmp()>\",\"compareXmp\":\"<com.itextpdf.testutils.CompareTool: java.lang.String compareXmp(boolean)>\",\"access$000\":\"<com.itextpdf.testutils.CompareTool: java.lang.String access$000(com.itextpdf.testutils.CompareTool)>\"}}",
            "affectedFile": "/com/itextpdf/testutils/CompareTool.class"
        },
        {
            "contained": false,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/testutils/CompareTool.class",
            "qname": "com.itextpdf.testutils.CompareTool$CompareResult",
            "diff": null,
            "affectedFile": "/com/itextpdf/testutils/CompareTool.class"
        },
        {
            "contained": false,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/testutils/CompareTool.class",
            "qname": "com.itextpdf.testutils.CompareTool$CompareResult.writeReportToXml(OutputStream)",
            "diff": null,
            "affectedFile": "/com/itextpdf/testutils/CompareTool.class"
        },
        {
            "contained": false,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/testutils/CompareTool.class",
            "qname": "com.itextpdf.testutils.CompareTool$SafeEmptyEntityResolver",
            "diff": null,
            "affectedFile": "/com/itextpdf/testutils/CompareTool.class"
        },
        {
            "contained": false,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/testutils/CompareTool.class",
            "qname": "com.itextpdf.testutils.CompareTool$SafeEmptyEntityResolver.resolveEntity(String,String)",
            "diff": null,
            "affectedFile": "/com/itextpdf/testutils/CompareTool.class"
        },
        {
            "contained": true,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/testutils/CompareTool.class",
            "qname": "com.itextpdf.testutils.CompareTool.compareXmls(String,String)",
            "diff": "",
            "affectedFile": "/com/itextpdf/testutils/CompareTool.class"
        },
        {
            "contained": true,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/testutils/CompareTool.class",
            "qname": "com.itextpdf.testutils.CompareTool.compareXmls(byte[],byte[])",
            "diff": "",
            "affectedFile": "/com/itextpdf/testutils/CompareTool.class"
        },
        {
            "contained": true,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/text/pdf/XfaForm.class",
            "qname": "com.itextpdf.text.pdf.XfaForm",
            "diff": "{\"lhs\" : {\"extractNodes.1\":[\"$r3 = r0.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Document domDocument>\", \"r1 = staticinvoke <com.itextpdf.text.pdf.XfaForm: java.util.Map extractXFANodes(org.w3c.dom.Document)>($r3)\"],\"extractNodes.5\":[\"$r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"template\")\", \"$r13 = (org.w3c.dom.Node) $r12\", \"r0.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Node templateNode> = $r13\", \"$r14 = new com.itextpdf.text.pdf.XfaForm$Xml2SomTemplate\", \"$r15 = r0.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Node templateNode>\", \"specialinvoke $r14.<com.itextpdf.text.pdf.XfaForm$Xml2SomTemplate: void <init>(org.w3c.dom.Node)>($r15)\", \"r0.<com.itextpdf.text.pdf.XfaForm: com.itextpdf.text.pdf.XfaForm$Xml2SomTemplate templateSom> = $r14\"],\"extractNodes.13\":[\"if $z1 == 0 goto $r17 = r0.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Node datasetsNode>\"],\"extractNodes.17\":[\"$r8 = r0.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Node datasetsNode>\", \"r2 = specialinvoke r0.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Node findDataNode(org.w3c.dom.Node)>($r8)\", \"$r9 = new com.itextpdf.text.pdf.XfaForm$Xml2SomDatasets\", \"if r2 == null goto $r10 = r0.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Node datasetsNode>\", \"$r16 = r2\", \"goto [?= specialinvoke $r9.<com.itextpdf.text.pdf.XfaForm$Xml2SomDatasets: void <init>(org.w3c.dom.Node)>($r16)]\", \"$r10 = r0.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Node datasetsNode>\", \"$r16 = interfaceinvoke $r10.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>()\", \"specialinvoke $r9.<com.itextpdf.text.pdf.XfaForm$Xml2SomDatasets: void <init>(org.w3c.dom.Node)>($r16)\", \"r0.<com.itextpdf.text.pdf.XfaForm: com.itextpdf.text.pdf.XfaForm$Xml2SomDatasets datasetsSom> = $r9\", \"$r17 = r0.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Node datasetsNode>\", \"if $r17 != null goto return\"],\"findDataNode\":\"<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Node findDataNode(org.w3c.dom.Node)>\",\"findFieldName.10\":[\"if $z1 == 0 goto $r12 = new com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch\"],\"findFieldName.12\":[\"if $z2 == 0 goto $r12 = new com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch\", \"$r14 = new com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch\"],\"findFieldName.17\":[\"specialinvoke $r14.<com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch: void <init>(java.util.Collection)>($r17)\", \"r0.<com.itextpdf.text.pdf.XfaForm: com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch acroFieldsSom> = $r14\"],\"findFieldName.20\":[\"$r12 = new com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch\"],\"findFieldName.22\":[\"specialinvoke $r12.<com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch: void <init>(java.util.Collection)>($r13)\", \"r0.<com.itextpdf.text.pdf.XfaForm: com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch acroFieldsSom> = $r12\"],\"findFieldName.35\":[\"$r7 = virtualinvoke $r5.<com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch: java.lang.String inverseSearchGlobal(java.util.ArrayList)>($r6)\"],\"findDatasetsName.9\":[\"$r6 = virtualinvoke $r4.<com.itextpdf.text.pdf.XfaForm$Xml2SomDatasets: java.lang.String inverseSearchGlobal(java.util.ArrayList)>($r5)\"],\"fillXfaForm.9\":[\"$r5 := @caughtexception\", \"$r6 = new com.itextpdf.text.ExceptionConverter\", \"specialinvoke $r6.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>($r5)\", \"throw $r6\"],\"fillXfaForm.14\":[\"$r8 = new com.itextpdf.text.ExceptionConverter\", \"specialinvoke $r8.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>($r7)\", \"throw $r8\"]},\"rhs\" : {\"extractNodes.1\":[\"$r2 = r0.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Document domDocument>\", \"r1 = staticinvoke <com.itextpdf.text.pdf.XfaForm: java.util.Map extractXFANodes(org.w3c.dom.Document)>($r2)\"],\"extractNodes.5\":[\"$r11 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"template\")\", \"$r12 = (org.w3c.dom.Node) $r11\", \"r0.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Node templateNode> = $r12\", \"$r13 = new com.itextpdf.text.pdf.XfaForm$Xml2SomTemplate\", \"$r14 = r0.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Node templateNode>\", \"specialinvoke $r13.<com.itextpdf.text.pdf.XfaForm$Xml2SomTemplate: void <init>(org.w3c.dom.Node)>($r14)\", \"r0.<com.itextpdf.text.pdf.XfaForm: com.itextpdf.text.pdf.XfaForm$Xml2SomTemplate templateSom> = $r13\"],\"extractNodes.13\":[\"if $z1 == 0 goto $r3 = r0.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Node datasetsNode>\"],\"extractNodes.17\":[\"$r8 = new com.itextpdf.text.pdf.XfaForm$Xml2SomDatasets\", \"$r9 = r0.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Node datasetsNode>\", \"$r10 = interfaceinvoke $r9.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>()\", \"specialinvoke $r8.<com.itextpdf.text.pdf.XfaForm$Xml2SomDatasets: void <init>(org.w3c.dom.Node)>($r10)\", \"r0.<com.itextpdf.text.pdf.XfaForm: com.itextpdf.text.pdf.XfaForm$Xml2SomDatasets datasetsSom> = $r8\", \"$r3 = r0.<com.itextpdf.text.pdf.XfaForm: org.w3c.dom.Node datasetsNode>\", \"if $r3 != null goto return\"],\"findDataNode\":null,\"findFieldName.10\":[\"if $z1 == 0 goto r21 = new com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch\"],\"findFieldName.12\":[\"if $z2 == 0 goto r21 = new com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch\", \"r20 = new com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch\"],\"findFieldName.17\":[\"specialinvoke r20.<com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch: void <init>(java.util.Collection)>($r17)\", \"r0.<com.itextpdf.text.pdf.XfaForm: com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch acroFieldsSom> = r20\"],\"findFieldName.20\":[\"r21 = new com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch\"],\"findFieldName.22\":[\"specialinvoke r21.<com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch: void <init>(java.util.Collection)>($r13)\", \"r0.<com.itextpdf.text.pdf.XfaForm: com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch acroFieldsSom> = r21\"],\"findFieldName.35\":[\"r22 = (java.util.ArrayList) $r6\", \"$r7 = virtualinvoke $r5.<com.itextpdf.text.pdf.XfaForm$AcroFieldsSearch: java.lang.String inverseSearchGlobal(java.util.ArrayList)>(r22)\"],\"findDatasetsName.9\":[\"r7 = (java.util.ArrayList) $r5\", \"$r6 = virtualinvoke $r4.<com.itextpdf.text.pdf.XfaForm$Xml2SomDatasets: java.lang.String inverseSearchGlobal(java.util.ArrayList)>(r7)\"],\"fillXfaForm.9\":null,\"fillXfaForm.14\":[\"r12 = new com.itextpdf.text.ExceptionConverter\", \"specialinvoke r12.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>($r7)\", \"r14 = (java.lang.Throwable) r12\", \"throw r14\", \"$r5 := @caughtexception\", \"r13 = new com.itextpdf.text.ExceptionConverter\", \"specialinvoke r13.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>($r5)\", \"r15 = (java.lang.Throwable) r13\", \"throw r15\"]}}",
            "affectedFile": "/com/itextpdf/text/pdf/XfaForm.class"
        },
        {
            "contained": false,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/text/pdf/XfaForm.class",
            "qname": "com.itextpdf.text.pdf.XfaForm$SafeEmptyEntityResolver",
            "diff": null,
            "affectedFile": "/com/itextpdf/text/pdf/XfaForm.class"
        },
        {
            "contained": false,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/text/pdf/XfaForm.class",
            "qname": "com.itextpdf.text.pdf.XfaForm$SafeEmptyEntityResolver.resolveEntity(String,String)",
            "diff": null,
            "affectedFile": "/com/itextpdf/text/pdf/XfaForm.class"
        },
        {
            "contained": true,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/text/pdf/XfaForm.class",
            "qname": "com.itextpdf.text.pdf.XfaForm(PdfReader)",
            "diff": "",
            "affectedFile": "/com/itextpdf/text/pdf/XfaForm.class"
        },
        {
            "contained": true,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/text/pdf/XfaForm.class",
            "qname": "com.itextpdf.text.pdf.XfaForm.fillXfaForm(InputSource,boolean)",
            "diff": "",
            "affectedFile": "/com/itextpdf/text/pdf/XfaForm.class"
        },
        {
            "contained": true,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/text/pdf/XfaXmlLocator.class",
            "qname": "com.itextpdf.text.pdf.XfaXmlLocator",
            "diff": "{\"lhs\" : {\"<init>.6\":[\"$r4 := @caughtexception\", \"$r5 = new com.itextpdf.text.DocumentException\", \"specialinvoke $r5.<com.itextpdf.text.DocumentException: void <init>(java.lang.Exception)>($r4)\", \"throw $r5\"],\"<init>.11\":[\"$r3 = new com.itextpdf.text.DocumentException\", \"specialinvoke $r3.<com.itextpdf.text.DocumentException: void <init>(java.lang.Exception)>($r2)\", \"throw $r3\"],\"setDocument.2\":[\"$r5 = new java.io.ByteArrayOutputStream\", \"specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>()\"],\"setDocument.6\":[\"$r6 = new javax.xml.transform.dom.DOMSource\", \"specialinvoke $r6.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r1)\", \"$r7 = new javax.xml.transform.stream.StreamResult\", \"specialinvoke $r7.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>($r5)\", \"virtualinvoke r3.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r6, $r7)\"],\"setDocument.13\":[\"$r10 = new com.itextpdf.text.pdf.PdfStream\", \"$r11 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()\", \"specialinvoke $r10.<com.itextpdf.text.pdf.PdfStream: void <init>(byte[])>($r11)\", \"$r12 = virtualinvoke $r9.<com.itextpdf.text.pdf.PdfWriter: com.itextpdf.text.pdf.PdfIndirectObject addToBody(com.itextpdf.text.pdf.PdfObject)>($r10)\"],\"setDocument.24\":[\"$r17 := @caughtexception\", \"$r18 = new com.itextpdf.text.DocumentException\", \"specialinvoke $r18.<com.itextpdf.text.DocumentException: void <init>(java.lang.Exception)>($r17)\", \"throw $r18\"],\"setDocument.29\":[\"$r20 = new com.itextpdf.text.DocumentException\", \"specialinvoke $r20.<com.itextpdf.text.DocumentException: void <init>(java.lang.Exception)>($r19)\", \"throw $r20\"]},\"rhs\" : {\"<init>.6\":null,\"<init>.11\":[\"r8 = new com.itextpdf.text.DocumentException\", \"specialinvoke r8.<com.itextpdf.text.DocumentException: void <init>(java.lang.Exception)>($r2)\", \"r10 = (java.lang.Throwable) r8\", \"throw r10\", \"$r4 := @caughtexception\", \"r9 = new com.itextpdf.text.DocumentException\", \"specialinvoke r9.<com.itextpdf.text.DocumentException: void <init>(java.lang.Exception)>($r4)\", \"r11 = (java.lang.Throwable) r9\", \"throw r11\"],\"setDocument.2\":[\"r24 = new java.io.ByteArrayOutputStream\", \"specialinvoke r24.<java.io.ByteArrayOutputStream: void <init>()>()\"],\"setDocument.6\":[\"r25 = new javax.xml.transform.dom.DOMSource\", \"specialinvoke r25.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r1)\", \"r26 = new javax.xml.transform.stream.StreamResult\", \"specialinvoke r26.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>(r24)\", \"virtualinvoke r3.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>(r25, r26)\"],\"setDocument.13\":[\"r27 = new com.itextpdf.text.pdf.PdfStream\", \"$r11 = virtualinvoke r24.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()\", \"specialinvoke r27.<com.itextpdf.text.pdf.PdfStream: void <init>(byte[])>($r11)\", \"$r12 = virtualinvoke $r9.<com.itextpdf.text.pdf.PdfWriter: com.itextpdf.text.pdf.PdfIndirectObject addToBody(com.itextpdf.text.pdf.PdfObject)>(r27)\"],\"setDocument.24\":null,\"setDocument.29\":[\"r28 = new com.itextpdf.text.DocumentException\", \"specialinvoke r28.<com.itextpdf.text.DocumentException: void <init>(java.lang.Exception)>($r19)\", \"r30 = (java.lang.Throwable) r28\", \"throw r30\", \"$r17 := @caughtexception\", \"r29 = new com.itextpdf.text.DocumentException\", \"specialinvoke r29.<com.itextpdf.text.DocumentException: void <init>(java.lang.Exception)>($r17)\", \"r31 = (java.lang.Throwable) r29\", \"throw r31\"]}}",
            "affectedFile": "/com/itextpdf/text/pdf/XfaXmlLocator.class"
        },
        {
            "contained": true,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/text/pdf/XfaXmlLocator.class",
            "qname": "com.itextpdf.text.pdf.XfaXmlLocator.setDocument(Document)",
            "diff": "{\"lhs\" : {\"2\":[\"$r5 = new java.io.ByteArrayOutputStream\", \"specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>()\"],\"6\":[\"$r6 = new javax.xml.transform.dom.DOMSource\", \"specialinvoke $r6.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r1)\", \"$r7 = new javax.xml.transform.stream.StreamResult\", \"specialinvoke $r7.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>($r5)\", \"virtualinvoke r3.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r6, $r7)\"],\"13\":[\"$r10 = new com.itextpdf.text.pdf.PdfStream\", \"$r11 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()\", \"specialinvoke $r10.<com.itextpdf.text.pdf.PdfStream: void <init>(byte[])>($r11)\", \"$r12 = virtualinvoke $r9.<com.itextpdf.text.pdf.PdfWriter: com.itextpdf.text.pdf.PdfIndirectObject addToBody(com.itextpdf.text.pdf.PdfObject)>($r10)\"],\"24\":[\"$r17 := @caughtexception\", \"$r18 = new com.itextpdf.text.DocumentException\", \"specialinvoke $r18.<com.itextpdf.text.DocumentException: void <init>(java.lang.Exception)>($r17)\", \"throw $r18\"],\"29\":[\"$r20 = new com.itextpdf.text.DocumentException\", \"specialinvoke $r20.<com.itextpdf.text.DocumentException: void <init>(java.lang.Exception)>($r19)\", \"throw $r20\"]},\"rhs\" : {\"2\":[\"r24 = new java.io.ByteArrayOutputStream\", \"specialinvoke r24.<java.io.ByteArrayOutputStream: void <init>()>()\"],\"6\":[\"r25 = new javax.xml.transform.dom.DOMSource\", \"specialinvoke r25.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r1)\", \"r26 = new javax.xml.transform.stream.StreamResult\", \"specialinvoke r26.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>(r24)\", \"virtualinvoke r3.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>(r25, r26)\"],\"13\":[\"r27 = new com.itextpdf.text.pdf.PdfStream\", \"$r11 = virtualinvoke r24.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()\", \"specialinvoke r27.<com.itextpdf.text.pdf.PdfStream: void <init>(byte[])>($r11)\", \"$r12 = virtualinvoke $r9.<com.itextpdf.text.pdf.PdfWriter: com.itextpdf.text.pdf.PdfIndirectObject addToBody(com.itextpdf.text.pdf.PdfObject)>(r27)\"],\"24\":null,\"29\":[\"r28 = new com.itextpdf.text.DocumentException\", \"specialinvoke r28.<com.itextpdf.text.DocumentException: void <init>(java.lang.Exception)>($r19)\", \"r30 = (java.lang.Throwable) r28\", \"throw r30\", \"$r17 := @caughtexception\", \"r29 = new com.itextpdf.text.DocumentException\", \"specialinvoke r29.<com.itextpdf.text.DocumentException: void <init>(java.lang.Exception)>($r17)\", \"r31 = (java.lang.Throwable) r29\", \"throw r31\"]}}",
            "affectedFile": "/com/itextpdf/text/pdf/XfaXmlLocator.class"
        },
        {
            "contained": true,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/text/xml/xmp/XmpReader.class",
            "qname": "com.itextpdf.text.xml.xmp.XmpReader",
            "diff": "{\"lhs\" : {\"<init>.6\":[\"$r4 = new java.io.ByteArrayInputStream\", \"specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1)\", \"$r5 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r4)\"],\"<init>.12\":[\"$r7 = new com.itextpdf.text.ExceptionConverter\", \"specialinvoke $r7.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>($r6)\", \"throw $r7\"]},\"rhs\" : {\"<init>.6\":[\"r10 = new java.io.ByteArrayInputStream\", \"specialinvoke r10.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1)\", \"$r5 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(r10)\"],\"<init>.12\":[\"r11 = new com.itextpdf.text.ExceptionConverter\", \"specialinvoke r11.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>($r6)\", \"r12 = (java.lang.Throwable) r11\", \"throw r12\"]}}",
            "affectedFile": "/com/itextpdf/text/xml/xmp/XmpReader.class"
        },
        {
            "contained": false,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/text/xml/xmp/XmpReader.class",
            "qname": "com.itextpdf.text.xml.xmp.XmpReader$SafeEmptyEntityResolver",
            "diff": null,
            "affectedFile": "/com/itextpdf/text/xml/xmp/XmpReader.class"
        },
        {
            "contained": false,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/text/xml/xmp/XmpReader.class",
            "qname": "com.itextpdf.text.xml.xmp.XmpReader$SafeEmptyEntityResolver.resolveEntity(String,String)",
            "diff": null,
            "affectedFile": "/com/itextpdf/text/xml/xmp/XmpReader.class"
        },
        {
            "contained": true,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/text/xml/xmp/XmpReader.class",
            "qname": "com.itextpdf.text.xml.xmp.XmpReader(byte[])",
            "diff": "{\"lhs\" : {\"6\":[\"$r4 = new java.io.ByteArrayInputStream\", \"specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1)\", \"$r5 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r4)\"],\"12\":[\"$r7 = new com.itextpdf.text.ExceptionConverter\", \"specialinvoke $r7.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>($r6)\", \"throw $r7\"]},\"rhs\" : {\"6\":[\"r10 = new java.io.ByteArrayInputStream\", \"specialinvoke r10.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1)\", \"$r5 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(r10)\"],\"12\":[\"r11 = new com.itextpdf.text.ExceptionConverter\", \"specialinvoke r11.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>($r6)\", \"r12 = (java.lang.Throwable) r11\", \"throw r12\"]}}",
            "affectedFile": "/com/itextpdf/text/xml/xmp/XmpReader.class"
        },
        {
            "contained": false,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/text/zugferd/InvoiceDOM.class",
            "qname": "com.itextpdf.text.zugferd.InvoiceDOM",
            "diff": null,
            "affectedFile": "/com/itextpdf/text/zugferd/InvoiceDOM.class"
        },
        {
            "contained": false,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/text/zugferd/InvoiceDOM.class",
            "qname": "com.itextpdf.text.zugferd.InvoiceDOM$SafeEmptyEntityResolver",
            "diff": null,
            "affectedFile": "/com/itextpdf/text/zugferd/InvoiceDOM.class"
        },
        {
            "contained": false,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/text/zugferd/InvoiceDOM.class",
            "qname": "com.itextpdf.text.zugferd.InvoiceDOM$SafeEmptyEntityResolver.resolveEntity(String,String)",
            "diff": null,
            "affectedFile": "/com/itextpdf/text/zugferd/InvoiceDOM.class"
        },
        {
            "contained": false,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/text/zugferd/InvoiceDOM.class",
            "qname": "com.itextpdf.text.zugferd.InvoiceDOM(BasicProfile)",
            "diff": null,
            "affectedFile": "/com/itextpdf/text/zugferd/InvoiceDOM.class"
        },
        {
            "contained": false,
            "commit": "ad38371c396ac5ffbfb28056809e8ffaa5a18ccd",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/ad38371c396ac5ffbfb28056809e8ffaa5a18ccd/com/itextpdf/text/zugferd/InvoiceDOM.class",
            "qname": "com.itextpdf.text.zugferd.InvoiceDOM.toXML()",
            "diff": null,
            "affectedFile": "/com/itextpdf/text/zugferd/InvoiceDOM.class"
        }
    ],
    "vulnerable": true,
    "gav": {
        "groupId": "com.itextpdf",
        "version": "5.5.0",
        "artifactId": "itextpdf"
    }
}