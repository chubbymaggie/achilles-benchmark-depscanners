{
    "cve": "CVE-2016-3092-FU",
    "details": [
        {
            "commit": "1743480",
            "affectedFile": "/org/apache/commons/fileupload/MultipartStream.class",
            "diff": "{\"lhs\" : {\"readBoundary.20\":[\"if $z1 == 0 goto $r4 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\"],\"readBoundary.23\":[\"$r4 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\", \"specialinvoke $r4.<org.apache.commons.fileupload.MultipartStream$MalformedStreamException: void <init>(java.lang.String)>(\"Unexpected characters follow a boundary\")\", \"throw $r4\"],\"readBoundary.30\":[\"$r7 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\", \"specialinvoke $r7.<org.apache.commons.fileupload.MultipartStream$MalformedStreamException: void <init>(java.lang.String)>(\"Stream ended unexpectedly\")\", \"throw $r7\"],\"setBoundary.8\":[\"$r5 = new org.apache.commons.fileupload.MultipartStream$IllegalBoundaryException\", \"specialinvoke $r5.<org.apache.commons.fileupload.MultipartStream$IllegalBoundaryException: void <init>(java.lang.String)>(\"The length of a boundary token can not be changed\")\", \"throw $r5\"],\"readHeaders.2\":[\"$r2 = new java.io.ByteArrayOutputStream\", \"specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>()\"],\"readHeaders.10\":[\"$r11 := @caughtexception\", \"throw $r11\", \"$r13 := @caughtexception\", \"$r14 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\", \"specialinvoke $r14.<org.apache.commons.fileupload.MultipartStream$MalformedStreamException: void <init>(java.lang.String)>(\"Stream ended unexpectedly\")\"],\"readHeaders.16\":null,\"readHeaders.18\":[\"$r7 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\"],\"readHeaders.23\":[\"specialinvoke $r7.<org.apache.commons.fileupload.MultipartStream$MalformedStreamException: void <init>(java.lang.String)>($r10)\", \"throw $r7\"],\"readHeaders.29\":[\"goto [?= virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(b0)]\"],\"readHeaders.31\":[\"virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(b0)\"],\"readHeaders.34\":[\"if $r4 == null goto r16 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: java.lang.String toString()>()\"],\"readHeaders.36\":[\"r16 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>($r5)\"],\"readHeaders.38\":[\"$r12 := @caughtexception\", \"r16 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: java.lang.String toString()>()\"],\"readHeaders.41\":[\"r16 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: java.lang.String toString()>()\"],\"readBodyData.2\":[\"$r2 = virtualinvoke r0.<org.apache.commons.fileupload.MultipartStream: org.apache.commons.fileupload.MultipartStream$ItemInputStream newInputStream()>()\", \"$l0 = staticinvoke <org.apache.commons.fileupload.util.Streams: long copy(java.io.InputStream,java.io.OutputStream,boolean)>($r2, r1, 0)\"],\"skipPreamble.27\":\"$r19 := @caughtexception\",\"skipPreamble.28\":\"$r22 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.29\":\"$r21 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.30\":\"$r20 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.31\":\"$i11 = lengthof $r20\",\"skipPreamble.32\":\"$i12 = $i11 - 2\",\"skipPreamble.33\":\"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r22, 0, $r21, 2, $i12)\",\"skipPreamble.34\":\"$r23 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.35\":\"$i13 = lengthof $r23\",\"skipPreamble.36\":\"r0.<org.apache.commons.fileupload.MultipartStream: int boundaryLength> = $i13\",\"skipPreamble.37\":\"$r24 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.38\":\"$r24[0] = 13\",\"skipPreamble.39\":\"$r25 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.40\":\"$r25[1] = 10\",\"skipPreamble.42\":\"$r12 := @caughtexception\",\"skipPreamble.43\":\"$r15 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.44\":\"$r14 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.45\":\"$r13 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.46\":\"$i8 = lengthof $r13\",\"skipPreamble.47\":\"$i9 = $i8 - 2\",\"skipPreamble.48\":\"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, 0, $r14, 2, $i9)\",\"skipPreamble.49\":\"$r16 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.50\":\"$i10 = lengthof $r16\",\"skipPreamble.51\":\"r0.<org.apache.commons.fileupload.MultipartStream: int boundaryLength> = $i10\",\"skipPreamble.52\":\"$r17 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.53\":\"$r17[0] = 13\",\"skipPreamble.54\":\"$r18 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.55\":\"$r18[1] = 10\",\"skipPreamble.56\":\"throw $r12\",\"access$112\":null,\"access$114\":null,\"access$012\":null},\"rhs\" : {\"readBoundary.20\":[\"if $z1 == 0 goto r10 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\"],\"readBoundary.23\":[\"r10 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\", \"specialinvoke r10.<org.apache.commons.fileupload.MultipartStream$MalformedStreamException: void <init>(java.lang.String)>(\"Unexpected characters follow a boundary\")\", \"r12 = (java.lang.Throwable) r10\", \"throw r12\"],\"readBoundary.30\":[\"r11 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\", \"specialinvoke r11.<org.apache.commons.fileupload.MultipartStream$MalformedStreamException: void <init>(java.lang.String)>(\"Stream ended unexpectedly\")\", \"r13 = (java.lang.Throwable) r11\", \"throw r13\"],\"setBoundary.8\":[\"r6 = new org.apache.commons.fileupload.MultipartStream$IllegalBoundaryException\", \"specialinvoke r6.<org.apache.commons.fileupload.MultipartStream$IllegalBoundaryException: void <init>(java.lang.String)>(\"The length of a boundary token can not be changed\")\", \"r7 = (java.lang.Throwable) r6\", \"throw r7\"],\"readHeaders.2\":[\"r17 = new java.io.ByteArrayOutputStream\", \"specialinvoke r17.<java.io.ByteArrayOutputStream: void <init>()>()\"],\"readHeaders.10\":[\"$r14 := @caughtexception\"],\"readHeaders.16\":[\"$r12 := @caughtexception\", \"r18 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\", \"specialinvoke r18.<org.apache.commons.fileupload.MultipartStream$MalformedStreamException: void <init>(java.lang.String)>(\"Stream ended unexpectedly\")\", \"r20 = (java.lang.Throwable) r18\", \"throw r20\"],\"readHeaders.18\":[\"r19 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\"],\"readHeaders.23\":[\"specialinvoke r19.<org.apache.commons.fileupload.MultipartStream$MalformedStreamException: void <init>(java.lang.String)>($r10)\", \"r21 = (java.lang.Throwable) r19\", \"throw r21\"],\"readHeaders.29\":[\"goto [?= virtualinvoke r17.<java.io.ByteArrayOutputStream: void write(int)>(b0)]\"],\"readHeaders.31\":[\"virtualinvoke r17.<java.io.ByteArrayOutputStream: void write(int)>(b0)\"],\"readHeaders.34\":[\"if $r4 == null goto r16 = virtualinvoke r17.<java.io.ByteArrayOutputStream: java.lang.String toString()>()\"],\"readHeaders.36\":[\"r16 = virtualinvoke r17.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>($r5)\"],\"readHeaders.38\":[\"$r11 := @caughtexception\", \"r16 = virtualinvoke r17.<java.io.ByteArrayOutputStream: java.lang.String toString()>()\"],\"readHeaders.41\":[\"r16 = virtualinvoke r17.<java.io.ByteArrayOutputStream: java.lang.String toString()>()\"],\"readBodyData.2\":[\"r2 = virtualinvoke r0.<org.apache.commons.fileupload.MultipartStream: org.apache.commons.fileupload.MultipartStream$ItemInputStream newInputStream()>()\", \"r3 = (java.io.InputStream) r2\", \"$l0 = staticinvoke <org.apache.commons.fileupload.util.Streams: long copy(java.io.InputStream,java.io.OutputStream,boolean)>(r3, r1, 0)\"],\"skipPreamble.27\":\"$r12 := @caughtexception\",\"skipPreamble.28\":\"$r15 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.29\":\"$r14 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.30\":\"$r13 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.31\":\"$i8 = lengthof $r13\",\"skipPreamble.32\":\"$i9 = $i8 - 2\",\"skipPreamble.33\":\"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, 0, $r14, 2, $i9)\",\"skipPreamble.34\":\"$r16 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.35\":\"$i10 = lengthof $r16\",\"skipPreamble.36\":\"r0.<org.apache.commons.fileupload.MultipartStream: int boundaryLength> = $i10\",\"skipPreamble.37\":\"$r17 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.38\":\"$r17[0] = 13\",\"skipPreamble.39\":\"$r18 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.40\":\"$r18[1] = 10\",\"skipPreamble.42\":\"$r19 := @caughtexception\",\"skipPreamble.43\":\"$r22 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.44\":\"$r21 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.45\":\"$r20 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.46\":\"$i11 = lengthof $r20\",\"skipPreamble.47\":\"$i12 = $i11 - 2\",\"skipPreamble.48\":\"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r22, 0, $r21, 2, $i12)\",\"skipPreamble.49\":\"$r23 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.50\":\"$i13 = lengthof $r23\",\"skipPreamble.51\":\"r0.<org.apache.commons.fileupload.MultipartStream: int boundaryLength> = $i13\",\"skipPreamble.52\":\"$r24 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.53\":\"$r24[0] = 13\",\"skipPreamble.54\":\"$r25 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.55\":\"$r25[1] = 10\",\"skipPreamble.56\":\"throw $r19\",\"access$112\":\"<org.apache.commons.fileupload.MultipartStream: int access$112(org.apache.commons.fileupload.MultipartStream,int)>\",\"access$114\":\"<org.apache.commons.fileupload.MultipartStream: int access$114(org.apache.commons.fileupload.MultipartStream,long)>\",\"access$012\":\"<org.apache.commons.fileupload.MultipartStream: int access$012(org.apache.commons.fileupload.MultipartStream,int)>\"}}",
            "contained": true,
            "qname": "org.apache.commons.fileupload.MultipartStream",
            "ref_file": "/data4/test_compare_script/1743480/org/apache/commons/fileupload/MultipartStream.class"
        },
        {
            "commit": "1743480",
            "affectedFile": "/org/apache/commons/fileupload/MultipartStream.class",
            "diff": "",
            "contained": true,
            "qname": "org.apache.commons.fileupload.MultipartStream(InputStream,byte[],int,ProgressNotifier)",
            "ref_file": "/data4/test_compare_script/1743480/org/apache/commons/fileupload/MultipartStream.class"
        }
    ],
    "comment": "https://nvd.nist.gov/vuln/detail/CVE-2016-3092",
    "gav": {
        "artifactId": "commons-fileupload",
        "version": "1.3.1",
        "groupId": "commons-fileupload"
    },
    "vulnerable": true,
    "timestamp": "2018-11-30"
}