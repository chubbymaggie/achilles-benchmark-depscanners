{
    "timestamp": "2018-11-30",
    "comment": "{\"artifacts\": [\"jetty-server\", \"jetty-http\"], \"references\": [\"https://github.com/eclipse/jetty.project/commit/a285deea42fcab60d9edcf994e458c238a348b55\"]}",
    "gav": {
        "version": "9.2.10.v20150310",
        "groupId": "org.eclipse.jetty",
        "artifactId": "jetty-http"
    },
    "details": [
        {
            "commit": "a285deea42fcab60d9edcf994e458c238a348b55",
            "qname": "org.eclipse.jetty.http.HttpParser",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/a285deea42fcab60d9edcf994e458c238a348b55/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "diff": "{\"lhs\" : {\"next.6\":[\"$r7 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r7.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"Bad EOL\", null)\", \"throw $r7\"],\"next.28\":[\"$r4 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r4.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"Bad EOL\", null)\", \"throw $r4\"],\"next.35\":[\"$r2 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"next.37\":[\"specialinvoke $r2.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r3, b5, r1, null)\", \"throw $r2\"],\"quickStart.58\":[\"$r11 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r11.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r11\"],\"quickStart.69\":[\"$r4 = new java.lang.StringBuilder\", \"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()\", \"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"padding is too large >\")\"],\"quickStart.77\":[\"$r10 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r10.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(400, null)\", \"throw $r10\"],\"parseLine.15\":[\"if $i1 <= 0 goto $r3 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseLine.20\":[\"if $i65 <= $i66 goto $r3 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseLine.25\":[\"$r157 = new java.lang.StringBuilder\", \"specialinvoke $r157.<java.lang.StringBuilder: void <init>()>()\", \"$r159 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"parseLine.33\":[\"$r163 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r163.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(414, null)\", \"throw $r163\"],\"parseLine.39\":[\"$r151 = new java.lang.StringBuilder\", \"specialinvoke $r151.<java.lang.StringBuilder: void <init>()>()\", \"$r153 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"request is too large >\")\"],\"parseLine.47\":[\"goto [?= $r150 = new org.eclipse.jetty.http.HttpParser$BadMessageException]\"],\"parseLine.49\":[\"$r144 = new java.lang.StringBuilder\", \"specialinvoke $r144.<java.lang.StringBuilder: void <init>()>()\", \"$r146 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"response is too large >\")\"],\"parseLine.57\":[\"$r150 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r150.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(413, null)\", \"throw $r150\", \"$r3 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseLine.64\":[\"tableswitch($i3) {     case 1: goto if b0 != 32 goto (branch);     case 2: goto if b0 != 32 goto (branch);     case 3: goto if b0 > 32 goto $r90 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>;     case 4: goto if b0 != 32 goto (branch);     case 5: goto if b0 != 32 goto (branch);     case 6: goto if b0 <= 32 goto (branch);     case 7: goto if b0 != 10 goto (branch);     case 8: goto if b0 != 10 goto (branch);     default: goto $r138 = new java.lang.IllegalStateException; }\"],\"parseLine.84\":[\"if b0 != 10 goto $r129 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r131 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r131.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"No URI\", null)\", \"throw $r131\", \"$r129 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseLine.90\":[\"specialinvoke $r129.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r130, b0, r1, null)\", \"throw $r129\"],\"parseLine.107\":[\"$r126 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r126.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Unknown Version\", null)\", \"throw $r126\"],\"parseLine.114\":[\"$r118 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseLine.116\":[\"specialinvoke $r118.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r119, b0, r1, null)\", \"throw $r118\"],\"parseLine.162\":[\"$r105 = new java.lang.StringBuilder\", \"specialinvoke $r105.<java.lang.StringBuilder: void <init>()>()\", \"$r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"parseLine.170\":[\"$r111 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r111.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(414, null)\", \"throw $r111\"],\"parseLine.198\":[\"$r114 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.202\":[\"goto [?= specialinvoke $r114.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, $r171, null)]\"],\"parseLine.204\":[\"specialinvoke $r114.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, $r171, null)\", \"throw $r114\"],\"parseLine.218\":[\"if b0 >= 32 goto $r85 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"if b0 < 0 goto $r85 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.233\":[\"$r85 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r85.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r85\"],\"parseLine.326\":[\"$r64 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r64.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r64\"],\"parseLine.417\":[\"$r28 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r28.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r28\"],\"parseLine.433\":[\"$r22 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r22.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Unknown Version\", null)\", \"throw $r22\"],\"parseLine.445\":[\"$r21 = new org.eclipse.jetty.util.ArrayTernaryTrie\", \"specialinvoke $r21.<org.eclipse.jetty.util.ArrayTernaryTrie: void <init>(int)>(i80)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields> = $r21\"],\"parseLine.465\":[\"if b0 < 32 goto $r11 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.470\":[\"$r11 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r11.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r11\"],\"parseLine.488\":[\"if b0 < 32 goto $r4 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.498\":[\"$r4 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r4.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r4\", \"$r138 = new java.lang.IllegalStateException\"],\"parseLine.504\":[\"specialinvoke $r138.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r140)\", \"throw $r138\"],\"handleKnownHeaders.2\":[\"z6 = 0\", \"$r3 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpHeader>\", \"$r2 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$i0 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpHeader: int ordinal()>()\", \"$i1 = $r3[$i0]\", \"tableswitch($i1) {     case 1: goto $r36 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>;     case 2: goto $r25 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeaderValue _value>;     case 3: goto $r16 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 4: goto $r14 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 5: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 6: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 7: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 8: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 9: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 10: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 11: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 12: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     default: goto if z6 == 0 goto return 0; }\", \"$r36 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>\", \"$r35 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CHUNKED_CONTENT>\", \"if $r36 == $r35 goto (branch)\", \"$r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r37)\", \"r0.<org.eclipse.jetty.http.HttpParser: long _contentLength> = $l4\", \"goto [?= $l5 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>]\", \"$r42 := @caughtexception\", \"$r43 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r43.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r42)\", \"$r44 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r44.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad Content-Length\", null)\", \"throw $r44\", \"$l5 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>\", \"$b6 = $l5 cmp 0L\", \"if $b6 > 0 goto $r38 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CONTENT_LENGTH>\", \"$r39 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r39\", \"goto [?= (branch)]\", \"$r38 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CONTENT_LENGTH>\"],\"handleKnownHeaders.30\":[\"$r25 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeaderValue _value>\", \"$r24 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"if $r25 != $r24 goto $r27 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r34 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CHUNKED_CONTENT>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r34\"],\"handleKnownHeaders.36\":[\"$r27 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r26 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"$r28 = virtualinvoke $r26.<org.eclipse.jetty.http.HttpHeaderValue: java.lang.String toString()>()\", \"$z4 = virtualinvoke $r27.<java.lang.String: boolean endsWith(java.lang.String)>($r28)\", \"if $z4 == 0 goto $r30 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\"],\"handleKnownHeaders.44\":[\"$r30 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r29 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"$r31 = virtualinvoke $r29.<org.eclipse.jetty.http.HttpHeaderValue: java.lang.String toString()>()\", \"$z5 = virtualinvoke $r30.<java.lang.String: boolean contains(java.lang.CharSequence)>($r31)\"],\"handleKnownHeaders.49\":[\"$r32 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r32.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad chunking\", null)\", \"throw $r32\", \"$r16 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"if $r16 == null goto $z7 = 0\", \"$r23 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"if $r23 != null goto $z7 = 0\", \"$z7 = 1\", \"goto [?= z6 = $z7]\", \"$z7 = 0\", \"z6 = $z7\"],\"handleKnownHeaders.61\":[\"$r46 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if $r46 == null goto (branch)\", \"$r17 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$i2 = virtualinvoke $r17.<java.lang.String: int length()>()\", \"if $i2 != 0 goto $r18 = new org.eclipse.jetty.util.HostPort\"],\"handleKnownHeaders.67\":[\"$r18 = new org.eclipse.jetty.util.HostPort\", \"$r19 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"specialinvoke $r18.<org.eclipse.jetty.util.HostPort: void <init>(java.lang.String)>($r19)\", \"$r20 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"if $r20 == null goto (branch)\", \"$r21 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"$r22 = virtualinvoke $r18.<org.eclipse.jetty.util.HostPort: java.lang.String getHost()>()\", \"$i3 = virtualinvoke $r18.<org.eclipse.jetty.util.HostPort: int getPort()>()\", \"interfaceinvoke $r21.<org.eclipse.jetty.http.HttpParser$RequestHandler: boolean parsedHostHeader(java.lang.String,int)>($r22, $i3)\", \"goto [?= (branch)]\", \"$r40 := @caughtexception\", \"$r41 = new org.eclipse.jetty.http.HttpParser$1\", \"specialinvoke $r41.<org.eclipse.jetty.http.HttpParser$1: void <init>(org.eclipse.jetty.http.HttpParser,int,java.lang.String,java.lang.Exception)>(r0, 400, \"Bad Host header\", $r40)\", \"throw $r41\", \"$r14 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if $r14 == null goto (branch)\"],\"handleKnownHeaders.84\":[\"$z2 = virtualinvoke $r15.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"close\")\"],\"handleKnownHeaders.89\":[\"$r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"if $r4 == null goto $z8 = 0\", \"$r13 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"if $r13 != null goto $z8 = 0\", \"$z8 = 1\", \"goto [?= z6 = $z8]\", \"$z8 = 0\", \"z6 = $z8\", \"goto [?= (branch)]\", \"if z6 == 0 goto return 0\"],\"handleKnownHeaders.100\":[\"$z0 = interfaceinvoke $r5.<org.eclipse.jetty.util.Trie: boolean isFull()>()\"],\"handleKnownHeaders.102\":[\"$r6 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"if $r6 == null goto return 0\", \"$r7 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\"],\"handleKnownHeaders.106\":[\"$r8 = new org.eclipse.jetty.http.HttpField\", \"$r10 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$r9 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"specialinvoke $r8.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)>($r10, $r9)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field> = $r8\", \"$r12 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"$r11 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"interfaceinvoke $r12.<org.eclipse.jetty.util.Trie: boolean put(java.lang.Object)>($r11)\"],\"parseHeaders.15\":[\"if $i3 <= 0 goto $r5 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseHeaders.20\":[\"if $i47 <= $i48 goto $r5 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseHeaders.22\":[\"$r90 = new java.lang.StringBuilder\", \"specialinvoke $r90.<java.lang.StringBuilder: void <init>()>()\", \"$r92 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Header is too large >\")\"],\"parseHeaders.30\":[\"$r96 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r96.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(413, null)\", \"throw $r96\", \"$r5 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseHeaders.37\":[\"tableswitch($i5) {     case 9: goto lookupswitch(b0) {     case 9: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 32: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 58: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r45 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>; };     case 10: goto if b0 == 58 goto $r26 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>;     case 11: goto if b0 > 32 goto $r13 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>;     case 12: goto if b0 >= 32 goto $r112 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r87 = new java.lang.IllegalStateException; }\"],\"parseHeaders.72\":[\"if $r47 == null goto $r97 = new org.eclipse.jetty.http.HttpField\"],\"parseHeaders.75\":[\"$r97 = new org.eclipse.jetty.http.HttpField\"],\"parseHeaders.79\":[\"specialinvoke $r97.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r50, $r49, $r48)\"],\"parseHeaders.101\":[\"$r85 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r85.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"No Host\", null)\", \"throw $r85\"],\"parseHeaders.114\":[\"goto [?= $r101 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>]\"],\"parseHeaders.117\":[\"if $r71 != $r70 goto $r101 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>\"],\"parseHeaders.128\":[\"goto [?= $r101 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>]\"],\"parseHeaders.131\":[\"$r101 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>\"],\"parseHeaders.184\":[\"$r69 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r69.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r69\"],\"parseHeaders.223\":[\"$r65 = new org.eclipse.jetty.http.HttpField\"],\"parseHeaders.225\":[\"specialinvoke $r65.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r66, r107, r108)\", \"r104 = $r65\"],\"parseHeaders.298\":[\"if b0 != 9 goto $r38 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.314\":[\"$r38 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.316\":[\"specialinvoke $r38.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r39, b0, r1, null)\", \"throw $r38\"],\"parseHeaders.333\":[\"if b0 != 10 goto $r16 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.338\":[\"if $r18 != null goto $r19 = new java.lang.StringBuilder\"],\"parseHeaders.341\":[\"$r19 = new java.lang.StringBuilder\", \"specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()\"],\"parseHeaders.344\":[\"$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)\"],\"parseHeaders.353\":[\"$r16 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.355\":[\"specialinvoke $r16.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r17, b0, r1, null)\", \"throw $r16\"],\"parseHeaders.376\":[\"if b0 != 10 goto $r9 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.386\":[\"$r9 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.388\":[\"specialinvoke $r9.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r10, b0, r1, null)\", \"throw $r9\", \"$r87 = new java.lang.IllegalStateException\"],\"parseHeaders.393\":[\"specialinvoke $r87.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r89)\", \"throw $r87\"],\"parseNext.96\":[\"$r22 = new java.lang.IllegalStateException\", \"specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"too much data after closed\")\", \"throw $r22\"],\"parseNext.103\":[\"$r9 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseNext.143\":[\"$r37 = new java.lang.StringBuilder\", \"specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()\", \"$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\", \"$i21 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessageException: int access$500(org.eclipse.jetty.http.HttpParser$BadMessageException)>($r36)\"],\"parseNext.148\":[\"$r41 = virtualinvoke $r36.<org.eclipse.jetty.http.HttpParser$BadMessageException: java.lang.String getMessage()>()\"],\"parseNext.150\":[\"$r52 = new java.lang.StringBuilder\", \"specialinvoke $r52.<java.lang.StringBuilder: void <init>()>()\", \"$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")\", \"$r54 = virtualinvoke $r36.<org.eclipse.jetty.http.HttpParser$BadMessageException: java.lang.String getMessage()>()\"],\"parseNext.172\":[\"$i22 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessageException: int access$500(org.eclipse.jetty.http.HttpParser$BadMessageException)>($r36)\", \"$r50 = virtualinvoke $r36.<org.eclipse.jetty.http.HttpParser$BadMessageException: java.lang.String getMessage()>()\"],\"parseNext.179\":[\"$r57 = new java.lang.StringBuilder\", \"specialinvoke $r57.<java.lang.StringBuilder: void <init>()>()\", \"$r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\"],\"parseContent.3\":[\"if i46 != 0 goto $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r44 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r43 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CONTENT>\", \"if $r44 != $r43 goto $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\"],\"parseContent.11\":[\"if $b45 != 0 goto $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r45 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r45)\", \"$r46 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z6 = interfaceinvoke $r46.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z6\", \"$r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$i48 = virtualinvoke $r47.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"$r48 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"$i49 = virtualinvoke $r48.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\"],\"parseContent.23\":[\"$r3 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseContent.27\":[\"tableswitch($i1) {     case 13: goto staticinvoke <org.eclipse.jetty.util.BufferUtil: void clear(java.nio.ByteBuffer)>(r1);     case 14: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();     case 15: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();     case 16: goto $r39 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>();     case 17: goto $l21 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>;     case 18: goto b51 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 19: goto b52 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 20: goto b53 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 21: goto $i3 = r0.<org.eclipse.jetty.http.HttpParser: int _chunkLength>;     case 22: goto b56 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     default: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>(); }\", \"$r39 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r39\"],\"parseContent.37\":[\"$r42 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r41 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z5 = interfaceinvoke $r42.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r41)\", \"if $z5 == 0 goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.46\":[\"if $b22 != 0 goto $r25 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"$r37 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r37)\", \"$r38 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z4 = interfaceinvoke $r38.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z4\", \"$r25 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r25\"],\"parseContent.57\":[\"$r34 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$r33 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i35 = virtualinvoke $r33.<java.nio.ByteBuffer: int position()>()\"],\"parseContent.62\":[\"virtualinvoke $r34.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i37)\"],\"parseContent.64\":[\"$r26 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i26 = virtualinvoke $r26.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.70\":[\"$r27 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i30 = virtualinvoke $r27.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.74\":[\"$r30 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r29 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z2 = interfaceinvoke $r30.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r29)\", \"if $z2 == 0 goto $l33 = r0.<org.eclipse.jetty.http.HttpParser: long _contentPosition>\"],\"parseContent.83\":[\"$r31 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r31)\", \"$r32 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z3 = interfaceinvoke $r32.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z3\"],\"parseContent.93\":[\"$r24 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_SIZE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r24)\"],\"parseContent.101\":[\"if $i18 != 0 goto $r22 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"$r23 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r23)\"],\"parseContent.105\":[\"$r22 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r22)\", \"goto [?= i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()]\", \"if b52 <= 32 goto $r21 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_PARAMS>\"],\"parseContent.110\":[\"$r21 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_PARAMS>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r21)\"],\"parseContent.122\":[\"if $i13 != 0 goto $r19 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"$r20 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r20)\"],\"parseContent.126\":[\"$r19 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r19)\", \"goto [?= i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()]\"],\"parseContent.132\":[\"if i54 != 0 goto $r8 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"$r18 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNKED_CONTENT>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r18)\"],\"parseContent.136\":[\"$r8 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r8\", \"if i46 <= i54 goto $r9 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$r14 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$r13 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i11 = virtualinvoke $r13.<java.nio.ByteBuffer: int position()>()\", \"$i12 = $i11 + i54\", \"virtualinvoke $r14.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i12)\"],\"parseContent.145\":[\"i55 = virtualinvoke $r9.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.156\":[\"$r12 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r11 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z1 = interfaceinvoke $r12.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r11)\", \"if $z1 == 0 goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.161\":[\"b56 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1)\", \"if b56 != 0 goto (branch)\", \"goto [?= i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()]\", \"if b56 != 10 goto $r4 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r6 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r6)\", \"$r7 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z0 = interfaceinvoke $r7.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z0\", \"$r4 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"specialinvoke $r4.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r5, b56, r1, null)\", \"throw $r4\"],\"parseContent.177\":[\"goto [?= $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>]\"],\"getProxyField.6\":[\"if $z0 == 0 goto $r3 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"getProxyField.16\":[\"$r3 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r3.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r3\"]},\"rhs\" : {\"next.6\":[\"r8 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r8.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"Bad EOL\", null)\", \"r11 = (java.lang.Throwable) r8\", \"throw r11\"],\"next.28\":[\"r9 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r9.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"Bad EOL\", null)\", \"r12 = (java.lang.Throwable) r9\", \"throw r12\"],\"next.35\":[\"r10 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"next.37\":[\"specialinvoke r10.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r3, b5, r1, null)\", \"r13 = (java.lang.Throwable) r10\", \"throw r13\"],\"quickStart.58\":[\"r33 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r33.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r36 = (java.lang.Throwable) r33\", \"throw r36\"],\"quickStart.69\":[\"r34 = new java.lang.StringBuilder\", \"specialinvoke r34.<java.lang.StringBuilder: void <init>()>()\", \"$r6 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"padding is too large >\")\"],\"quickStart.77\":[\"r35 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r35.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(400, null)\", \"r37 = (java.lang.Throwable) r35\", \"throw r37\"],\"parseLine.15\":[\"if $i1 <= 0 goto $r3 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseLine.20\":[\"if $i65 <= $i66 goto $r3 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseLine.25\":[\"r185 = new java.lang.StringBuilder\", \"specialinvoke r185.<java.lang.StringBuilder: void <init>()>()\", \"$r159 = virtualinvoke r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"parseLine.33\":[\"r186 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r186.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(414, null)\", \"r205 = (java.lang.Throwable) r186\", \"throw r205\"],\"parseLine.39\":[\"r187 = new java.lang.StringBuilder\", \"specialinvoke r187.<java.lang.StringBuilder: void <init>()>()\", \"$r153 = virtualinvoke r187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"request is too large >\")\"],\"parseLine.47\":[\"goto [?= r189 = new org.eclipse.jetty.http.HttpParser$BadMessageException]\"],\"parseLine.49\":[\"r188 = new java.lang.StringBuilder\", \"specialinvoke r188.<java.lang.StringBuilder: void <init>()>()\", \"$r146 = virtualinvoke r188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"response is too large >\")\"],\"parseLine.57\":[\"r189 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r189.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(413, null)\", \"r206 = (java.lang.Throwable) r189\", \"throw r206\", \"$r3 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseLine.64\":[\"tableswitch($i3) {     case 1: goto if b0 != 32 goto (branch);     case 2: goto if b0 != 32 goto (branch);     case 3: goto if b0 > 32 goto $r90 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>;     case 4: goto if b0 != 32 goto (branch);     case 5: goto if b0 != 32 goto (branch);     case 6: goto if b0 <= 32 goto (branch);     case 7: goto if b0 != 10 goto (branch);     case 8: goto if b0 != 10 goto (branch);     default: goto r204 = new java.lang.IllegalStateException; }\"],\"parseLine.84\":[\"if b0 != 10 goto r191 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"r190 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r190.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"No URI\", null)\", \"r207 = (java.lang.Throwable) r190\", \"throw r207\", \"r191 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseLine.90\":[\"specialinvoke r191.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r130, b0, r1, null)\", \"r208 = (java.lang.Throwable) r191\", \"throw r208\"],\"parseLine.107\":[\"r192 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r192.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Unknown Version\", null)\", \"r209 = (java.lang.Throwable) r192\", \"throw r209\"],\"parseLine.114\":[\"r193 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseLine.116\":[\"specialinvoke r193.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r119, b0, r1, null)\", \"r210 = (java.lang.Throwable) r193\", \"throw r210\"],\"parseLine.162\":[\"r194 = new java.lang.StringBuilder\", \"specialinvoke r194.<java.lang.StringBuilder: void <init>()>()\", \"$r107 = virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"parseLine.170\":[\"r195 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r195.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(414, null)\", \"r211 = (java.lang.Throwable) r195\", \"throw r211\"],\"parseLine.198\":[\"r196 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.202\":[\"goto [?= specialinvoke r196.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, $r171, null)]\"],\"parseLine.204\":[\"specialinvoke r196.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, $r171, null)\", \"r212 = (java.lang.Throwable) r196\", \"throw r212\"],\"parseLine.218\":[\"if b0 >= 32 goto r197 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"if b0 < 0 goto r197 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.233\":[\"r197 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r197.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r213 = (java.lang.Throwable) r197\", \"throw r213\"],\"parseLine.326\":[\"r198 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r198.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r214 = (java.lang.Throwable) r198\", \"throw r214\"],\"parseLine.417\":[\"r199 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r199.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r215 = (java.lang.Throwable) r199\", \"throw r215\"],\"parseLine.433\":[\"r200 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r200.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Unknown Version\", null)\", \"r216 = (java.lang.Throwable) r200\", \"throw r216\"],\"parseLine.445\":[\"r201 = new org.eclipse.jetty.util.ArrayTernaryTrie\", \"specialinvoke r201.<org.eclipse.jetty.util.ArrayTernaryTrie: void <init>(int)>(i80)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields> = r201\"],\"parseLine.465\":[\"if b0 < 32 goto r202 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.470\":[\"r202 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r202.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r217 = (java.lang.Throwable) r202\", \"throw r217\"],\"parseLine.488\":[\"if b0 < 32 goto r203 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.498\":[\"r203 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r203.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r218 = (java.lang.Throwable) r203\", \"throw r218\", \"r204 = new java.lang.IllegalStateException\"],\"parseLine.504\":[\"specialinvoke r204.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r140)\", \"throw r204\"],\"handleKnownHeaders.2\":[\"z7 = 0\", \"$r4 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpHeader>\", \"$r3 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$i1 = virtualinvoke $r3.<org.eclipse.jetty.http.HttpHeader: int ordinal()>()\", \"$i2 = $r4[$i1]\", \"tableswitch($i2) {     case 1: goto $r35 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>;     case 2: goto $r24 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeaderValue _value>;     case 3: goto $r17 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 4: goto $r15 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 5: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 6: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 7: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 8: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 9: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 10: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 11: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 12: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     default: goto if z7 == 0 goto return 0; }\", \"$r35 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>\", \"$r34 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CHUNKED_CONTENT>\", \"if $r35 == $r34 goto (branch)\", \"$r36 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$l11 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r36)\", \"r0.<org.eclipse.jetty.http.HttpParser: long _contentLength> = $l11\", \"goto [?= $l12 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>]\", \"$r39 := @caughtexception\", \"$r40 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r40.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r39)\", \"r48 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r48.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad Content-Length\", null)\", \"r54 = (java.lang.Throwable) r48\", \"throw r54\", \"$l12 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>\", \"$b13 = $l12 cmp 0L\", \"if $b13 > 0 goto $r37 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CONTENT_LENGTH>\", \"$r38 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\"],\"handleKnownHeaders.30\":[\"$r37 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CONTENT_LENGTH>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r37\"],\"handleKnownHeaders.36\":[\"$r24 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeaderValue _value>\", \"$r23 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"if $r24 != $r23 goto $r26 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\"],\"handleKnownHeaders.44\":[\"$r26 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r25 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"$r27 = virtualinvoke $r25.<org.eclipse.jetty.http.HttpHeaderValue: java.lang.String toString()>()\", \"$z4 = virtualinvoke $r26.<java.lang.String: boolean endsWith(java.lang.String)>($r27)\", \"if $z4 == 0 goto $r29 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r32 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CHUNKED_CONTENT>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r32\", \"goto [?= (branch)]\", \"$r29 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r28 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"$r30 = virtualinvoke $r28.<org.eclipse.jetty.http.HttpHeaderValue: java.lang.String toString()>()\", \"$z5 = virtualinvoke $r29.<java.lang.String: boolean contains(java.lang.CharSequence)>($r30)\"],\"handleKnownHeaders.49\":[\"r49 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r49.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad chunking\", null)\", \"r55 = (java.lang.Throwable) r49\", \"throw r55\", \"$r17 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"if $r17 == null goto $z8 = 0\", \"$r22 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"if $r22 != null goto $z8 = 0\", \"$z8 = 1\", \"goto [?= z7 = $z8]\", \"$z8 = 0\", \"z7 = $z8\"],\"handleKnownHeaders.61\":[\"r46 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"i14 = 0\", \"if r46 == null goto r50 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"$i3 = virtualinvoke r46.<java.lang.String: int length()>()\", \"if $i3 != 0 goto i15 = virtualinvoke r46.<java.lang.String: int length()>()\", \"r50 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r50.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad Host header\", null)\", \"r56 = (java.lang.Throwable) r50\", \"throw r56\", \"i15 = virtualinvoke r46.<java.lang.String: int length()>()\", \"i16 = i15\", \"$i4 = i16\", \"i16 = i16 + -1\", \"if $i4 <= 0 goto $c17 = virtualinvoke r46.<java.lang.String: char charAt(int)>(0)\", \"$c8 = virtualinvoke r46.<java.lang.String: char charAt(int)>(i16)\", \"$c9 = 255 & $c8\", \"c0 = (char) $c9\", \"lookupswitch(c0) {     case 58: goto i15 = i16;     case 93: goto goto [?= $c17 = virtualinvoke r46.<java.lang.String: char charAt(int)>(0)];     default: goto goto [?= $i4 = i16]; }\", \"goto [?= $c17 = virtualinvoke r46.<java.lang.String: char charAt(int)>(0)]\", \"i15 = i16\", \"$i10 = i16 + 1\", \"$r21 = virtualinvoke r46.<java.lang.String: java.lang.String substring(int)>($i10)\", \"i14 = staticinvoke <org.eclipse.jetty.util.StringUtil: int toInt(java.lang.String)>($r21)\", \"goto [?= $c17 = virtualinvoke r46.<java.lang.String: char charAt(int)>(0)]\", \"$r42 := @caughtexception\", \"$z6 = r0.<org.eclipse.jetty.http.HttpParser: boolean DEBUG>\", \"if $z6 == 0 goto r51 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"$r44 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r44.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r42)\", \"r51 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r51.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad Host header\", null)\", \"r57 = (java.lang.Throwable) r51\", \"throw r57\", \"goto [?= $i4 = i16]\", \"$c17 = virtualinvoke r46.<java.lang.String: char charAt(int)>(0)\", \"if $c17 != 91 goto $i5 = virtualinvoke r46.<java.lang.String: int length()>()\", \"$i6 = i15 - 1\", \"$c7 = virtualinvoke r46.<java.lang.String: char charAt(int)>($i6)\", \"if $c7 == 93 goto r46 = virtualinvoke r46.<java.lang.String: java.lang.String substring(int,int)>(0, i15)\", \"r52 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r52.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad IPv6 Host header\", null)\", \"r58 = (java.lang.Throwable) r52\", \"throw r58\", \"r46 = virtualinvoke r46.<java.lang.String: java.lang.String substring(int,int)>(0, i15)\", \"goto [?= $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>]\", \"$i5 = virtualinvoke r46.<java.lang.String: int length()>()\", \"if i15 == $i5 goto $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"r46 = virtualinvoke r46.<java.lang.String: java.lang.String substring(int,int)>(0, i15)\", \"$r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"if $r47 == null goto (branch)\", \"$r19 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"interfaceinvoke $r19.<org.eclipse.jetty.http.HttpParser$RequestHandler: boolean parsedHostHeader(java.lang.String,int)>(r46, i14)\"],\"handleKnownHeaders.67\":null,\"handleKnownHeaders.84\":[\"if $r15 == null goto (branch)\", \"$r16 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$z2 = virtualinvoke $r16.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"close\")\"],\"handleKnownHeaders.89\":null,\"handleKnownHeaders.100\":[\"if $r5 == null goto $z9 = 0\", \"$r14 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"if $r14 != null goto $z9 = 0\", \"$z9 = 1\", \"goto [?= z7 = $z9]\", \"$z9 = 0\", \"z7 = $z9\", \"goto [?= (branch)]\", \"if z7 == 0 goto return 0\", \"$r6 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"$z0 = interfaceinvoke $r6.<org.eclipse.jetty.util.Trie: boolean isFull()>()\"],\"handleKnownHeaders.102\":[\"$r7 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\"],\"handleKnownHeaders.106\":[\"$r8 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if $r8 == null goto return 0\", \"r53 = new org.eclipse.jetty.http.HttpField\", \"$r11 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$r10 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"specialinvoke r53.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)>($r11, $r10)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field> = r53\", \"$r13 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"$r12 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"interfaceinvoke $r13.<org.eclipse.jetty.util.Trie: boolean put(java.lang.Object)>($r12)\"],\"parseHeaders.15\":[\"if $i3 <= 0 goto $r5 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseHeaders.20\":[\"if $i47 <= $i48 goto $r5 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseHeaders.22\":[\"r113 = new java.lang.StringBuilder\", \"specialinvoke r113.<java.lang.StringBuilder: void <init>()>()\", \"$r92 = virtualinvoke r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Header is too large >\")\"],\"parseHeaders.30\":[\"r114 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r114.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(413, null)\", \"r124 = (java.lang.Throwable) r114\", \"throw r124\", \"$r5 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseHeaders.37\":[\"tableswitch($i5) {     case 9: goto lookupswitch(b0) {     case 9: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 32: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 58: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r45 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>; };     case 10: goto if b0 == 58 goto $r26 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>;     case 11: goto if b0 > 32 goto $r13 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>;     case 12: goto if b0 >= 32 goto $r112 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto r123 = new java.lang.IllegalStateException; }\"],\"parseHeaders.72\":[\"if $r47 == null goto r115 = new org.eclipse.jetty.http.HttpField\"],\"parseHeaders.75\":[\"r115 = new org.eclipse.jetty.http.HttpField\", \"$r97 = r115\"],\"parseHeaders.79\":[\"specialinvoke r115.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r50, $r49, $r48)\"],\"parseHeaders.101\":[\"r116 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r116.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"No Host\", null)\", \"r125 = (java.lang.Throwable) r116\", \"throw r125\"],\"parseHeaders.114\":[\"goto [?= $r101 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>]\"],\"parseHeaders.117\":[\"if $r71 != $r70 goto $r101 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>\"],\"parseHeaders.128\":[\"goto [?= $r101 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>]\"],\"parseHeaders.131\":[\"$r101 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>\"],\"parseHeaders.184\":[\"r117 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r117.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r126 = (java.lang.Throwable) r117\", \"throw r126\"],\"parseHeaders.223\":[\"r118 = new org.eclipse.jetty.http.HttpField\"],\"parseHeaders.225\":[\"specialinvoke r118.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r66, r107, r108)\", \"r104 = r118\"],\"parseHeaders.298\":[\"if b0 != 9 goto r119 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.314\":[\"r119 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.316\":[\"specialinvoke r119.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r39, b0, r1, null)\", \"r127 = (java.lang.Throwable) r119\", \"throw r127\"],\"parseHeaders.333\":[\"if b0 != 10 goto r121 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.338\":[\"if $r18 != null goto r120 = new java.lang.StringBuilder\"],\"parseHeaders.341\":[\"r120 = new java.lang.StringBuilder\", \"specialinvoke r120.<java.lang.StringBuilder: void <init>()>()\"],\"parseHeaders.344\":[\"$r21 = virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)\"],\"parseHeaders.353\":[\"r121 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.355\":[\"specialinvoke r121.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r17, b0, r1, null)\", \"r128 = (java.lang.Throwable) r121\", \"throw r128\"],\"parseHeaders.376\":[\"if b0 != 10 goto r122 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.386\":[\"r122 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.388\":[\"specialinvoke r122.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r10, b0, r1, null)\", \"r129 = (java.lang.Throwable) r122\", \"throw r129\", \"r123 = new java.lang.IllegalStateException\"],\"parseHeaders.393\":[\"specialinvoke r123.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r89)\", \"throw r123\"],\"parseNext.96\":[\"r83 = new java.lang.IllegalStateException\", \"specialinvoke r83.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"too much data after closed\")\", \"throw r83\"],\"parseNext.103\":[\"$r9 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseNext.143\":[\"r84 = new java.lang.StringBuilder\", \"specialinvoke r84.<java.lang.StringBuilder: void <init>()>()\", \"$r39 = virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\", \"r87 = (org.eclipse.jetty.http.HttpParser$BadMessageException) $r36\", \"$i21 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessageException: int access$500(org.eclipse.jetty.http.HttpParser$BadMessageException)>(r87)\"],\"parseNext.148\":[\"r88 = (org.eclipse.jetty.http.HttpParser$BadMessageException) $r36\", \"$r41 = virtualinvoke r88.<org.eclipse.jetty.http.HttpParser$BadMessageException: java.lang.String getMessage()>()\"],\"parseNext.150\":[\"r85 = new java.lang.StringBuilder\", \"specialinvoke r85.<java.lang.StringBuilder: void <init>()>()\", \"$r53 = virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")\", \"r89 = (org.eclipse.jetty.http.HttpParser$BadMessageException) $r36\", \"$r54 = virtualinvoke r89.<org.eclipse.jetty.http.HttpParser$BadMessageException: java.lang.String getMessage()>()\"],\"parseNext.172\":[\"r90 = (org.eclipse.jetty.http.HttpParser$BadMessageException) $r36\", \"$i22 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessageException: int access$500(org.eclipse.jetty.http.HttpParser$BadMessageException)>(r90)\", \"r91 = (org.eclipse.jetty.http.HttpParser$BadMessageException) $r36\", \"$r50 = virtualinvoke r91.<org.eclipse.jetty.http.HttpParser$BadMessageException: java.lang.String getMessage()>()\"],\"parseNext.179\":[\"r86 = new java.lang.StringBuilder\", \"specialinvoke r86.<java.lang.StringBuilder: void <init>()>()\", \"$r59 = virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\"],\"parseContent.3\":[\"if i46 != 0 goto $r45 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r42 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r41 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CONTENT>\", \"if $r42 != $r41 goto $r45 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\"],\"parseContent.11\":[\"if $b45 != 0 goto $r45 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r43 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r43)\", \"$r44 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z7 = interfaceinvoke $r44.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z7\", \"$r45 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$i48 = virtualinvoke $r45.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"$r46 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"$i49 = virtualinvoke $r46.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\"],\"parseContent.23\":[\"$r3 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseContent.27\":[\"tableswitch($i1) {     case 13: goto staticinvoke <org.eclipse.jetty.util.BufferUtil: void clear(java.nio.ByteBuffer)>(r1);     case 14: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();     case 15: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();     case 16: goto $r37 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>();     case 17: goto $l21 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>;     case 18: goto b51 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 19: goto b52 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 20: goto b53 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 21: goto $i3 = r0.<org.eclipse.jetty.http.HttpParser: int _chunkLength>;     default: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>(); }\", \"$r37 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r37\"],\"parseContent.37\":[\"$r40 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r39 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z6 = interfaceinvoke $r40.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r39)\", \"if $z6 == 0 goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.46\":[\"if $b22 != 0 goto $r23 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"$r35 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r35)\", \"$r36 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z5 = interfaceinvoke $r36.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z5\", \"$r23 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r23\"],\"parseContent.57\":[\"$r32 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$r31 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i35 = virtualinvoke $r31.<java.nio.ByteBuffer: int position()>()\"],\"parseContent.62\":[\"virtualinvoke $r32.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i37)\"],\"parseContent.64\":[\"$r24 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i26 = virtualinvoke $r24.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.70\":[\"$r25 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i30 = virtualinvoke $r25.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.74\":[\"$r28 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r27 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z3 = interfaceinvoke $r28.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r27)\", \"if $z3 == 0 goto $l33 = r0.<org.eclipse.jetty.http.HttpParser: long _contentPosition>\"],\"parseContent.83\":[\"$r29 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r29)\", \"$r30 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z4 = interfaceinvoke $r30.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z4\"],\"parseContent.93\":[\"$r22 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_SIZE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r22)\"],\"parseContent.101\":[\"if $i18 != 0 goto $r19 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"$r20 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r20)\", \"$r21 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z2 = interfaceinvoke $r21.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z2\", \"$r19 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r19)\"],\"parseContent.105\":[\"if b52 <= 32 goto $r18 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_PARAMS>\"],\"parseContent.110\":[\"$r18 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_PARAMS>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r18)\"],\"parseContent.122\":[\"if $i13 != 0 goto $r15 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"$r16 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r16)\", \"$r17 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z1 = interfaceinvoke $r17.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z1\", \"$r15 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r15)\"],\"parseContent.126\":null,\"parseContent.132\":[\"if i54 != 0 goto $r4 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"$r14 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNKED_CONTENT>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r14)\"],\"parseContent.136\":[\"$r4 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r4\", \"if i46 <= i54 goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$r10 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\"],\"parseContent.145\":[\"$i11 = virtualinvoke $r9.<java.nio.ByteBuffer: int position()>()\", \"$i12 = $i11 + i54\", \"virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i12)\", \"$r5 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"i55 = virtualinvoke $r5.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.156\":[\"$r8 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r7 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z0 = interfaceinvoke $r8.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r7)\", \"if $z0 == 0 goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.161\":null,\"parseContent.177\":[\"goto [?= $r45 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>]\"],\"getProxyField.6\":[\"if $z0 == 0 goto r8 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"getProxyField.16\":[\"r8 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r8.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r9 = (java.lang.Throwable) r8\", \"throw r9\"]}}"
        },
        {
            "commit": "a285deea42fcab60d9edcf994e458c238a348b55",
            "qname": "org.eclipse.jetty.http.HttpParser$BadMessageException",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/a285deea42fcab60d9edcf994e458c238a348b55/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "diff": ""
        },
        {
            "commit": "a285deea42fcab60d9edcf994e458c238a348b55",
            "qname": "org.eclipse.jetty.http.HttpParser$BadMessageException(int,String)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/a285deea42fcab60d9edcf994e458c238a348b55/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "diff": ""
        },
        {
            "commit": "a285deea42fcab60d9edcf994e458c238a348b55",
            "qname": "org.eclipse.jetty.http.HttpParser$BadMessageException(int,String,Throwable)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/a285deea42fcab60d9edcf994e458c238a348b55/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "diff": ""
        },
        {
            "commit": "a285deea42fcab60d9edcf994e458c238a348b55",
            "qname": "org.eclipse.jetty.http.HttpParser.INIT",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/a285deea42fcab60d9edcf994e458c238a348b55/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "diff": ""
        },
        {
            "commit": "a285deea42fcab60d9edcf994e458c238a348b55",
            "qname": "org.eclipse.jetty.http.HttpParser.handleKnownHeaders(ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/a285deea42fcab60d9edcf994e458c238a348b55/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "diff": "{\"lhs\" : {\"2\":[\"z6 = 0\", \"$r3 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpHeader>\", \"$r2 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$i0 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpHeader: int ordinal()>()\", \"$i1 = $r3[$i0]\", \"tableswitch($i1) {     case 1: goto $r36 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>;     case 2: goto $r25 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeaderValue _value>;     case 3: goto $r16 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 4: goto $r14 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 5: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 6: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 7: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 8: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 9: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 10: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 11: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 12: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     default: goto if z6 == 0 goto return 0; }\", \"$r36 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>\", \"$r35 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CHUNKED_CONTENT>\", \"if $r36 == $r35 goto (branch)\", \"$r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r37)\", \"r0.<org.eclipse.jetty.http.HttpParser: long _contentLength> = $l4\", \"goto [?= $l5 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>]\", \"$r42 := @caughtexception\", \"$r43 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r43.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r42)\", \"$r44 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r44.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad Content-Length\", null)\", \"throw $r44\", \"$l5 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>\", \"$b6 = $l5 cmp 0L\", \"if $b6 > 0 goto $r38 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CONTENT_LENGTH>\", \"$r39 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r39\", \"goto [?= (branch)]\", \"$r38 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CONTENT_LENGTH>\"],\"30\":[\"$r25 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeaderValue _value>\", \"$r24 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"if $r25 != $r24 goto $r27 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r34 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CHUNKED_CONTENT>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r34\"],\"36\":[\"$r27 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r26 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"$r28 = virtualinvoke $r26.<org.eclipse.jetty.http.HttpHeaderValue: java.lang.String toString()>()\", \"$z4 = virtualinvoke $r27.<java.lang.String: boolean endsWith(java.lang.String)>($r28)\", \"if $z4 == 0 goto $r30 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\"],\"44\":[\"$r30 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r29 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"$r31 = virtualinvoke $r29.<org.eclipse.jetty.http.HttpHeaderValue: java.lang.String toString()>()\", \"$z5 = virtualinvoke $r30.<java.lang.String: boolean contains(java.lang.CharSequence)>($r31)\"],\"49\":[\"$r32 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r32.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad chunking\", null)\", \"throw $r32\", \"$r16 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"if $r16 == null goto $z7 = 0\", \"$r23 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"if $r23 != null goto $z7 = 0\", \"$z7 = 1\", \"goto [?= z6 = $z7]\", \"$z7 = 0\", \"z6 = $z7\"],\"61\":[\"$r46 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if $r46 == null goto (branch)\", \"$r17 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$i2 = virtualinvoke $r17.<java.lang.String: int length()>()\", \"if $i2 != 0 goto $r18 = new org.eclipse.jetty.util.HostPort\"],\"67\":[\"$r18 = new org.eclipse.jetty.util.HostPort\", \"$r19 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"specialinvoke $r18.<org.eclipse.jetty.util.HostPort: void <init>(java.lang.String)>($r19)\", \"$r20 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"if $r20 == null goto (branch)\", \"$r21 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"$r22 = virtualinvoke $r18.<org.eclipse.jetty.util.HostPort: java.lang.String getHost()>()\", \"$i3 = virtualinvoke $r18.<org.eclipse.jetty.util.HostPort: int getPort()>()\", \"interfaceinvoke $r21.<org.eclipse.jetty.http.HttpParser$RequestHandler: boolean parsedHostHeader(java.lang.String,int)>($r22, $i3)\", \"goto [?= (branch)]\", \"$r40 := @caughtexception\", \"$r41 = new org.eclipse.jetty.http.HttpParser$1\", \"specialinvoke $r41.<org.eclipse.jetty.http.HttpParser$1: void <init>(org.eclipse.jetty.http.HttpParser,int,java.lang.String,java.lang.Exception)>(r0, 400, \"Bad Host header\", $r40)\", \"throw $r41\", \"$r14 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if $r14 == null goto (branch)\"],\"84\":[\"$z2 = virtualinvoke $r15.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"close\")\"],\"89\":[\"$r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"if $r4 == null goto $z8 = 0\", \"$r13 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"if $r13 != null goto $z8 = 0\", \"$z8 = 1\", \"goto [?= z6 = $z8]\", \"$z8 = 0\", \"z6 = $z8\", \"goto [?= (branch)]\", \"if z6 == 0 goto return 0\"],\"100\":[\"$z0 = interfaceinvoke $r5.<org.eclipse.jetty.util.Trie: boolean isFull()>()\"],\"102\":[\"$r6 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"if $r6 == null goto return 0\", \"$r7 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\"],\"106\":[\"$r8 = new org.eclipse.jetty.http.HttpField\", \"$r10 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$r9 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"specialinvoke $r8.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)>($r10, $r9)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field> = $r8\", \"$r12 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"$r11 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"interfaceinvoke $r12.<org.eclipse.jetty.util.Trie: boolean put(java.lang.Object)>($r11)\"]},\"rhs\" : {\"2\":[\"z7 = 0\", \"$r4 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpHeader>\", \"$r3 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$i1 = virtualinvoke $r3.<org.eclipse.jetty.http.HttpHeader: int ordinal()>()\", \"$i2 = $r4[$i1]\", \"tableswitch($i2) {     case 1: goto $r35 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>;     case 2: goto $r24 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeaderValue _value>;     case 3: goto $r17 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 4: goto $r15 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 5: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 6: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 7: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 8: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 9: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 10: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 11: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 12: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     default: goto if z7 == 0 goto return 0; }\", \"$r35 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>\", \"$r34 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CHUNKED_CONTENT>\", \"if $r35 == $r34 goto (branch)\", \"$r36 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$l11 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r36)\", \"r0.<org.eclipse.jetty.http.HttpParser: long _contentLength> = $l11\", \"goto [?= $l12 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>]\", \"$r39 := @caughtexception\", \"$r40 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r40.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r39)\", \"r48 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r48.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad Content-Length\", null)\", \"r54 = (java.lang.Throwable) r48\", \"throw r54\", \"$l12 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>\", \"$b13 = $l12 cmp 0L\", \"if $b13 > 0 goto $r37 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CONTENT_LENGTH>\", \"$r38 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\"],\"30\":[\"$r37 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CONTENT_LENGTH>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r37\"],\"36\":[\"$r24 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeaderValue _value>\", \"$r23 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"if $r24 != $r23 goto $r26 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\"],\"44\":[\"$r26 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r25 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"$r27 = virtualinvoke $r25.<org.eclipse.jetty.http.HttpHeaderValue: java.lang.String toString()>()\", \"$z4 = virtualinvoke $r26.<java.lang.String: boolean endsWith(java.lang.String)>($r27)\", \"if $z4 == 0 goto $r29 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r32 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CHUNKED_CONTENT>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r32\", \"goto [?= (branch)]\", \"$r29 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r28 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"$r30 = virtualinvoke $r28.<org.eclipse.jetty.http.HttpHeaderValue: java.lang.String toString()>()\", \"$z5 = virtualinvoke $r29.<java.lang.String: boolean contains(java.lang.CharSequence)>($r30)\"],\"49\":[\"r49 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r49.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad chunking\", null)\", \"r55 = (java.lang.Throwable) r49\", \"throw r55\", \"$r17 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"if $r17 == null goto $z8 = 0\", \"$r22 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"if $r22 != null goto $z8 = 0\", \"$z8 = 1\", \"goto [?= z7 = $z8]\", \"$z8 = 0\", \"z7 = $z8\"],\"61\":[\"r46 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"i14 = 0\", \"if r46 == null goto r50 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"$i3 = virtualinvoke r46.<java.lang.String: int length()>()\", \"if $i3 != 0 goto i15 = virtualinvoke r46.<java.lang.String: int length()>()\", \"r50 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r50.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad Host header\", null)\", \"r56 = (java.lang.Throwable) r50\", \"throw r56\", \"i15 = virtualinvoke r46.<java.lang.String: int length()>()\", \"i16 = i15\", \"$i4 = i16\", \"i16 = i16 + -1\", \"if $i4 <= 0 goto $c17 = virtualinvoke r46.<java.lang.String: char charAt(int)>(0)\", \"$c8 = virtualinvoke r46.<java.lang.String: char charAt(int)>(i16)\", \"$c9 = 255 & $c8\", \"c0 = (char) $c9\", \"lookupswitch(c0) {     case 58: goto i15 = i16;     case 93: goto goto [?= $c17 = virtualinvoke r46.<java.lang.String: char charAt(int)>(0)];     default: goto goto [?= $i4 = i16]; }\", \"goto [?= $c17 = virtualinvoke r46.<java.lang.String: char charAt(int)>(0)]\", \"i15 = i16\", \"$i10 = i16 + 1\", \"$r21 = virtualinvoke r46.<java.lang.String: java.lang.String substring(int)>($i10)\", \"i14 = staticinvoke <org.eclipse.jetty.util.StringUtil: int toInt(java.lang.String)>($r21)\", \"goto [?= $c17 = virtualinvoke r46.<java.lang.String: char charAt(int)>(0)]\", \"$r42 := @caughtexception\", \"$z6 = r0.<org.eclipse.jetty.http.HttpParser: boolean DEBUG>\", \"if $z6 == 0 goto r51 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"$r44 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r44.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r42)\", \"r51 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r51.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad Host header\", null)\", \"r57 = (java.lang.Throwable) r51\", \"throw r57\", \"goto [?= $i4 = i16]\", \"$c17 = virtualinvoke r46.<java.lang.String: char charAt(int)>(0)\", \"if $c17 != 91 goto $i5 = virtualinvoke r46.<java.lang.String: int length()>()\", \"$i6 = i15 - 1\", \"$c7 = virtualinvoke r46.<java.lang.String: char charAt(int)>($i6)\", \"if $c7 == 93 goto r46 = virtualinvoke r46.<java.lang.String: java.lang.String substring(int,int)>(0, i15)\", \"r52 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r52.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad IPv6 Host header\", null)\", \"r58 = (java.lang.Throwable) r52\", \"throw r58\", \"r46 = virtualinvoke r46.<java.lang.String: java.lang.String substring(int,int)>(0, i15)\", \"goto [?= $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>]\", \"$i5 = virtualinvoke r46.<java.lang.String: int length()>()\", \"if i15 == $i5 goto $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"r46 = virtualinvoke r46.<java.lang.String: java.lang.String substring(int,int)>(0, i15)\", \"$r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"if $r47 == null goto (branch)\", \"$r19 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"interfaceinvoke $r19.<org.eclipse.jetty.http.HttpParser$RequestHandler: boolean parsedHostHeader(java.lang.String,int)>(r46, i14)\"],\"67\":null,\"84\":[\"if $r15 == null goto (branch)\", \"$r16 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$z2 = virtualinvoke $r16.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"close\")\"],\"89\":null,\"100\":[\"if $r5 == null goto $z9 = 0\", \"$r14 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"if $r14 != null goto $z9 = 0\", \"$z9 = 1\", \"goto [?= z7 = $z9]\", \"$z9 = 0\", \"z7 = $z9\", \"goto [?= (branch)]\", \"if z7 == 0 goto return 0\", \"$r6 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"$z0 = interfaceinvoke $r6.<org.eclipse.jetty.util.Trie: boolean isFull()>()\"],\"102\":[\"$r7 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\"],\"106\":[\"$r8 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if $r8 == null goto return 0\", \"r53 = new org.eclipse.jetty.http.HttpField\", \"$r11 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$r10 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"specialinvoke r53.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)>($r11, $r10)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field> = r53\", \"$r13 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"$r12 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"interfaceinvoke $r13.<org.eclipse.jetty.util.Trie: boolean put(java.lang.Object)>($r12)\"]}}"
        },
        {
            "commit": "a285deea42fcab60d9edcf994e458c238a348b55",
            "qname": "org.eclipse.jetty.http.HttpParser.parseContent(ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/a285deea42fcab60d9edcf994e458c238a348b55/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "diff": "{\"lhs\" : {\"3\":[\"if i46 != 0 goto $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r44 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r43 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CONTENT>\", \"if $r44 != $r43 goto $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\"],\"11\":[\"if $b45 != 0 goto $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r45 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r45)\", \"$r46 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z6 = interfaceinvoke $r46.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z6\", \"$r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$i48 = virtualinvoke $r47.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"$r48 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"$i49 = virtualinvoke $r48.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\"],\"23\":[\"$r3 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"27\":[\"tableswitch($i1) {     case 13: goto staticinvoke <org.eclipse.jetty.util.BufferUtil: void clear(java.nio.ByteBuffer)>(r1);     case 14: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();     case 15: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();     case 16: goto $r39 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>();     case 17: goto $l21 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>;     case 18: goto b51 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 19: goto b52 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 20: goto b53 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 21: goto $i3 = r0.<org.eclipse.jetty.http.HttpParser: int _chunkLength>;     case 22: goto b56 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     default: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>(); }\", \"$r39 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r39\"],\"37\":[\"$r42 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r41 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z5 = interfaceinvoke $r42.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r41)\", \"if $z5 == 0 goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()\"],\"46\":[\"if $b22 != 0 goto $r25 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"$r37 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r37)\", \"$r38 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z4 = interfaceinvoke $r38.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z4\", \"$r25 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r25\"],\"57\":[\"$r34 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$r33 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i35 = virtualinvoke $r33.<java.nio.ByteBuffer: int position()>()\"],\"62\":[\"virtualinvoke $r34.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i37)\"],\"64\":[\"$r26 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i26 = virtualinvoke $r26.<java.nio.ByteBuffer: int remaining()>()\"],\"70\":[\"$r27 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i30 = virtualinvoke $r27.<java.nio.ByteBuffer: int remaining()>()\"],\"74\":[\"$r30 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r29 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z2 = interfaceinvoke $r30.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r29)\", \"if $z2 == 0 goto $l33 = r0.<org.eclipse.jetty.http.HttpParser: long _contentPosition>\"],\"83\":[\"$r31 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r31)\", \"$r32 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z3 = interfaceinvoke $r32.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z3\"],\"93\":[\"$r24 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_SIZE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r24)\"],\"101\":[\"if $i18 != 0 goto $r22 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"$r23 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r23)\"],\"105\":[\"$r22 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r22)\", \"goto [?= i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()]\", \"if b52 <= 32 goto $r21 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_PARAMS>\"],\"110\":[\"$r21 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_PARAMS>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r21)\"],\"122\":[\"if $i13 != 0 goto $r19 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"$r20 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r20)\"],\"126\":[\"$r19 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r19)\", \"goto [?= i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()]\"],\"132\":[\"if i54 != 0 goto $r8 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"$r18 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNKED_CONTENT>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r18)\"],\"136\":[\"$r8 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r8\", \"if i46 <= i54 goto $r9 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$r14 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$r13 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i11 = virtualinvoke $r13.<java.nio.ByteBuffer: int position()>()\", \"$i12 = $i11 + i54\", \"virtualinvoke $r14.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i12)\"],\"145\":[\"i55 = virtualinvoke $r9.<java.nio.ByteBuffer: int remaining()>()\"],\"156\":[\"$r12 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r11 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z1 = interfaceinvoke $r12.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r11)\", \"if $z1 == 0 goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()\"],\"161\":[\"b56 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1)\", \"if b56 != 0 goto (branch)\", \"goto [?= i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()]\", \"if b56 != 10 goto $r4 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r6 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r6)\", \"$r7 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z0 = interfaceinvoke $r7.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z0\", \"$r4 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"specialinvoke $r4.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r5, b56, r1, null)\", \"throw $r4\"],\"177\":[\"goto [?= $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>]\"]},\"rhs\" : {\"3\":[\"if i46 != 0 goto $r45 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r42 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r41 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CONTENT>\", \"if $r42 != $r41 goto $r45 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\"],\"11\":[\"if $b45 != 0 goto $r45 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r43 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r43)\", \"$r44 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z7 = interfaceinvoke $r44.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z7\", \"$r45 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$i48 = virtualinvoke $r45.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"$r46 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"$i49 = virtualinvoke $r46.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\"],\"23\":[\"$r3 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"27\":[\"tableswitch($i1) {     case 13: goto staticinvoke <org.eclipse.jetty.util.BufferUtil: void clear(java.nio.ByteBuffer)>(r1);     case 14: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();     case 15: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();     case 16: goto $r37 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>();     case 17: goto $l21 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>;     case 18: goto b51 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 19: goto b52 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 20: goto b53 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 21: goto $i3 = r0.<org.eclipse.jetty.http.HttpParser: int _chunkLength>;     default: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>(); }\", \"$r37 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r37\"],\"37\":[\"$r40 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r39 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z6 = interfaceinvoke $r40.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r39)\", \"if $z6 == 0 goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()\"],\"46\":[\"if $b22 != 0 goto $r23 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"$r35 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r35)\", \"$r36 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z5 = interfaceinvoke $r36.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z5\", \"$r23 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r23\"],\"57\":[\"$r32 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$r31 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i35 = virtualinvoke $r31.<java.nio.ByteBuffer: int position()>()\"],\"62\":[\"virtualinvoke $r32.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i37)\"],\"64\":[\"$r24 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i26 = virtualinvoke $r24.<java.nio.ByteBuffer: int remaining()>()\"],\"70\":[\"$r25 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i30 = virtualinvoke $r25.<java.nio.ByteBuffer: int remaining()>()\"],\"74\":[\"$r28 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r27 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z3 = interfaceinvoke $r28.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r27)\", \"if $z3 == 0 goto $l33 = r0.<org.eclipse.jetty.http.HttpParser: long _contentPosition>\"],\"83\":[\"$r29 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r29)\", \"$r30 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z4 = interfaceinvoke $r30.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z4\"],\"93\":[\"$r22 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_SIZE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r22)\"],\"101\":[\"if $i18 != 0 goto $r19 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"$r20 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r20)\", \"$r21 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z2 = interfaceinvoke $r21.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z2\", \"$r19 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r19)\"],\"105\":[\"if b52 <= 32 goto $r18 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_PARAMS>\"],\"110\":[\"$r18 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_PARAMS>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r18)\"],\"122\":[\"if $i13 != 0 goto $r15 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"$r16 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r16)\", \"$r17 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z1 = interfaceinvoke $r17.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z1\", \"$r15 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r15)\"],\"126\":null,\"132\":[\"if i54 != 0 goto $r4 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"$r14 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNKED_CONTENT>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r14)\"],\"136\":[\"$r4 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r4\", \"if i46 <= i54 goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$r10 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\"],\"145\":[\"$i11 = virtualinvoke $r9.<java.nio.ByteBuffer: int position()>()\", \"$i12 = $i11 + i54\", \"virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i12)\", \"$r5 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"i55 = virtualinvoke $r5.<java.nio.ByteBuffer: int remaining()>()\"],\"156\":[\"$r8 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r7 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z0 = interfaceinvoke $r8.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r7)\", \"if $z0 == 0 goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()\"],\"161\":null,\"177\":[\"goto [?= $r45 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>]\"]}}"
        },
        {
            "commit": "a285deea42fcab60d9edcf994e458c238a348b55",
            "qname": "org.eclipse.jetty.http.HttpParser.parseLine(ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/a285deea42fcab60d9edcf994e458c238a348b55/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "diff": "{\"lhs\" : {\"15\":[\"if $i1 <= 0 goto $r3 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"20\":[\"if $i65 <= $i66 goto $r3 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"25\":[\"$r157 = new java.lang.StringBuilder\", \"specialinvoke $r157.<java.lang.StringBuilder: void <init>()>()\", \"$r159 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"33\":[\"$r163 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r163.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(414, null)\", \"throw $r163\"],\"39\":[\"$r151 = new java.lang.StringBuilder\", \"specialinvoke $r151.<java.lang.StringBuilder: void <init>()>()\", \"$r153 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"request is too large >\")\"],\"47\":[\"goto [?= $r150 = new org.eclipse.jetty.http.HttpParser$BadMessageException]\"],\"49\":[\"$r144 = new java.lang.StringBuilder\", \"specialinvoke $r144.<java.lang.StringBuilder: void <init>()>()\", \"$r146 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"response is too large >\")\"],\"57\":[\"$r150 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r150.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(413, null)\", \"throw $r150\", \"$r3 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"64\":[\"tableswitch($i3) {     case 1: goto if b0 != 32 goto (branch);     case 2: goto if b0 != 32 goto (branch);     case 3: goto if b0 > 32 goto $r90 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>;     case 4: goto if b0 != 32 goto (branch);     case 5: goto if b0 != 32 goto (branch);     case 6: goto if b0 <= 32 goto (branch);     case 7: goto if b0 != 10 goto (branch);     case 8: goto if b0 != 10 goto (branch);     default: goto $r138 = new java.lang.IllegalStateException; }\"],\"84\":[\"if b0 != 10 goto $r129 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r131 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r131.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"No URI\", null)\", \"throw $r131\", \"$r129 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"90\":[\"specialinvoke $r129.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r130, b0, r1, null)\", \"throw $r129\"],\"107\":[\"$r126 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r126.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Unknown Version\", null)\", \"throw $r126\"],\"114\":[\"$r118 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"116\":[\"specialinvoke $r118.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r119, b0, r1, null)\", \"throw $r118\"],\"162\":[\"$r105 = new java.lang.StringBuilder\", \"specialinvoke $r105.<java.lang.StringBuilder: void <init>()>()\", \"$r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"170\":[\"$r111 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r111.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(414, null)\", \"throw $r111\"],\"198\":[\"$r114 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"202\":[\"goto [?= specialinvoke $r114.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, $r171, null)]\"],\"204\":[\"specialinvoke $r114.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, $r171, null)\", \"throw $r114\"],\"218\":[\"if b0 >= 32 goto $r85 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"if b0 < 0 goto $r85 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"233\":[\"$r85 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r85.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r85\"],\"326\":[\"$r64 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r64.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r64\"],\"417\":[\"$r28 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r28.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r28\"],\"433\":[\"$r22 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r22.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Unknown Version\", null)\", \"throw $r22\"],\"445\":[\"$r21 = new org.eclipse.jetty.util.ArrayTernaryTrie\", \"specialinvoke $r21.<org.eclipse.jetty.util.ArrayTernaryTrie: void <init>(int)>(i80)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields> = $r21\"],\"465\":[\"if b0 < 32 goto $r11 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"470\":[\"$r11 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r11.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r11\"],\"488\":[\"if b0 < 32 goto $r4 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"498\":[\"$r4 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r4.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r4\", \"$r138 = new java.lang.IllegalStateException\"],\"504\":[\"specialinvoke $r138.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r140)\", \"throw $r138\"]},\"rhs\" : {\"15\":[\"if $i1 <= 0 goto $r3 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"20\":[\"if $i65 <= $i66 goto $r3 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"25\":[\"r185 = new java.lang.StringBuilder\", \"specialinvoke r185.<java.lang.StringBuilder: void <init>()>()\", \"$r159 = virtualinvoke r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"33\":[\"r186 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r186.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(414, null)\", \"r205 = (java.lang.Throwable) r186\", \"throw r205\"],\"39\":[\"r187 = new java.lang.StringBuilder\", \"specialinvoke r187.<java.lang.StringBuilder: void <init>()>()\", \"$r153 = virtualinvoke r187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"request is too large >\")\"],\"47\":[\"goto [?= r189 = new org.eclipse.jetty.http.HttpParser$BadMessageException]\"],\"49\":[\"r188 = new java.lang.StringBuilder\", \"specialinvoke r188.<java.lang.StringBuilder: void <init>()>()\", \"$r146 = virtualinvoke r188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"response is too large >\")\"],\"57\":[\"r189 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r189.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(413, null)\", \"r206 = (java.lang.Throwable) r189\", \"throw r206\", \"$r3 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"64\":[\"tableswitch($i3) {     case 1: goto if b0 != 32 goto (branch);     case 2: goto if b0 != 32 goto (branch);     case 3: goto if b0 > 32 goto $r90 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>;     case 4: goto if b0 != 32 goto (branch);     case 5: goto if b0 != 32 goto (branch);     case 6: goto if b0 <= 32 goto (branch);     case 7: goto if b0 != 10 goto (branch);     case 8: goto if b0 != 10 goto (branch);     default: goto r204 = new java.lang.IllegalStateException; }\"],\"84\":[\"if b0 != 10 goto r191 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"r190 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r190.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"No URI\", null)\", \"r207 = (java.lang.Throwable) r190\", \"throw r207\", \"r191 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"90\":[\"specialinvoke r191.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r130, b0, r1, null)\", \"r208 = (java.lang.Throwable) r191\", \"throw r208\"],\"107\":[\"r192 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r192.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Unknown Version\", null)\", \"r209 = (java.lang.Throwable) r192\", \"throw r209\"],\"114\":[\"r193 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"116\":[\"specialinvoke r193.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r119, b0, r1, null)\", \"r210 = (java.lang.Throwable) r193\", \"throw r210\"],\"162\":[\"r194 = new java.lang.StringBuilder\", \"specialinvoke r194.<java.lang.StringBuilder: void <init>()>()\", \"$r107 = virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"170\":[\"r195 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r195.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(414, null)\", \"r211 = (java.lang.Throwable) r195\", \"throw r211\"],\"198\":[\"r196 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"202\":[\"goto [?= specialinvoke r196.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, $r171, null)]\"],\"204\":[\"specialinvoke r196.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, $r171, null)\", \"r212 = (java.lang.Throwable) r196\", \"throw r212\"],\"218\":[\"if b0 >= 32 goto r197 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"if b0 < 0 goto r197 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"233\":[\"r197 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r197.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r213 = (java.lang.Throwable) r197\", \"throw r213\"],\"326\":[\"r198 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r198.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r214 = (java.lang.Throwable) r198\", \"throw r214\"],\"417\":[\"r199 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r199.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r215 = (java.lang.Throwable) r199\", \"throw r215\"],\"433\":[\"r200 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r200.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Unknown Version\", null)\", \"r216 = (java.lang.Throwable) r200\", \"throw r216\"],\"445\":[\"r201 = new org.eclipse.jetty.util.ArrayTernaryTrie\", \"specialinvoke r201.<org.eclipse.jetty.util.ArrayTernaryTrie: void <init>(int)>(i80)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields> = r201\"],\"465\":[\"if b0 < 32 goto r202 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"470\":[\"r202 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r202.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r217 = (java.lang.Throwable) r202\", \"throw r217\"],\"488\":[\"if b0 < 32 goto r203 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"498\":[\"r203 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r203.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r218 = (java.lang.Throwable) r203\", \"throw r218\", \"r204 = new java.lang.IllegalStateException\"],\"504\":[\"specialinvoke r204.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r140)\", \"throw r204\"]}}"
        },
        {
            "commit": "a285deea42fcab60d9edcf994e458c238a348b55",
            "qname": "org.eclipse.jetty.http.HttpParser.quickStart(ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/a285deea42fcab60d9edcf994e458c238a348b55/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "diff": "{\"lhs\" : {\"58\":[\"$r11 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r11.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r11\"],\"69\":[\"$r4 = new java.lang.StringBuilder\", \"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()\", \"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"padding is too large >\")\"],\"77\":[\"$r10 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r10.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(400, null)\", \"throw $r10\"]},\"rhs\" : {\"58\":[\"r33 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r33.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r36 = (java.lang.Throwable) r33\", \"throw r36\"],\"69\":[\"r34 = new java.lang.StringBuilder\", \"specialinvoke r34.<java.lang.StringBuilder: void <init>()>()\", \"$r6 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"padding is too large >\")\"],\"77\":[\"r35 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r35.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(400, null)\", \"r37 = (java.lang.Throwable) r35\", \"throw r37\"]}}"
        },
        {
            "commit": "a285deea42fcab60d9edcf994e458c238a348b55",
            "qname": "org.eclipse.jetty.http.HttpParser.reset()",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/a285deea42fcab60d9edcf994e458c238a348b55/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "diff": "{\"lhs\" : {\"next.6\":[\"$r7 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r7.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"Bad EOL\", null)\", \"throw $r7\"],\"next.28\":[\"$r4 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r4.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"Bad EOL\", null)\", \"throw $r4\"],\"next.35\":[\"$r2 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"next.37\":[\"specialinvoke $r2.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r3, b5, r1, null)\", \"throw $r2\"],\"quickStart.58\":[\"$r11 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r11.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r11\"],\"quickStart.69\":[\"$r4 = new java.lang.StringBuilder\", \"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()\", \"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"padding is too large >\")\"],\"quickStart.77\":[\"$r10 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r10.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(400, null)\", \"throw $r10\"],\"parseLine.15\":[\"if $i1 <= 0 goto $r3 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseLine.20\":[\"if $i65 <= $i66 goto $r3 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseLine.25\":[\"$r157 = new java.lang.StringBuilder\", \"specialinvoke $r157.<java.lang.StringBuilder: void <init>()>()\", \"$r159 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"parseLine.33\":[\"$r163 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r163.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(414, null)\", \"throw $r163\"],\"parseLine.39\":[\"$r151 = new java.lang.StringBuilder\", \"specialinvoke $r151.<java.lang.StringBuilder: void <init>()>()\", \"$r153 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"request is too large >\")\"],\"parseLine.47\":[\"goto [?= $r150 = new org.eclipse.jetty.http.HttpParser$BadMessageException]\"],\"parseLine.49\":[\"$r144 = new java.lang.StringBuilder\", \"specialinvoke $r144.<java.lang.StringBuilder: void <init>()>()\", \"$r146 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"response is too large >\")\"],\"parseLine.57\":[\"$r150 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r150.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(413, null)\", \"throw $r150\", \"$r3 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseLine.64\":[\"tableswitch($i3) {     case 1: goto if b0 != 32 goto (branch);     case 2: goto if b0 != 32 goto (branch);     case 3: goto if b0 > 32 goto $r90 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>;     case 4: goto if b0 != 32 goto (branch);     case 5: goto if b0 != 32 goto (branch);     case 6: goto if b0 <= 32 goto (branch);     case 7: goto if b0 != 10 goto (branch);     case 8: goto if b0 != 10 goto (branch);     default: goto $r138 = new java.lang.IllegalStateException; }\"],\"parseLine.84\":[\"if b0 != 10 goto $r129 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r131 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r131.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"No URI\", null)\", \"throw $r131\", \"$r129 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseLine.90\":[\"specialinvoke $r129.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r130, b0, r1, null)\", \"throw $r129\"],\"parseLine.107\":[\"$r126 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r126.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Unknown Version\", null)\", \"throw $r126\"],\"parseLine.114\":[\"$r118 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseLine.116\":[\"specialinvoke $r118.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r119, b0, r1, null)\", \"throw $r118\"],\"parseLine.162\":[\"$r105 = new java.lang.StringBuilder\", \"specialinvoke $r105.<java.lang.StringBuilder: void <init>()>()\", \"$r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"parseLine.170\":[\"$r111 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r111.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(414, null)\", \"throw $r111\"],\"parseLine.198\":[\"$r114 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.202\":[\"goto [?= specialinvoke $r114.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, $r171, null)]\"],\"parseLine.204\":[\"specialinvoke $r114.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, $r171, null)\", \"throw $r114\"],\"parseLine.218\":[\"if b0 >= 32 goto $r85 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"if b0 < 0 goto $r85 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.233\":[\"$r85 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r85.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r85\"],\"parseLine.326\":[\"$r64 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r64.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r64\"],\"parseLine.417\":[\"$r28 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r28.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r28\"],\"parseLine.433\":[\"$r22 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r22.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Unknown Version\", null)\", \"throw $r22\"],\"parseLine.445\":[\"$r21 = new org.eclipse.jetty.util.ArrayTernaryTrie\", \"specialinvoke $r21.<org.eclipse.jetty.util.ArrayTernaryTrie: void <init>(int)>(i80)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields> = $r21\"],\"parseLine.465\":[\"if b0 < 32 goto $r11 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.470\":[\"$r11 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r11.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r11\"],\"parseLine.488\":[\"if b0 < 32 goto $r4 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.498\":[\"$r4 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r4.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r4\", \"$r138 = new java.lang.IllegalStateException\"],\"parseLine.504\":[\"specialinvoke $r138.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r140)\", \"throw $r138\"],\"handleKnownHeaders.2\":[\"z6 = 0\", \"$r3 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpHeader>\", \"$r2 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$i0 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpHeader: int ordinal()>()\", \"$i1 = $r3[$i0]\", \"tableswitch($i1) {     case 1: goto $r36 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>;     case 2: goto $r25 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeaderValue _value>;     case 3: goto $r16 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 4: goto $r14 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 5: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 6: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 7: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 8: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 9: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 10: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 11: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 12: goto $r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     default: goto if z6 == 0 goto return 0; }\", \"$r36 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>\", \"$r35 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CHUNKED_CONTENT>\", \"if $r36 == $r35 goto (branch)\", \"$r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r37)\", \"r0.<org.eclipse.jetty.http.HttpParser: long _contentLength> = $l4\", \"goto [?= $l5 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>]\", \"$r42 := @caughtexception\", \"$r43 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r43.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r42)\", \"$r44 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r44.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad Content-Length\", null)\", \"throw $r44\", \"$l5 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>\", \"$b6 = $l5 cmp 0L\", \"if $b6 > 0 goto $r38 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CONTENT_LENGTH>\", \"$r39 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r39\", \"goto [?= (branch)]\", \"$r38 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CONTENT_LENGTH>\"],\"handleKnownHeaders.30\":[\"$r25 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeaderValue _value>\", \"$r24 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"if $r25 != $r24 goto $r27 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r34 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CHUNKED_CONTENT>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r34\"],\"handleKnownHeaders.36\":[\"$r27 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r26 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"$r28 = virtualinvoke $r26.<org.eclipse.jetty.http.HttpHeaderValue: java.lang.String toString()>()\", \"$z4 = virtualinvoke $r27.<java.lang.String: boolean endsWith(java.lang.String)>($r28)\", \"if $z4 == 0 goto $r30 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\"],\"handleKnownHeaders.44\":[\"$r30 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r29 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"$r31 = virtualinvoke $r29.<org.eclipse.jetty.http.HttpHeaderValue: java.lang.String toString()>()\", \"$z5 = virtualinvoke $r30.<java.lang.String: boolean contains(java.lang.CharSequence)>($r31)\"],\"handleKnownHeaders.49\":[\"$r32 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r32.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad chunking\", null)\", \"throw $r32\", \"$r16 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"if $r16 == null goto $z7 = 0\", \"$r23 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"if $r23 != null goto $z7 = 0\", \"$z7 = 1\", \"goto [?= z6 = $z7]\", \"$z7 = 0\", \"z6 = $z7\"],\"handleKnownHeaders.61\":[\"$r46 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if $r46 == null goto (branch)\", \"$r17 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$i2 = virtualinvoke $r17.<java.lang.String: int length()>()\", \"if $i2 != 0 goto $r18 = new org.eclipse.jetty.util.HostPort\"],\"handleKnownHeaders.67\":[\"$r18 = new org.eclipse.jetty.util.HostPort\", \"$r19 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"specialinvoke $r18.<org.eclipse.jetty.util.HostPort: void <init>(java.lang.String)>($r19)\", \"$r20 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"if $r20 == null goto (branch)\", \"$r21 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"$r22 = virtualinvoke $r18.<org.eclipse.jetty.util.HostPort: java.lang.String getHost()>()\", \"$i3 = virtualinvoke $r18.<org.eclipse.jetty.util.HostPort: int getPort()>()\", \"interfaceinvoke $r21.<org.eclipse.jetty.http.HttpParser$RequestHandler: boolean parsedHostHeader(java.lang.String,int)>($r22, $i3)\", \"goto [?= (branch)]\", \"$r40 := @caughtexception\", \"$r41 = new org.eclipse.jetty.http.HttpParser$1\", \"specialinvoke $r41.<org.eclipse.jetty.http.HttpParser$1: void <init>(org.eclipse.jetty.http.HttpParser,int,java.lang.String,java.lang.Exception)>(r0, 400, \"Bad Host header\", $r40)\", \"throw $r41\", \"$r14 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if $r14 == null goto (branch)\"],\"handleKnownHeaders.84\":[\"$z2 = virtualinvoke $r15.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"close\")\"],\"handleKnownHeaders.89\":[\"$r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"if $r4 == null goto $z8 = 0\", \"$r13 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"if $r13 != null goto $z8 = 0\", \"$z8 = 1\", \"goto [?= z6 = $z8]\", \"$z8 = 0\", \"z6 = $z8\", \"goto [?= (branch)]\", \"if z6 == 0 goto return 0\"],\"handleKnownHeaders.100\":[\"$z0 = interfaceinvoke $r5.<org.eclipse.jetty.util.Trie: boolean isFull()>()\"],\"handleKnownHeaders.102\":[\"$r6 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"if $r6 == null goto return 0\", \"$r7 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\"],\"handleKnownHeaders.106\":[\"$r8 = new org.eclipse.jetty.http.HttpField\", \"$r10 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$r9 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"specialinvoke $r8.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)>($r10, $r9)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field> = $r8\", \"$r12 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"$r11 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"interfaceinvoke $r12.<org.eclipse.jetty.util.Trie: boolean put(java.lang.Object)>($r11)\"],\"parseHeaders.15\":[\"if $i3 <= 0 goto $r5 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseHeaders.20\":[\"if $i47 <= $i48 goto $r5 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseHeaders.22\":[\"$r90 = new java.lang.StringBuilder\", \"specialinvoke $r90.<java.lang.StringBuilder: void <init>()>()\", \"$r92 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Header is too large >\")\"],\"parseHeaders.30\":[\"$r96 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r96.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(413, null)\", \"throw $r96\", \"$r5 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseHeaders.37\":[\"tableswitch($i5) {     case 9: goto lookupswitch(b0) {     case 9: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 32: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 58: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r45 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>; };     case 10: goto if b0 == 58 goto $r26 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>;     case 11: goto if b0 > 32 goto $r13 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>;     case 12: goto if b0 >= 32 goto $r112 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r87 = new java.lang.IllegalStateException; }\"],\"parseHeaders.72\":[\"if $r47 == null goto $r97 = new org.eclipse.jetty.http.HttpField\"],\"parseHeaders.75\":[\"$r97 = new org.eclipse.jetty.http.HttpField\"],\"parseHeaders.79\":[\"specialinvoke $r97.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r50, $r49, $r48)\"],\"parseHeaders.101\":[\"$r85 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r85.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"No Host\", null)\", \"throw $r85\"],\"parseHeaders.114\":[\"goto [?= $r101 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>]\"],\"parseHeaders.117\":[\"if $r71 != $r70 goto $r101 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>\"],\"parseHeaders.128\":[\"goto [?= $r101 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>]\"],\"parseHeaders.131\":[\"$r101 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>\"],\"parseHeaders.184\":[\"$r69 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r69.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r69\"],\"parseHeaders.223\":[\"$r65 = new org.eclipse.jetty.http.HttpField\"],\"parseHeaders.225\":[\"specialinvoke $r65.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r66, r107, r108)\", \"r104 = $r65\"],\"parseHeaders.298\":[\"if b0 != 9 goto $r38 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.314\":[\"$r38 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.316\":[\"specialinvoke $r38.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r39, b0, r1, null)\", \"throw $r38\"],\"parseHeaders.333\":[\"if b0 != 10 goto $r16 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.338\":[\"if $r18 != null goto $r19 = new java.lang.StringBuilder\"],\"parseHeaders.341\":[\"$r19 = new java.lang.StringBuilder\", \"specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()\"],\"parseHeaders.344\":[\"$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)\"],\"parseHeaders.353\":[\"$r16 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.355\":[\"specialinvoke $r16.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r17, b0, r1, null)\", \"throw $r16\"],\"parseHeaders.376\":[\"if b0 != 10 goto $r9 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.386\":[\"$r9 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.388\":[\"specialinvoke $r9.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r10, b0, r1, null)\", \"throw $r9\", \"$r87 = new java.lang.IllegalStateException\"],\"parseHeaders.393\":[\"specialinvoke $r87.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r89)\", \"throw $r87\"],\"parseNext.96\":[\"$r22 = new java.lang.IllegalStateException\", \"specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"too much data after closed\")\", \"throw $r22\"],\"parseNext.103\":[\"$r9 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseNext.143\":[\"$r37 = new java.lang.StringBuilder\", \"specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()\", \"$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\", \"$i21 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessageException: int access$500(org.eclipse.jetty.http.HttpParser$BadMessageException)>($r36)\"],\"parseNext.148\":[\"$r41 = virtualinvoke $r36.<org.eclipse.jetty.http.HttpParser$BadMessageException: java.lang.String getMessage()>()\"],\"parseNext.150\":[\"$r52 = new java.lang.StringBuilder\", \"specialinvoke $r52.<java.lang.StringBuilder: void <init>()>()\", \"$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")\", \"$r54 = virtualinvoke $r36.<org.eclipse.jetty.http.HttpParser$BadMessageException: java.lang.String getMessage()>()\"],\"parseNext.172\":[\"$i22 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessageException: int access$500(org.eclipse.jetty.http.HttpParser$BadMessageException)>($r36)\", \"$r50 = virtualinvoke $r36.<org.eclipse.jetty.http.HttpParser$BadMessageException: java.lang.String getMessage()>()\"],\"parseNext.179\":[\"$r57 = new java.lang.StringBuilder\", \"specialinvoke $r57.<java.lang.StringBuilder: void <init>()>()\", \"$r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\"],\"parseContent.3\":[\"if i46 != 0 goto $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r44 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r43 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CONTENT>\", \"if $r44 != $r43 goto $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\"],\"parseContent.11\":[\"if $b45 != 0 goto $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r45 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r45)\", \"$r46 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z6 = interfaceinvoke $r46.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z6\", \"$r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$i48 = virtualinvoke $r47.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"$r48 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"$i49 = virtualinvoke $r48.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\"],\"parseContent.23\":[\"$r3 = <org.eclipse.jetty.http.HttpParser$2: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseContent.27\":[\"tableswitch($i1) {     case 13: goto staticinvoke <org.eclipse.jetty.util.BufferUtil: void clear(java.nio.ByteBuffer)>(r1);     case 14: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();     case 15: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();     case 16: goto $r39 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>();     case 17: goto $l21 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>;     case 18: goto b51 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 19: goto b52 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 20: goto b53 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 21: goto $i3 = r0.<org.eclipse.jetty.http.HttpParser: int _chunkLength>;     case 22: goto b56 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     default: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>(); }\", \"$r39 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r39\"],\"parseContent.37\":[\"$r42 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r41 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z5 = interfaceinvoke $r42.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r41)\", \"if $z5 == 0 goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.46\":[\"if $b22 != 0 goto $r25 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"$r37 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r37)\", \"$r38 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z4 = interfaceinvoke $r38.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z4\", \"$r25 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r25\"],\"parseContent.57\":[\"$r34 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$r33 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i35 = virtualinvoke $r33.<java.nio.ByteBuffer: int position()>()\"],\"parseContent.62\":[\"virtualinvoke $r34.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i37)\"],\"parseContent.64\":[\"$r26 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i26 = virtualinvoke $r26.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.70\":[\"$r27 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i30 = virtualinvoke $r27.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.74\":[\"$r30 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r29 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z2 = interfaceinvoke $r30.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r29)\", \"if $z2 == 0 goto $l33 = r0.<org.eclipse.jetty.http.HttpParser: long _contentPosition>\"],\"parseContent.83\":[\"$r31 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r31)\", \"$r32 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z3 = interfaceinvoke $r32.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z3\"],\"parseContent.93\":[\"$r24 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_SIZE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r24)\"],\"parseContent.101\":[\"if $i18 != 0 goto $r22 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"$r23 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r23)\"],\"parseContent.105\":[\"$r22 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r22)\", \"goto [?= i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()]\", \"if b52 <= 32 goto $r21 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_PARAMS>\"],\"parseContent.110\":[\"$r21 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_PARAMS>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r21)\"],\"parseContent.122\":[\"if $i13 != 0 goto $r19 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"$r20 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r20)\"],\"parseContent.126\":[\"$r19 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r19)\", \"goto [?= i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()]\"],\"parseContent.132\":[\"if i54 != 0 goto $r8 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"$r18 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNKED_CONTENT>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r18)\"],\"parseContent.136\":[\"$r8 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r8\", \"if i46 <= i54 goto $r9 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$r14 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$r13 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i11 = virtualinvoke $r13.<java.nio.ByteBuffer: int position()>()\", \"$i12 = $i11 + i54\", \"virtualinvoke $r14.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i12)\"],\"parseContent.145\":[\"i55 = virtualinvoke $r9.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.156\":[\"$r12 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r11 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z1 = interfaceinvoke $r12.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r11)\", \"if $z1 == 0 goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.161\":[\"b56 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1)\", \"if b56 != 0 goto (branch)\", \"goto [?= i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()]\", \"if b56 != 10 goto $r4 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r6 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r6)\", \"$r7 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z0 = interfaceinvoke $r7.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z0\", \"$r4 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"specialinvoke $r4.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r5, b56, r1, null)\", \"throw $r4\"],\"parseContent.177\":[\"goto [?= $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>]\"],\"getProxyField.6\":[\"if $z0 == 0 goto $r3 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"getProxyField.16\":[\"$r3 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r3.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r3\"]},\"rhs\" : {\"next.6\":[\"r8 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r8.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"Bad EOL\", null)\", \"r11 = (java.lang.Throwable) r8\", \"throw r11\"],\"next.28\":[\"r9 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r9.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"Bad EOL\", null)\", \"r12 = (java.lang.Throwable) r9\", \"throw r12\"],\"next.35\":[\"r10 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"next.37\":[\"specialinvoke r10.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r3, b5, r1, null)\", \"r13 = (java.lang.Throwable) r10\", \"throw r13\"],\"quickStart.58\":[\"r33 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r33.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r36 = (java.lang.Throwable) r33\", \"throw r36\"],\"quickStart.69\":[\"r34 = new java.lang.StringBuilder\", \"specialinvoke r34.<java.lang.StringBuilder: void <init>()>()\", \"$r6 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"padding is too large >\")\"],\"quickStart.77\":[\"r35 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r35.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(400, null)\", \"r37 = (java.lang.Throwable) r35\", \"throw r37\"],\"parseLine.15\":[\"if $i1 <= 0 goto $r3 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseLine.20\":[\"if $i65 <= $i66 goto $r3 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseLine.25\":[\"r185 = new java.lang.StringBuilder\", \"specialinvoke r185.<java.lang.StringBuilder: void <init>()>()\", \"$r159 = virtualinvoke r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"parseLine.33\":[\"r186 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r186.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(414, null)\", \"r205 = (java.lang.Throwable) r186\", \"throw r205\"],\"parseLine.39\":[\"r187 = new java.lang.StringBuilder\", \"specialinvoke r187.<java.lang.StringBuilder: void <init>()>()\", \"$r153 = virtualinvoke r187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"request is too large >\")\"],\"parseLine.47\":[\"goto [?= r189 = new org.eclipse.jetty.http.HttpParser$BadMessageException]\"],\"parseLine.49\":[\"r188 = new java.lang.StringBuilder\", \"specialinvoke r188.<java.lang.StringBuilder: void <init>()>()\", \"$r146 = virtualinvoke r188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"response is too large >\")\"],\"parseLine.57\":[\"r189 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r189.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(413, null)\", \"r206 = (java.lang.Throwable) r189\", \"throw r206\", \"$r3 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseLine.64\":[\"tableswitch($i3) {     case 1: goto if b0 != 32 goto (branch);     case 2: goto if b0 != 32 goto (branch);     case 3: goto if b0 > 32 goto $r90 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>;     case 4: goto if b0 != 32 goto (branch);     case 5: goto if b0 != 32 goto (branch);     case 6: goto if b0 <= 32 goto (branch);     case 7: goto if b0 != 10 goto (branch);     case 8: goto if b0 != 10 goto (branch);     default: goto r204 = new java.lang.IllegalStateException; }\"],\"parseLine.84\":[\"if b0 != 10 goto r191 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"r190 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r190.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"No URI\", null)\", \"r207 = (java.lang.Throwable) r190\", \"throw r207\", \"r191 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseLine.90\":[\"specialinvoke r191.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r130, b0, r1, null)\", \"r208 = (java.lang.Throwable) r191\", \"throw r208\"],\"parseLine.107\":[\"r192 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r192.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Unknown Version\", null)\", \"r209 = (java.lang.Throwable) r192\", \"throw r209\"],\"parseLine.114\":[\"r193 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseLine.116\":[\"specialinvoke r193.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r119, b0, r1, null)\", \"r210 = (java.lang.Throwable) r193\", \"throw r210\"],\"parseLine.162\":[\"r194 = new java.lang.StringBuilder\", \"specialinvoke r194.<java.lang.StringBuilder: void <init>()>()\", \"$r107 = virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"parseLine.170\":[\"r195 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r195.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(414, null)\", \"r211 = (java.lang.Throwable) r195\", \"throw r211\"],\"parseLine.198\":[\"r196 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.202\":[\"goto [?= specialinvoke r196.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, $r171, null)]\"],\"parseLine.204\":[\"specialinvoke r196.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, $r171, null)\", \"r212 = (java.lang.Throwable) r196\", \"throw r212\"],\"parseLine.218\":[\"if b0 >= 32 goto r197 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"if b0 < 0 goto r197 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.233\":[\"r197 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r197.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r213 = (java.lang.Throwable) r197\", \"throw r213\"],\"parseLine.326\":[\"r198 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r198.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r214 = (java.lang.Throwable) r198\", \"throw r214\"],\"parseLine.417\":[\"r199 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r199.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r215 = (java.lang.Throwable) r199\", \"throw r215\"],\"parseLine.433\":[\"r200 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r200.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Unknown Version\", null)\", \"r216 = (java.lang.Throwable) r200\", \"throw r216\"],\"parseLine.445\":[\"r201 = new org.eclipse.jetty.util.ArrayTernaryTrie\", \"specialinvoke r201.<org.eclipse.jetty.util.ArrayTernaryTrie: void <init>(int)>(i80)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields> = r201\"],\"parseLine.465\":[\"if b0 < 32 goto r202 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.470\":[\"r202 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r202.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r217 = (java.lang.Throwable) r202\", \"throw r217\"],\"parseLine.488\":[\"if b0 < 32 goto r203 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.498\":[\"r203 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r203.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r218 = (java.lang.Throwable) r203\", \"throw r218\", \"r204 = new java.lang.IllegalStateException\"],\"parseLine.504\":[\"specialinvoke r204.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r140)\", \"throw r204\"],\"handleKnownHeaders.2\":[\"z7 = 0\", \"$r4 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpHeader>\", \"$r3 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$i1 = virtualinvoke $r3.<org.eclipse.jetty.http.HttpHeader: int ordinal()>()\", \"$i2 = $r4[$i1]\", \"tableswitch($i2) {     case 1: goto $r35 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>;     case 2: goto $r24 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeaderValue _value>;     case 3: goto $r17 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 4: goto $r15 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 5: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 6: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 7: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 8: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 9: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 10: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 11: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     case 12: goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>;     default: goto if z7 == 0 goto return 0; }\", \"$r35 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>\", \"$r34 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CHUNKED_CONTENT>\", \"if $r35 == $r34 goto (branch)\", \"$r36 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$l11 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r36)\", \"r0.<org.eclipse.jetty.http.HttpParser: long _contentLength> = $l11\", \"goto [?= $l12 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>]\", \"$r39 := @caughtexception\", \"$r40 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r40.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r39)\", \"r48 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r48.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad Content-Length\", null)\", \"r54 = (java.lang.Throwable) r48\", \"throw r54\", \"$l12 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>\", \"$b13 = $l12 cmp 0L\", \"if $b13 > 0 goto $r37 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CONTENT_LENGTH>\", \"$r38 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\"],\"handleKnownHeaders.30\":[\"$r37 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CONTENT_LENGTH>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r37\"],\"handleKnownHeaders.36\":[\"$r24 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeaderValue _value>\", \"$r23 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"if $r24 != $r23 goto $r26 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\"],\"handleKnownHeaders.44\":[\"$r26 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r25 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"$r27 = virtualinvoke $r25.<org.eclipse.jetty.http.HttpHeaderValue: java.lang.String toString()>()\", \"$z4 = virtualinvoke $r26.<java.lang.String: boolean endsWith(java.lang.String)>($r27)\", \"if $z4 == 0 goto $r29 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r32 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent CHUNKED_CONTENT>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r32\", \"goto [?= (branch)]\", \"$r29 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r28 = <org.eclipse.jetty.http.HttpHeaderValue: org.eclipse.jetty.http.HttpHeaderValue CHUNKED>\", \"$r30 = virtualinvoke $r28.<org.eclipse.jetty.http.HttpHeaderValue: java.lang.String toString()>()\", \"$z5 = virtualinvoke $r29.<java.lang.String: boolean contains(java.lang.CharSequence)>($r30)\"],\"handleKnownHeaders.49\":[\"r49 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r49.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad chunking\", null)\", \"r55 = (java.lang.Throwable) r49\", \"throw r55\", \"$r17 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"if $r17 == null goto $z8 = 0\", \"$r22 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"if $r22 != null goto $z8 = 0\", \"$z8 = 1\", \"goto [?= z7 = $z8]\", \"$z8 = 0\", \"z7 = $z8\"],\"handleKnownHeaders.61\":[\"r46 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"i14 = 0\", \"if r46 == null goto r50 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"$i3 = virtualinvoke r46.<java.lang.String: int length()>()\", \"if $i3 != 0 goto i15 = virtualinvoke r46.<java.lang.String: int length()>()\", \"r50 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r50.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad Host header\", null)\", \"r56 = (java.lang.Throwable) r50\", \"throw r56\", \"i15 = virtualinvoke r46.<java.lang.String: int length()>()\", \"i16 = i15\", \"$i4 = i16\", \"i16 = i16 + -1\", \"if $i4 <= 0 goto $c17 = virtualinvoke r46.<java.lang.String: char charAt(int)>(0)\", \"$c8 = virtualinvoke r46.<java.lang.String: char charAt(int)>(i16)\", \"$c9 = 255 & $c8\", \"c0 = (char) $c9\", \"lookupswitch(c0) {     case 58: goto i15 = i16;     case 93: goto goto [?= $c17 = virtualinvoke r46.<java.lang.String: char charAt(int)>(0)];     default: goto goto [?= $i4 = i16]; }\", \"goto [?= $c17 = virtualinvoke r46.<java.lang.String: char charAt(int)>(0)]\", \"i15 = i16\", \"$i10 = i16 + 1\", \"$r21 = virtualinvoke r46.<java.lang.String: java.lang.String substring(int)>($i10)\", \"i14 = staticinvoke <org.eclipse.jetty.util.StringUtil: int toInt(java.lang.String)>($r21)\", \"goto [?= $c17 = virtualinvoke r46.<java.lang.String: char charAt(int)>(0)]\", \"$r42 := @caughtexception\", \"$z6 = r0.<org.eclipse.jetty.http.HttpParser: boolean DEBUG>\", \"if $z6 == 0 goto r51 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"$r44 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r44.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r42)\", \"r51 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r51.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad Host header\", null)\", \"r57 = (java.lang.Throwable) r51\", \"throw r57\", \"goto [?= $i4 = i16]\", \"$c17 = virtualinvoke r46.<java.lang.String: char charAt(int)>(0)\", \"if $c17 != 91 goto $i5 = virtualinvoke r46.<java.lang.String: int length()>()\", \"$i6 = i15 - 1\", \"$c7 = virtualinvoke r46.<java.lang.String: char charAt(int)>($i6)\", \"if $c7 == 93 goto r46 = virtualinvoke r46.<java.lang.String: java.lang.String substring(int,int)>(0, i15)\", \"r52 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r52.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad IPv6 Host header\", null)\", \"r58 = (java.lang.Throwable) r52\", \"throw r58\", \"r46 = virtualinvoke r46.<java.lang.String: java.lang.String substring(int,int)>(0, i15)\", \"goto [?= $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>]\", \"$i5 = virtualinvoke r46.<java.lang.String: int length()>()\", \"if i15 == $i5 goto $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"r46 = virtualinvoke r46.<java.lang.String: java.lang.String substring(int,int)>(0, i15)\", \"$r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"if $r47 == null goto (branch)\", \"$r19 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"interfaceinvoke $r19.<org.eclipse.jetty.http.HttpParser$RequestHandler: boolean parsedHostHeader(java.lang.String,int)>(r46, i14)\"],\"handleKnownHeaders.67\":null,\"handleKnownHeaders.84\":[\"if $r15 == null goto (branch)\", \"$r16 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$z2 = virtualinvoke $r16.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"close\")\"],\"handleKnownHeaders.89\":null,\"handleKnownHeaders.100\":[\"if $r5 == null goto $z9 = 0\", \"$r14 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"if $r14 != null goto $z9 = 0\", \"$z9 = 1\", \"goto [?= z7 = $z9]\", \"$z9 = 0\", \"z7 = $z9\", \"goto [?= (branch)]\", \"if z7 == 0 goto return 0\", \"$r6 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"$z0 = interfaceinvoke $r6.<org.eclipse.jetty.util.Trie: boolean isFull()>()\"],\"handleKnownHeaders.102\":[\"$r7 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\"],\"handleKnownHeaders.106\":[\"$r8 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if $r8 == null goto return 0\", \"r53 = new org.eclipse.jetty.http.HttpField\", \"$r11 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$r10 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"specialinvoke r53.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)>($r11, $r10)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field> = r53\", \"$r13 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"$r12 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"interfaceinvoke $r13.<org.eclipse.jetty.util.Trie: boolean put(java.lang.Object)>($r12)\"],\"parseHeaders.15\":[\"if $i3 <= 0 goto $r5 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseHeaders.20\":[\"if $i47 <= $i48 goto $r5 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseHeaders.22\":[\"r113 = new java.lang.StringBuilder\", \"specialinvoke r113.<java.lang.StringBuilder: void <init>()>()\", \"$r92 = virtualinvoke r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Header is too large >\")\"],\"parseHeaders.30\":[\"r114 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r114.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(413, null)\", \"r124 = (java.lang.Throwable) r114\", \"throw r124\", \"$r5 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseHeaders.37\":[\"tableswitch($i5) {     case 9: goto lookupswitch(b0) {     case 9: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 32: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 58: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r45 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>; };     case 10: goto if b0 == 58 goto $r26 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>;     case 11: goto if b0 > 32 goto $r13 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>;     case 12: goto if b0 >= 32 goto $r112 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto r123 = new java.lang.IllegalStateException; }\"],\"parseHeaders.72\":[\"if $r47 == null goto r115 = new org.eclipse.jetty.http.HttpField\"],\"parseHeaders.75\":[\"r115 = new org.eclipse.jetty.http.HttpField\", \"$r97 = r115\"],\"parseHeaders.79\":[\"specialinvoke r115.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r50, $r49, $r48)\"],\"parseHeaders.101\":[\"r116 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r116.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"No Host\", null)\", \"r125 = (java.lang.Throwable) r116\", \"throw r125\"],\"parseHeaders.114\":[\"goto [?= $r101 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>]\"],\"parseHeaders.117\":[\"if $r71 != $r70 goto $r101 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>\"],\"parseHeaders.128\":[\"goto [?= $r101 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>]\"],\"parseHeaders.131\":[\"$r101 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>\"],\"parseHeaders.184\":[\"r117 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r117.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r126 = (java.lang.Throwable) r117\", \"throw r126\"],\"parseHeaders.223\":[\"r118 = new org.eclipse.jetty.http.HttpField\"],\"parseHeaders.225\":[\"specialinvoke r118.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r66, r107, r108)\", \"r104 = r118\"],\"parseHeaders.298\":[\"if b0 != 9 goto r119 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.314\":[\"r119 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.316\":[\"specialinvoke r119.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r39, b0, r1, null)\", \"r127 = (java.lang.Throwable) r119\", \"throw r127\"],\"parseHeaders.333\":[\"if b0 != 10 goto r121 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.338\":[\"if $r18 != null goto r120 = new java.lang.StringBuilder\"],\"parseHeaders.341\":[\"r120 = new java.lang.StringBuilder\", \"specialinvoke r120.<java.lang.StringBuilder: void <init>()>()\"],\"parseHeaders.344\":[\"$r21 = virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)\"],\"parseHeaders.353\":[\"r121 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.355\":[\"specialinvoke r121.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r17, b0, r1, null)\", \"r128 = (java.lang.Throwable) r121\", \"throw r128\"],\"parseHeaders.376\":[\"if b0 != 10 goto r122 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.386\":[\"r122 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.388\":[\"specialinvoke r122.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r10, b0, r1, null)\", \"r129 = (java.lang.Throwable) r122\", \"throw r129\", \"r123 = new java.lang.IllegalStateException\"],\"parseHeaders.393\":[\"specialinvoke r123.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r89)\", \"throw r123\"],\"parseNext.96\":[\"r83 = new java.lang.IllegalStateException\", \"specialinvoke r83.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"too much data after closed\")\", \"throw r83\"],\"parseNext.103\":[\"$r9 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseNext.143\":[\"r84 = new java.lang.StringBuilder\", \"specialinvoke r84.<java.lang.StringBuilder: void <init>()>()\", \"$r39 = virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\", \"r87 = (org.eclipse.jetty.http.HttpParser$BadMessageException) $r36\", \"$i21 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessageException: int access$500(org.eclipse.jetty.http.HttpParser$BadMessageException)>(r87)\"],\"parseNext.148\":[\"r88 = (org.eclipse.jetty.http.HttpParser$BadMessageException) $r36\", \"$r41 = virtualinvoke r88.<org.eclipse.jetty.http.HttpParser$BadMessageException: java.lang.String getMessage()>()\"],\"parseNext.150\":[\"r85 = new java.lang.StringBuilder\", \"specialinvoke r85.<java.lang.StringBuilder: void <init>()>()\", \"$r53 = virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")\", \"r89 = (org.eclipse.jetty.http.HttpParser$BadMessageException) $r36\", \"$r54 = virtualinvoke r89.<org.eclipse.jetty.http.HttpParser$BadMessageException: java.lang.String getMessage()>()\"],\"parseNext.172\":[\"r90 = (org.eclipse.jetty.http.HttpParser$BadMessageException) $r36\", \"$i22 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessageException: int access$500(org.eclipse.jetty.http.HttpParser$BadMessageException)>(r90)\", \"r91 = (org.eclipse.jetty.http.HttpParser$BadMessageException) $r36\", \"$r50 = virtualinvoke r91.<org.eclipse.jetty.http.HttpParser$BadMessageException: java.lang.String getMessage()>()\"],\"parseNext.179\":[\"r86 = new java.lang.StringBuilder\", \"specialinvoke r86.<java.lang.StringBuilder: void <init>()>()\", \"$r59 = virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\"],\"parseContent.3\":[\"if i46 != 0 goto $r45 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r42 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r41 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CONTENT>\", \"if $r42 != $r41 goto $r45 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\"],\"parseContent.11\":[\"if $b45 != 0 goto $r45 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r43 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r43)\", \"$r44 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z7 = interfaceinvoke $r44.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z7\", \"$r45 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$i48 = virtualinvoke $r45.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"$r46 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"$i49 = virtualinvoke $r46.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\"],\"parseContent.23\":[\"$r3 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpParser$State>\"],\"parseContent.27\":[\"tableswitch($i1) {     case 13: goto staticinvoke <org.eclipse.jetty.util.BufferUtil: void clear(java.nio.ByteBuffer)>(r1);     case 14: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();     case 15: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();     case 16: goto $r37 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>();     case 17: goto $l21 = r0.<org.eclipse.jetty.http.HttpParser: long _contentLength>;     case 18: goto b51 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 19: goto b52 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 20: goto b53 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: byte next(java.nio.ByteBuffer)>(r1);     case 21: goto $i3 = r0.<org.eclipse.jetty.http.HttpParser: int _chunkLength>;     default: goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>(); }\", \"$r37 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r37\"],\"parseContent.37\":[\"$r40 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r39 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z6 = interfaceinvoke $r40.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r39)\", \"if $z6 == 0 goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.46\":[\"if $b22 != 0 goto $r23 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"$r35 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r35)\", \"$r36 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z5 = interfaceinvoke $r36.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z5\", \"$r23 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r23\"],\"parseContent.57\":[\"$r32 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$r31 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i35 = virtualinvoke $r31.<java.nio.ByteBuffer: int position()>()\"],\"parseContent.62\":[\"virtualinvoke $r32.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i37)\"],\"parseContent.64\":[\"$r24 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i26 = virtualinvoke $r24.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.70\":[\"$r25 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$i30 = virtualinvoke $r25.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.74\":[\"$r28 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r27 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z3 = interfaceinvoke $r28.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r27)\", \"if $z3 == 0 goto $l33 = r0.<org.eclipse.jetty.http.HttpParser: long _contentPosition>\"],\"parseContent.83\":[\"$r29 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r29)\", \"$r30 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z4 = interfaceinvoke $r30.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z4\"],\"parseContent.93\":[\"$r22 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_SIZE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r22)\"],\"parseContent.101\":[\"if $i18 != 0 goto $r19 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"$r20 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r20)\", \"$r21 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z2 = interfaceinvoke $r21.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z2\", \"$r19 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r19)\"],\"parseContent.105\":[\"if b52 <= 32 goto $r18 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_PARAMS>\"],\"parseContent.110\":[\"$r18 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK_PARAMS>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r18)\"],\"parseContent.122\":[\"if $i13 != 0 goto $r15 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"$r16 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r16)\", \"$r17 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z1 = interfaceinvoke $r17.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\", \"return $z1\", \"$r15 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNK>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r15)\"],\"parseContent.126\":null,\"parseContent.132\":[\"if i54 != 0 goto $r4 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"$r14 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNKED_CONTENT>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r14)\"],\"parseContent.136\":[\"$r4 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk> = $r4\", \"if i46 <= i54 goto $r5 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$r10 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\"],\"parseContent.145\":[\"$i11 = virtualinvoke $r9.<java.nio.ByteBuffer: int position()>()\", \"$i12 = $i11 + i54\", \"virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i12)\", \"$r5 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"i55 = virtualinvoke $r5.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.156\":[\"$r8 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r7 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _contentChunk>\", \"$z0 = interfaceinvoke $r8.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean content(java.lang.Object)>($r7)\", \"if $z0 == 0 goto i46 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>()\"],\"parseContent.161\":null,\"parseContent.177\":[\"goto [?= $r45 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>]\"],\"getProxyField.6\":[\"if $z0 == 0 goto r8 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"getProxyField.16\":[\"r8 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke r8.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"r9 = (java.lang.Throwable) r8\", \"throw r9\"]}}"
        },
        {
            "commit": "a285deea42fcab60d9edcf994e458c238a348b55",
            "qname": "org.eclipse.jetty.server.HttpChannel",
            "affectedFile": "/org/eclipse/jetty/server/HttpChannel.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/a285deea42fcab60d9edcf994e458c238a348b55/org/eclipse/jetty/server/HttpChannel.class",
            "contained": false,
            "diff": null
        },
        {
            "commit": "a285deea42fcab60d9edcf994e458c238a348b55",
            "qname": "org.eclipse.jetty.server.HttpChannel.badMessage(int,String)",
            "affectedFile": "/org/eclipse/jetty/server/HttpChannel.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/a285deea42fcab60d9edcf994e458c238a348b55/org/eclipse/jetty/server/HttpChannel.class",
            "contained": false,
            "diff": null
        }
    ],
    "cve": "CVE-2017-7658",
    "vulnerable": true
}