{
    "comment": "",
    "cve": "CVE-2014-3577",
    "gav": {
        "version": "4.3.3",
        "artifactId": "httpclient",
        "groupId": "org.apache.httpcomponents"
    },
    "details": [
        {
            "commit": "1614064",
            "diff": "{\"lhs\" : {\"log\":null,\"<init>.2\":null,\"verify.5\":[\"$r5 = new java.util.LinkedList\", \"specialinvoke $r5.<java.util.LinkedList: void <init>()>()\"],\"verify.8\":[\"$i3 = lengthof r2\", \"if $i3 <= 0 goto (branch)\", \"$r28 = r2[0]\", \"if $r28 == null goto (branch)\", \"$r29 = r2[0]\", \"virtualinvoke $r5.<java.util.LinkedList: boolean add(java.lang.Object)>($r29)\", \"if r3 == null goto $z2 = virtualinvoke $r5.<java.util.LinkedList: boolean isEmpty()>()\", \"i4 = lengthof r3\", \"i5 = 0\", \"if i5 >= i4 goto $z2 = virtualinvoke $r5.<java.util.LinkedList: boolean isEmpty()>()\", \"r31 = r3[i5]\", \"if r31 == null goto i5 = i5 + 1\", \"virtualinvoke $r5.<java.util.LinkedList: boolean add(java.lang.Object)>(r31)\", \"i5 = i5 + 1\"],\"verify.23\":[\"$z2 = virtualinvoke $r5.<java.util.LinkedList: boolean isEmpty()>()\", \"if $z2 == 0 goto $r6 = new java.lang.StringBuilder\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Certificate for <\")\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"> doesn\\'t contain CN or DNS subjectAlt\")\", \"r32 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r27 = new javax.net.ssl.SSLException\", \"specialinvoke $r27.<javax.net.ssl.SSLException: void <init>(java.lang.String)>(r32)\", \"throw $r27\", \"$r6 = new java.lang.StringBuilder\", \"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()\", \"$r7 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()\", \"$r8 = <java.util.Locale: java.util.Locale ENGLISH>\", \"r34 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r8)\", \"z10 = 0\", \"r35 = virtualinvoke $r5.<java.util.LinkedList: java.util.Iterator iterator()>()\", \"$z3 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()\"],\"verify.43\":[\"$r16 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>()\", \"r36 = (java.lang.String) $r16\", \"$r17 = <java.util.Locale: java.util.Locale ENGLISH>\", \"r37 = virtualinvoke r36.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r17)\", \"virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" <\")\", \"virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37)\", \"virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62)\", \"$z4 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()\", \"if $z4 == 0 goto $z5 = virtualinvoke r37.<java.lang.String: boolean startsWith(java.lang.String)>(\"*.\")\", \"virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" OR\")\", \"$z5 = virtualinvoke r37.<java.lang.String: boolean startsWith(java.lang.String)>(\"*.\")\", \"if $z5 == 0 goto $z11 = 0\", \"$i2 = virtualinvoke r37.<java.lang.String: int lastIndexOf(int)>(46)\", \"if $i2 < 0 goto $z11 = 0\", \"$z6 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)>(r37)\", \"if $z6 == 0 goto $z11 = 0\", \"$z7 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: boolean isIPAddress(java.lang.String)>(r1)\", \"if $z7 != 0 goto $z11 = 0\", \"$z11 = 1\"],\"verify.63\":[\"$z11 = 0\", \"if $z11 == 0 goto z10 = virtualinvoke r34.<java.lang.String: boolean equals(java.lang.Object)>(r37)\", \"$r21 = virtualinvoke r37.<java.lang.String: java.lang.String substring(int)>(1)\", \"z10 = virtualinvoke r34.<java.lang.String: boolean endsWith(java.lang.String)>($r21)\", \"if z10 == 0 goto (branch)\"],\"verify.69\":[\"$i0 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>(r34)\", \"$i1 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>(r37)\", \"if $i0 != $i1 goto $z12 = 0\", \"$z12 = 1\", \"goto [?= z10 = $z12]\", \"$z12 = 0\", \"z10 = $z12\"],\"verify.77\":[\"z10 = virtualinvoke r34.<java.lang.String: boolean equals(java.lang.Object)>(r37)\", \"if z10 == 0 goto (branch)\"],\"verify.80\":[\"goto [?= $z3 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()]\", \"if z10 != 0 goto return\", \"$r9 = new javax.net.ssl.SSLException\", \"$r10 = new java.lang.StringBuilder\", \"specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()\", \"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"hostname in certificate didn\\'t match: <\")\", \"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"> !=\")\", \"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6)\", \"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r9.<javax.net.ssl.SSLException: void <init>(java.lang.String)>($r15)\", \"throw $r9\"],\"acceptableCountryWildcard.1\":[\"i0 = virtualinvoke r0.<java.lang.String: int length()>()\", \"if i0 < 7 goto return 1\", \"if i0 > 9 goto return 1\", \"$i2 = i0 - 3\", \"$c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2)\", \"if $c3 != 46 goto return 1\", \"$i4 = i0 - 3\", \"r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(2, $i4)\", \"$r2 = <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] BAD_COUNTRY_2LDS>\", \"i1 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($r2, r1)\", \"if i1 >= 0 goto $z0 = 0\"],\"acceptableCountryWildcard.16\":[\"return 1\"],\"getCNs.6\":[\"specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, \",\")\"],\"getCNs.9\":[\"r9 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>()\", \"i0 = virtualinvoke r9.<java.lang.String: int indexOf(java.lang.String)>(\"CN=\")\", \"if i0 < 0 goto (branch)\", \"$i2 = i0 + 3\", \"$r8 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i2)\", \"virtualinvoke $r4.<java.util.LinkedList: boolean add(java.lang.Object)>($r8)\"],\"getCNs.18\":[\"$i1 = virtualinvoke $r4.<java.util.LinkedList: int size()>()\", \"r10 = newarray (java.lang.String)[$i1]\", \"virtualinvoke $r4.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>(r10)\", \"return r10\"],\"getSubjectAlts.9\":[\"r17 = null\", \"r17 = virtualinvoke r0.<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>()\"],\"getSubjectAlts.13\":[\"$r13 = class \"Lorg/apache/http/conn/ssl/AbstractVerifier;\"\", \"$r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>()\", \"$r15 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r14)\", \"$r16 = <java.util.logging.Level: java.util.logging.Level FINE>\", \"virtualinvoke $r15.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r16, \"Error parsing certificate.\", $r12)\", \"if r17 == null goto $z1 = virtualinvoke $r6.<java.util.LinkedList: boolean isEmpty()>()\", \"r19 = interfaceinvoke r17.<java.util.Collection: java.util.Iterator iterator()>()\", \"$z2 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()\"],\"getSubjectAlts.22\":[\"$r8 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>()\"],\"getSubjectAlts.31\":[\"goto [?= $z2 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()]\"],\"getSubjectAlts.35\":[\"r20 = newarray (java.lang.String)[$i1]\", \"virtualinvoke $r6.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>(r20)\", \"return r20\"],\"validCountryWildcard\":null,\"normaliseIPv6Address\":null},\"rhs\" : {\"log\":\"<org.apache.http.conn.ssl.AbstractVerifier: org.apache.commons.logging.Log log>\",\"<init>.2\":[\"$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()\", \"$r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1)\", \"r0.<org.apache.http.conn.ssl.AbstractVerifier: org.apache.commons.logging.Log log> = $r2\"],\"verify.5\":[\"$r10 = new java.util.LinkedList\", \"specialinvoke $r10.<java.util.LinkedList: void <init>()>()\"],\"verify.8\":[\"$i8 = lengthof r2\", \"if $i8 <= 0 goto (branch)\", \"$r36 = r2[0]\", \"if $r36 == null goto (branch)\", \"$r37 = r2[0]\", \"virtualinvoke $r10.<java.util.LinkedList: boolean add(java.lang.Object)>($r37)\", \"if r3 == null goto $z2 = virtualinvoke $r10.<java.util.LinkedList: boolean isEmpty()>()\", \"i9 = lengthof r3\", \"i10 = 0\", \"if i10 >= i9 goto $z2 = virtualinvoke $r10.<java.util.LinkedList: boolean isEmpty()>()\", \"r39 = r3[i10]\", \"if r39 == null goto i10 = i10 + 1\", \"virtualinvoke $r10.<java.util.LinkedList: boolean add(java.lang.Object)>(r39)\", \"i10 = i10 + 1\"],\"verify.23\":[\"$z2 = virtualinvoke $r10.<java.util.LinkedList: boolean isEmpty()>()\", \"if $z2 == 0 goto $r11 = new java.lang.StringBuilder\", \"$r31 = new java.lang.StringBuilder\", \"specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()\", \"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Certificate for <\")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"> doesn\\'t contain CN or DNS subjectAlt\")\", \"r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r35 = new javax.net.ssl.SSLException\", \"specialinvoke $r35.<javax.net.ssl.SSLException: void <init>(java.lang.String)>(r40)\", \"throw $r35\", \"$r11 = new java.lang.StringBuilder\", \"specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()\", \"$r12 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()\", \"$r13 = <java.util.Locale: java.util.Locale US>\", \"$r14 = virtualinvoke $r12.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r13)\", \"r42 = specialinvoke r0.<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String normaliseIPv6Address(java.lang.String)>($r14)\", \"z12 = 0\", \"r43 = virtualinvoke $r10.<java.util.LinkedList: java.util.Iterator iterator()>()\", \"$z3 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()\"],\"verify.43\":[\"$r22 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>()\", \"r44 = (java.lang.String) $r22\", \"$r23 = <java.util.Locale: java.util.Locale US>\", \"r45 = virtualinvoke r44.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r23)\", \"virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" <\")\", \"virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45)\", \"virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62)\", \"$z4 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()\", \"if $z4 == 0 goto r5 = virtualinvoke r45.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\\\.\")\", \"virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" OR\")\", \"r5 = virtualinvoke r45.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\\\.\")\", \"$i0 = lengthof r5\", \"if $i0 < 3 goto $z13 = 0\", \"$r29 = r5[0]\", \"$z7 = virtualinvoke $r29.<java.lang.String: boolean endsWith(java.lang.String)>(\"*\")\", \"if $z7 == 0 goto $z13 = 0\", \"$z8 = virtualinvoke r0.<org.apache.http.conn.ssl.AbstractVerifier: boolean validCountryWildcard(java.lang.String)>(r45)\", \"if $z8 == 0 goto $z13 = 0\", \"$z9 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: boolean isIPAddress(java.lang.String)>(r1)\", \"if $z9 != 0 goto $z13 = 0\", \"$z13 = 1\"],\"verify.63\":[\"$z13 = 0\", \"if $z13 == 0 goto $r27 = specialinvoke r0.<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String normaliseIPv6Address(java.lang.String)>(r45)\", \"r6 = r5[0]\", \"$i1 = virtualinvoke r6.<java.lang.String: int length()>()\", \"if $i1 <= 1 goto $r28 = virtualinvoke r45.<java.lang.String: java.lang.String substring(int)>(1)\", \"$i4 = virtualinvoke r6.<java.lang.String: int length()>()\", \"$i5 = $i4 - 1\", \"r7 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i5)\", \"$i6 = virtualinvoke r6.<java.lang.String: int length()>()\", \"r8 = virtualinvoke r45.<java.lang.String: java.lang.String substring(int)>($i6)\", \"$i7 = virtualinvoke r7.<java.lang.String: int length()>()\", \"r9 = virtualinvoke r42.<java.lang.String: java.lang.String substring(int)>($i7)\", \"$z5 = virtualinvoke r42.<java.lang.String: boolean startsWith(java.lang.String)>(r7)\", \"if $z5 == 0 goto $z14 = 0\", \"$z6 = virtualinvoke r9.<java.lang.String: boolean endsWith(java.lang.String)>(r8)\", \"if $z6 == 0 goto $z14 = 0\", \"$z14 = 1\", \"goto [?= z12 = $z14]\", \"$z14 = 0\", \"z12 = $z14\", \"goto [?= (branch)]\", \"$r28 = virtualinvoke r45.<java.lang.String: java.lang.String substring(int)>(1)\", \"z12 = virtualinvoke r42.<java.lang.String: boolean endsWith(java.lang.String)>($r28)\", \"if z12 == 0 goto (branch)\"],\"verify.69\":[\"$i2 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>(r42)\", \"$i3 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>(r45)\", \"if $i2 != $i3 goto $z15 = 0\", \"$z15 = 1\", \"goto [?= z12 = $z15]\", \"$z15 = 0\", \"z12 = $z15\"],\"verify.77\":[\"$r27 = specialinvoke r0.<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String normaliseIPv6Address(java.lang.String)>(r45)\", \"z12 = virtualinvoke r42.<java.lang.String: boolean equals(java.lang.Object)>($r27)\", \"if z12 == 0 goto (branch)\"],\"verify.80\":[\"goto [?= $z3 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()]\", \"if z12 != 0 goto return\", \"$r15 = new javax.net.ssl.SSLException\", \"$r16 = new java.lang.StringBuilder\", \"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"hostname in certificate didn\\'t match: <\")\", \"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"> !=\")\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r15.<javax.net.ssl.SSLException: void <init>(java.lang.String)>($r21)\", \"throw $r15\"],\"acceptableCountryWildcard.1\":[\"r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\\\.\")\", \"$i0 = lengthof r1\", \"if $i0 != 3 goto return 1\", \"$r2 = r1[2]\", \"$i1 = virtualinvoke $r2.<java.lang.String: int length()>()\", \"if $i1 == 2 goto $r4 = <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] BAD_COUNTRY_2LDS>\", \"return 1\", \"$r4 = <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] BAD_COUNTRY_2LDS>\", \"$r3 = r1[1]\", \"$i2 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($r4, $r3)\", \"if $i2 >= 0 goto $z0 = 0\"],\"acceptableCountryWildcard.16\":null,\"getCNs.6\":[\"specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, \",+\")\"],\"getCNs.9\":[\"$r8 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>()\", \"r11 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>()\", \"$i1 = virtualinvoke r11.<java.lang.String: int length()>()\", \"if $i1 <= 3 goto (branch)\", \"$r9 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int,int)>(0, 3)\", \"$z2 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"CN=\")\", \"if $z2 == 0 goto (branch)\", \"$r10 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(3)\", \"virtualinvoke $r4.<java.util.LinkedList: boolean add(java.lang.Object)>($r10)\"],\"getCNs.18\":[\"$i0 = virtualinvoke $r4.<java.util.LinkedList: int size()>()\", \"r12 = newarray (java.lang.String)[$i0]\", \"virtualinvoke $r4.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>(r12)\", \"return r12\"],\"getSubjectAlts.9\":[\"r13 = null\", \"r13 = virtualinvoke r0.<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>()\"],\"getSubjectAlts.13\":[\"if r13 == null goto $z1 = virtualinvoke $r6.<java.util.LinkedList: boolean isEmpty()>()\", \"r15 = interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>()\", \"$z2 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()\"],\"getSubjectAlts.22\":[\"$r8 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()\"],\"getSubjectAlts.31\":[\"goto [?= $z2 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]\"],\"getSubjectAlts.35\":[\"r16 = newarray (java.lang.String)[$i1]\", \"virtualinvoke $r6.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>(r16)\", \"return r16\"],\"validCountryWildcard\":\"<org.apache.http.conn.ssl.AbstractVerifier: boolean validCountryWildcard(java.lang.String)>\",\"normaliseIPv6Address\":\"<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String normaliseIPv6Address(java.lang.String)>\"}}",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1614064/org/apache/http/conn/ssl/AbstractVerifier.class",
            "qname": "org.apache.http.conn.ssl.AbstractVerifier",
            "contained": true,
            "affectedFile": "/org/apache/http/conn/ssl/AbstractVerifier.class"
        },
        {
            "commit": "1614064",
            "diff": "{\"lhs\" : {\"log\":null,\"<init>.2\":null,\"verify.5\":[\"$r5 = new java.util.LinkedList\", \"specialinvoke $r5.<java.util.LinkedList: void <init>()>()\"],\"verify.8\":[\"$i3 = lengthof r2\", \"if $i3 <= 0 goto (branch)\", \"$r28 = r2[0]\", \"if $r28 == null goto (branch)\", \"$r29 = r2[0]\", \"virtualinvoke $r5.<java.util.LinkedList: boolean add(java.lang.Object)>($r29)\", \"if r3 == null goto $z2 = virtualinvoke $r5.<java.util.LinkedList: boolean isEmpty()>()\", \"i4 = lengthof r3\", \"i5 = 0\", \"if i5 >= i4 goto $z2 = virtualinvoke $r5.<java.util.LinkedList: boolean isEmpty()>()\", \"r31 = r3[i5]\", \"if r31 == null goto i5 = i5 + 1\", \"virtualinvoke $r5.<java.util.LinkedList: boolean add(java.lang.Object)>(r31)\", \"i5 = i5 + 1\"],\"verify.23\":[\"$z2 = virtualinvoke $r5.<java.util.LinkedList: boolean isEmpty()>()\", \"if $z2 == 0 goto $r6 = new java.lang.StringBuilder\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Certificate for <\")\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"> doesn\\'t contain CN or DNS subjectAlt\")\", \"r32 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r27 = new javax.net.ssl.SSLException\", \"specialinvoke $r27.<javax.net.ssl.SSLException: void <init>(java.lang.String)>(r32)\", \"throw $r27\", \"$r6 = new java.lang.StringBuilder\", \"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()\", \"$r7 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()\", \"$r8 = <java.util.Locale: java.util.Locale ENGLISH>\", \"r34 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r8)\", \"z10 = 0\", \"r35 = virtualinvoke $r5.<java.util.LinkedList: java.util.Iterator iterator()>()\", \"$z3 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()\"],\"verify.43\":[\"$r16 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>()\", \"r36 = (java.lang.String) $r16\", \"$r17 = <java.util.Locale: java.util.Locale ENGLISH>\", \"r37 = virtualinvoke r36.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r17)\", \"virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" <\")\", \"virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37)\", \"virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62)\", \"$z4 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()\", \"if $z4 == 0 goto $z5 = virtualinvoke r37.<java.lang.String: boolean startsWith(java.lang.String)>(\"*.\")\", \"virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" OR\")\", \"$z5 = virtualinvoke r37.<java.lang.String: boolean startsWith(java.lang.String)>(\"*.\")\", \"if $z5 == 0 goto $z11 = 0\", \"$i2 = virtualinvoke r37.<java.lang.String: int lastIndexOf(int)>(46)\", \"if $i2 < 0 goto $z11 = 0\", \"$z6 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)>(r37)\", \"if $z6 == 0 goto $z11 = 0\", \"$z7 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: boolean isIPAddress(java.lang.String)>(r1)\", \"if $z7 != 0 goto $z11 = 0\", \"$z11 = 1\"],\"verify.63\":[\"$z11 = 0\", \"if $z11 == 0 goto z10 = virtualinvoke r34.<java.lang.String: boolean equals(java.lang.Object)>(r37)\", \"$r21 = virtualinvoke r37.<java.lang.String: java.lang.String substring(int)>(1)\", \"z10 = virtualinvoke r34.<java.lang.String: boolean endsWith(java.lang.String)>($r21)\", \"if z10 == 0 goto (branch)\"],\"verify.69\":[\"$i0 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>(r34)\", \"$i1 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>(r37)\", \"if $i0 != $i1 goto $z12 = 0\", \"$z12 = 1\", \"goto [?= z10 = $z12]\", \"$z12 = 0\", \"z10 = $z12\"],\"verify.77\":[\"z10 = virtualinvoke r34.<java.lang.String: boolean equals(java.lang.Object)>(r37)\", \"if z10 == 0 goto (branch)\"],\"verify.80\":[\"goto [?= $z3 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()]\", \"if z10 != 0 goto return\", \"$r9 = new javax.net.ssl.SSLException\", \"$r10 = new java.lang.StringBuilder\", \"specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()\", \"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"hostname in certificate didn\\'t match: <\")\", \"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"> !=\")\", \"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6)\", \"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r9.<javax.net.ssl.SSLException: void <init>(java.lang.String)>($r15)\", \"throw $r9\"],\"acceptableCountryWildcard.1\":[\"i0 = virtualinvoke r0.<java.lang.String: int length()>()\", \"if i0 < 7 goto return 1\", \"if i0 > 9 goto return 1\", \"$i2 = i0 - 3\", \"$c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2)\", \"if $c3 != 46 goto return 1\", \"$i4 = i0 - 3\", \"r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(2, $i4)\", \"$r2 = <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] BAD_COUNTRY_2LDS>\", \"i1 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($r2, r1)\", \"if i1 >= 0 goto $z0 = 0\"],\"acceptableCountryWildcard.16\":[\"return 1\"],\"getCNs.6\":[\"specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, \",\")\"],\"getCNs.9\":[\"r9 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>()\", \"i0 = virtualinvoke r9.<java.lang.String: int indexOf(java.lang.String)>(\"CN=\")\", \"if i0 < 0 goto (branch)\", \"$i2 = i0 + 3\", \"$r8 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i2)\", \"virtualinvoke $r4.<java.util.LinkedList: boolean add(java.lang.Object)>($r8)\"],\"getCNs.18\":[\"$i1 = virtualinvoke $r4.<java.util.LinkedList: int size()>()\", \"r10 = newarray (java.lang.String)[$i1]\", \"virtualinvoke $r4.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>(r10)\", \"return r10\"],\"getSubjectAlts.9\":[\"r17 = null\", \"r17 = virtualinvoke r0.<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>()\"],\"getSubjectAlts.13\":[\"$r13 = class \"Lorg/apache/http/conn/ssl/AbstractVerifier;\"\", \"$r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>()\", \"$r15 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r14)\", \"$r16 = <java.util.logging.Level: java.util.logging.Level FINE>\", \"virtualinvoke $r15.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r16, \"Error parsing certificate.\", $r12)\", \"if r17 == null goto $z1 = virtualinvoke $r6.<java.util.LinkedList: boolean isEmpty()>()\", \"r19 = interfaceinvoke r17.<java.util.Collection: java.util.Iterator iterator()>()\", \"$z2 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()\"],\"getSubjectAlts.22\":[\"$r8 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>()\"],\"getSubjectAlts.31\":[\"goto [?= $z2 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()]\"],\"getSubjectAlts.35\":[\"r20 = newarray (java.lang.String)[$i1]\", \"virtualinvoke $r6.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>(r20)\", \"return r20\"],\"validCountryWildcard\":null,\"normaliseIPv6Address\":null},\"rhs\" : {\"log\":\"<org.apache.http.conn.ssl.AbstractVerifier: org.apache.commons.logging.Log log>\",\"<init>.2\":[\"$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()\", \"$r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1)\", \"r0.<org.apache.http.conn.ssl.AbstractVerifier: org.apache.commons.logging.Log log> = $r2\"],\"verify.5\":[\"$r10 = new java.util.LinkedList\", \"specialinvoke $r10.<java.util.LinkedList: void <init>()>()\"],\"verify.8\":[\"$i8 = lengthof r2\", \"if $i8 <= 0 goto (branch)\", \"$r36 = r2[0]\", \"if $r36 == null goto (branch)\", \"$r37 = r2[0]\", \"virtualinvoke $r10.<java.util.LinkedList: boolean add(java.lang.Object)>($r37)\", \"if r3 == null goto $z2 = virtualinvoke $r10.<java.util.LinkedList: boolean isEmpty()>()\", \"i9 = lengthof r3\", \"i10 = 0\", \"if i10 >= i9 goto $z2 = virtualinvoke $r10.<java.util.LinkedList: boolean isEmpty()>()\", \"r39 = r3[i10]\", \"if r39 == null goto i10 = i10 + 1\", \"virtualinvoke $r10.<java.util.LinkedList: boolean add(java.lang.Object)>(r39)\", \"i10 = i10 + 1\"],\"verify.23\":[\"$z2 = virtualinvoke $r10.<java.util.LinkedList: boolean isEmpty()>()\", \"if $z2 == 0 goto $r11 = new java.lang.StringBuilder\", \"$r31 = new java.lang.StringBuilder\", \"specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()\", \"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Certificate for <\")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"> doesn\\'t contain CN or DNS subjectAlt\")\", \"r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r35 = new javax.net.ssl.SSLException\", \"specialinvoke $r35.<javax.net.ssl.SSLException: void <init>(java.lang.String)>(r40)\", \"throw $r35\", \"$r11 = new java.lang.StringBuilder\", \"specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()\", \"$r12 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()\", \"$r13 = <java.util.Locale: java.util.Locale US>\", \"$r14 = virtualinvoke $r12.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r13)\", \"r42 = specialinvoke r0.<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String normaliseIPv6Address(java.lang.String)>($r14)\", \"z12 = 0\", \"r43 = virtualinvoke $r10.<java.util.LinkedList: java.util.Iterator iterator()>()\", \"$z3 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()\"],\"verify.43\":[\"$r22 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>()\", \"r44 = (java.lang.String) $r22\", \"$r23 = <java.util.Locale: java.util.Locale US>\", \"r45 = virtualinvoke r44.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r23)\", \"virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" <\")\", \"virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45)\", \"virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62)\", \"$z4 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()\", \"if $z4 == 0 goto r5 = virtualinvoke r45.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\\\.\")\", \"virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" OR\")\", \"r5 = virtualinvoke r45.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\\\.\")\", \"$i0 = lengthof r5\", \"if $i0 < 3 goto $z13 = 0\", \"$r29 = r5[0]\", \"$z7 = virtualinvoke $r29.<java.lang.String: boolean endsWith(java.lang.String)>(\"*\")\", \"if $z7 == 0 goto $z13 = 0\", \"$z8 = virtualinvoke r0.<org.apache.http.conn.ssl.AbstractVerifier: boolean validCountryWildcard(java.lang.String)>(r45)\", \"if $z8 == 0 goto $z13 = 0\", \"$z9 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: boolean isIPAddress(java.lang.String)>(r1)\", \"if $z9 != 0 goto $z13 = 0\", \"$z13 = 1\"],\"verify.63\":[\"$z13 = 0\", \"if $z13 == 0 goto $r27 = specialinvoke r0.<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String normaliseIPv6Address(java.lang.String)>(r45)\", \"r6 = r5[0]\", \"$i1 = virtualinvoke r6.<java.lang.String: int length()>()\", \"if $i1 <= 1 goto $r28 = virtualinvoke r45.<java.lang.String: java.lang.String substring(int)>(1)\", \"$i4 = virtualinvoke r6.<java.lang.String: int length()>()\", \"$i5 = $i4 - 1\", \"r7 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i5)\", \"$i6 = virtualinvoke r6.<java.lang.String: int length()>()\", \"r8 = virtualinvoke r45.<java.lang.String: java.lang.String substring(int)>($i6)\", \"$i7 = virtualinvoke r7.<java.lang.String: int length()>()\", \"r9 = virtualinvoke r42.<java.lang.String: java.lang.String substring(int)>($i7)\", \"$z5 = virtualinvoke r42.<java.lang.String: boolean startsWith(java.lang.String)>(r7)\", \"if $z5 == 0 goto $z14 = 0\", \"$z6 = virtualinvoke r9.<java.lang.String: boolean endsWith(java.lang.String)>(r8)\", \"if $z6 == 0 goto $z14 = 0\", \"$z14 = 1\", \"goto [?= z12 = $z14]\", \"$z14 = 0\", \"z12 = $z14\", \"goto [?= (branch)]\", \"$r28 = virtualinvoke r45.<java.lang.String: java.lang.String substring(int)>(1)\", \"z12 = virtualinvoke r42.<java.lang.String: boolean endsWith(java.lang.String)>($r28)\", \"if z12 == 0 goto (branch)\"],\"verify.69\":[\"$i2 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>(r42)\", \"$i3 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>(r45)\", \"if $i2 != $i3 goto $z15 = 0\", \"$z15 = 1\", \"goto [?= z12 = $z15]\", \"$z15 = 0\", \"z12 = $z15\"],\"verify.77\":[\"$r27 = specialinvoke r0.<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String normaliseIPv6Address(java.lang.String)>(r45)\", \"z12 = virtualinvoke r42.<java.lang.String: boolean equals(java.lang.Object)>($r27)\", \"if z12 == 0 goto (branch)\"],\"verify.80\":[\"goto [?= $z3 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()]\", \"if z12 != 0 goto return\", \"$r15 = new javax.net.ssl.SSLException\", \"$r16 = new java.lang.StringBuilder\", \"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"hostname in certificate didn\\'t match: <\")\", \"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"> !=\")\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r15.<javax.net.ssl.SSLException: void <init>(java.lang.String)>($r21)\", \"throw $r15\"],\"acceptableCountryWildcard.1\":[\"r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\\\.\")\", \"$i0 = lengthof r1\", \"if $i0 != 3 goto return 1\", \"$r2 = r1[2]\", \"$i1 = virtualinvoke $r2.<java.lang.String: int length()>()\", \"if $i1 == 2 goto $r4 = <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] BAD_COUNTRY_2LDS>\", \"return 1\", \"$r4 = <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] BAD_COUNTRY_2LDS>\", \"$r3 = r1[1]\", \"$i2 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($r4, $r3)\", \"if $i2 >= 0 goto $z0 = 0\"],\"acceptableCountryWildcard.16\":null,\"getCNs.6\":[\"specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, \",+\")\"],\"getCNs.9\":[\"$r8 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>()\", \"r11 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>()\", \"$i1 = virtualinvoke r11.<java.lang.String: int length()>()\", \"if $i1 <= 3 goto (branch)\", \"$r9 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int,int)>(0, 3)\", \"$z2 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"CN=\")\", \"if $z2 == 0 goto (branch)\", \"$r10 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(3)\", \"virtualinvoke $r4.<java.util.LinkedList: boolean add(java.lang.Object)>($r10)\"],\"getCNs.18\":[\"$i0 = virtualinvoke $r4.<java.util.LinkedList: int size()>()\", \"r12 = newarray (java.lang.String)[$i0]\", \"virtualinvoke $r4.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>(r12)\", \"return r12\"],\"getSubjectAlts.9\":[\"r13 = null\", \"r13 = virtualinvoke r0.<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>()\"],\"getSubjectAlts.13\":[\"if r13 == null goto $z1 = virtualinvoke $r6.<java.util.LinkedList: boolean isEmpty()>()\", \"r15 = interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>()\", \"$z2 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()\"],\"getSubjectAlts.22\":[\"$r8 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()\"],\"getSubjectAlts.31\":[\"goto [?= $z2 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]\"],\"getSubjectAlts.35\":[\"r16 = newarray (java.lang.String)[$i1]\", \"virtualinvoke $r6.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>(r16)\", \"return r16\"],\"validCountryWildcard\":\"<org.apache.http.conn.ssl.AbstractVerifier: boolean validCountryWildcard(java.lang.String)>\",\"normaliseIPv6Address\":\"<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String normaliseIPv6Address(java.lang.String)>\"}}",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1614064/org/apache/http/conn/ssl/AbstractVerifier.class",
            "qname": "org.apache.http.conn.ssl.AbstractVerifier.extractCNs(String)",
            "contained": true,
            "affectedFile": "/org/apache/http/conn/ssl/AbstractVerifier.class"
        },
        {
            "commit": "1614064",
            "diff": "{\"lhs\" : {\"6\":[\"specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, \",\")\"],\"9\":[\"r9 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>()\", \"i0 = virtualinvoke r9.<java.lang.String: int indexOf(java.lang.String)>(\"CN=\")\", \"if i0 < 0 goto (branch)\", \"$i2 = i0 + 3\", \"$r8 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i2)\", \"virtualinvoke $r4.<java.util.LinkedList: boolean add(java.lang.Object)>($r8)\"],\"18\":[\"$i1 = virtualinvoke $r4.<java.util.LinkedList: int size()>()\", \"r10 = newarray (java.lang.String)[$i1]\", \"virtualinvoke $r4.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>(r10)\", \"return r10\"]},\"rhs\" : {\"6\":[\"specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, \",+\")\"],\"9\":[\"$r8 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>()\", \"r11 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>()\", \"$i1 = virtualinvoke r11.<java.lang.String: int length()>()\", \"if $i1 <= 3 goto (branch)\", \"$r9 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int,int)>(0, 3)\", \"$z2 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"CN=\")\", \"if $z2 == 0 goto (branch)\", \"$r10 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(3)\", \"virtualinvoke $r4.<java.util.LinkedList: boolean add(java.lang.Object)>($r10)\"],\"18\":[\"$i0 = virtualinvoke $r4.<java.util.LinkedList: int size()>()\", \"r12 = newarray (java.lang.String)[$i0]\", \"virtualinvoke $r4.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>(r12)\", \"return r12\"]}}",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1614064/org/apache/http/conn/ssl/AbstractVerifier.class",
            "qname": "org.apache.http.conn.ssl.AbstractVerifier.getCNs(X509Certificate)",
            "contained": true,
            "affectedFile": "/org/apache/http/conn/ssl/AbstractVerifier.class"
        }
    ],
    "vulnerable": false,
    "timestamp": "2018-11-30"
}