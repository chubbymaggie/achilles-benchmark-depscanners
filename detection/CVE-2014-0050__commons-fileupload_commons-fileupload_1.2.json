{
    "comment": "",
    "gav": {
        "groupId": "commons-fileupload",
        "artifactId": "commons-fileupload",
        "version": "1.2"
    },
    "timestamp": "2018-11-30",
    "vulnerable": true,
    "cve": "CVE-2014-0050",
    "details": [
        {
            "qname": "org.apache.commons.fileupload.FileUploadBase",
            "affectedFile": "/org/apache/commons/fileupload/FileUploadBase.class",
            "diff": "{\"lhs\" : {\"CONTENT_LENGTH\":\"<org.apache.commons.fileupload.FileUploadBase: java.lang.String CONTENT_LENGTH>\",\"isMultipartContent.2\":[\"if r1 != null goto $r2 = <java.util.Locale: java.util.Locale ENGLISH>\"],\"isMultipartContent.4\":[\"$r2 = <java.util.Locale: java.util.Locale ENGLISH>\", \"$r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2)\", \"$z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>(\"multipart/\")\"],\"getItemIterator.2\":[\"$r3 = new org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl\", \"specialinvoke $r3.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: void <init>(org.apache.commons.fileupload.FileUploadBase,org.apache.commons.fileupload.RequestContext)>(r0, r1)\", \"return $r3\", \"$r4 := @caughtexception\", \"$r5 = virtualinvoke $r4.<org.apache.commons.fileupload.FileUploadBase$FileUploadIOException: java.lang.Throwable getCause()>()\", \"$r6 = (org.apache.commons.fileupload.FileUploadException) $r5\", \"throw $r6\"],\"parseRequest.2\":[\"$r8 = new java.util.ArrayList\", \"specialinvoke $r8.<java.util.ArrayList: void <init>()>()\", \"z5 = 0\", \"r34 = virtualinvoke r0.<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.FileItemIterator getItemIterator(org.apache.commons.fileupload.RequestContext)>(r1)\"],\"parseRequest.7\":[\"if r3 != null goto $z0 = interfaceinvoke r34.<org.apache.commons.fileupload.FileItemIterator: boolean hasNext()>()\", \"$r15 = new java.lang.NullPointerException\", \"specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>(\"No FileItemFactory has been set.\")\", \"throw $r15\", \"$z0 = interfaceinvoke r34.<org.apache.commons.fileupload.FileItemIterator: boolean hasNext()>()\", \"if $z0 == 0 goto z5 = 1\", \"r35 = interfaceinvoke r34.<org.apache.commons.fileupload.FileItemIterator: org.apache.commons.fileupload.FileItemStream next()>()\", \"$r10 = (org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl) r35\", \"r36 = staticinvoke <org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String access$000(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl)>($r10)\", \"$r11 = interfaceinvoke r35.<org.apache.commons.fileupload.FileItemStream: java.lang.String getFieldName()>()\", \"$r12 = interfaceinvoke r35.<org.apache.commons.fileupload.FileItemStream: java.lang.String getContentType()>()\", \"$z2 = interfaceinvoke r35.<org.apache.commons.fileupload.FileItemStream: boolean isFormField()>()\", \"r37 = interfaceinvoke r3.<org.apache.commons.fileupload.FileItemFactory: org.apache.commons.fileupload.FileItem createItem(java.lang.String,java.lang.String,boolean,java.lang.String)>($r11, $r12, $z2, r36)\", \"interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r37)\", \"$r13 = interfaceinvoke r35.<org.apache.commons.fileupload.FileItemStream: java.io.InputStream openStream()>()\", \"$r14 = interfaceinvoke r37.<org.apache.commons.fileupload.FileItem: java.io.OutputStream getOutputStream()>()\", \"staticinvoke <org.apache.commons.fileupload.util.Streams: long copy(java.io.InputStream,java.io.OutputStream,boolean)>($r13, $r14, 1)\", \"goto [?= r40 = interfaceinvoke r35.<org.apache.commons.fileupload.FileItemStream: org.apache.commons.fileupload.FileItemHeaders getHeaders()>()]\", \"$r22 := @caughtexception\", \"$r23 = virtualinvoke $r22.<org.apache.commons.fileupload.FileUploadBase$FileUploadIOException: java.lang.Throwable getCause()>()\", \"$r24 = (org.apache.commons.fileupload.FileUploadException) $r23\", \"throw $r24\", \"$r17 := @caughtexception\", \"$r18 = new org.apache.commons.fileupload.FileUploadBase$IOFileUploadException\", \"$r19 = newarray (java.lang.Object)[2]\", \"$r19[0] = \"multipart/form-data\"\", \"$r20 = virtualinvoke $r17.<java.io.IOException: java.lang.String getMessage()>()\", \"$r19[1] = $r20\", \"$r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"Processing of %s request failed. %s\", $r19)\", \"specialinvoke $r18.<org.apache.commons.fileupload.FileUploadBase$IOFileUploadException: void <init>(java.lang.String,java.io.IOException)>($r21, $r17)\", \"throw $r18\", \"r40 = interfaceinvoke r35.<org.apache.commons.fileupload.FileItemStream: org.apache.commons.fileupload.FileItemHeaders getHeaders()>()\", \"interfaceinvoke r37.<org.apache.commons.fileupload.FileItem: void setHeaders(org.apache.commons.fileupload.FileItemHeaders)>(r40)\", \"goto [?= $z0 = interfaceinvoke r34.<org.apache.commons.fileupload.FileItemIterator: boolean hasNext()>()]\", \"z5 = 1\", \"goto [?= return $r8]\", \"return $r8\", \"$r31 := @caughtexception\", \"$r32 = virtualinvoke $r31.<org.apache.commons.fileupload.FileUploadBase$FileUploadIOException: java.lang.Throwable getCause()>()\", \"$r33 = (org.apache.commons.fileupload.FileUploadException) $r32\", \"throw $r33\", \"$r25 := @caughtexception\", \"$r26 = new org.apache.commons.fileupload.FileUploadException\", \"$r27 = virtualinvoke $r25.<java.io.IOException: java.lang.String getMessage()>()\", \"specialinvoke $r26.<org.apache.commons.fileupload.FileUploadException: void <init>(java.lang.String,java.lang.Throwable)>($r27, $r25)\", \"throw $r26\", \"$r30 := @caughtexception\", \"if z5 != 0 goto throw $r30\", \"r5 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()\", \"$z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\", \"if $z4 == 0 goto throw $r30\", \"$r29 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (org.apache.commons.fileupload.FileItem) $r29\", \"interfaceinvoke r6.<org.apache.commons.fileupload.FileItem: void delete()>()\", \"goto [?= (branch)]\", \"$r28 := @caughtexception\", \"goto [?= $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\", \"throw $r30\"],\"parseParameterMap\":\"<org.apache.commons.fileupload.FileUploadBase: java.util.Map parseParameterMap(org.apache.commons.fileupload.RequestContext)>\",\"getBoundary.5\":[\"$r7 = newarray (char)[2]\", \"$r7[0] = 59\", \"$r7[1] = 44\", \"r3 = virtualinvoke $r6.<org.apache.commons.fileupload.ParameterParser: java.util.Map parse(java.lang.String,char[])>(r1, $r7)\", \"$r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"boundary\")\", \"r4 = (java.lang.String) $r8\", \"if r4 != null goto r10 = virtualinvoke r4.<java.lang.String: byte[] getBytes(java.lang.String)>(\"ISO-8859-1\")\"],\"getBoundary.13\":[\"r10 = virtualinvoke r4.<java.lang.String: byte[] getBytes(java.lang.String)>(\"ISO-8859-1\")\", \"goto [?= return r10]\", \"$r9 := @caughtexception\", \"r10 = virtualinvoke r4.<java.lang.String: byte[] getBytes()>()\", \"return r10\"],\"getFileName.2\":[\"$r2 = virtualinvoke r0.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getHeader(java.util.Map,java.lang.String)>(r1, \"Content-disposition\")\", \"$r3 = specialinvoke r0.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFileName(java.lang.String)>($r2)\", \"return $r3\"],\"getFileName\":\"<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFileName(org.apache.commons.fileupload.FileItemHeaders)>\",\"getFileName\":\"<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFileName(java.lang.String)>\",\"getFieldName\":\"<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFieldName(org.apache.commons.fileupload.FileItemHeaders)>\",\"getFieldName\":\"<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFieldName(java.lang.String)>\",\"getFieldName.2\":[\"$r2 = virtualinvoke r0.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getHeader(java.util.Map,java.lang.String)>(r1, \"Content-disposition\")\", \"$r3 = specialinvoke r0.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFieldName(java.lang.String)>($r2)\", \"return $r3\"],\"getParsedHeaders\":\"<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.FileItemHeaders getParsedHeaders(java.lang.String)>\",\"newFileItemHeaders\":\"<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.util.FileItemHeadersImpl newFileItemHeaders()>\",\"parseHeaders.2\":[\"r2 = virtualinvoke r0.<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.FileItemHeaders getParsedHeaders(java.lang.String)>(r1)\", \"$r8 = new java.util.HashMap\", \"specialinvoke $r8.<java.util.HashMap: void <init>()>()\", \"r4 = interfaceinvoke r2.<org.apache.commons.fileupload.FileItemHeaders: java.util.Iterator getHeaderNames()>()\", \"$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto return $r8\", \"$r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()\", \"r5 = (java.lang.String) $r9\", \"r6 = interfaceinvoke r2.<org.apache.commons.fileupload.FileItemHeaders: java.util.Iterator getHeaders(java.lang.String)>(r5)\", \"$r10 = new java.lang.StringBuilder\", \"$r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()\", \"$r12 = (java.lang.String) $r11\", \"specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r12)\", \"$z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\", \"if $z1 == 0 goto $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",\")\", \"$r16 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()\", \"$r17 = (java.lang.String) $r16\", \"virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)\", \"goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\", \"$r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r13)\", \"goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]\", \"return $r8\"],\"parseHeaderLine\":\"<org.apache.commons.fileupload.FileUploadBase: void parseHeaderLine(org.apache.commons.fileupload.util.FileItemHeadersImpl,java.lang.String)>\",\"getHeader.3\":[\"$r3 = <java.util.Locale: java.util.Locale ENGLISH>\", \"$r4 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3)\", \"$r5 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4)\", \"$r6 = (java.lang.String) $r5\", \"return $r6\"],\"parseHeaderLine\":null},\"rhs\" : {\"CONTENT_LENGTH\":null,\"isMultipartContent.2\":[\"if r1 != null goto $r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>()\"],\"isMultipartContent.4\":[\"$r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>()\", \"$z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(\"multipart/\")\"],\"getItemIterator.2\":[\"$r2 = new org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl\", \"specialinvoke $r2.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: void <init>(org.apache.commons.fileupload.FileUploadBase,org.apache.commons.fileupload.RequestContext)>(r0, r1)\", \"return $r2\"],\"parseRequest.2\":[\"r29 = virtualinvoke r0.<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.FileItemIterator getItemIterator(org.apache.commons.fileupload.RequestContext)>(r1)\", \"r34 = new java.util.ArrayList\", \"specialinvoke r34.<java.util.ArrayList: void <init>()>()\"],\"parseRequest.7\":[\"if r3 != null goto $z0 = interfaceinvoke r29.<org.apache.commons.fileupload.FileItemIterator: boolean hasNext()>()\", \"r35 = new java.lang.NullPointerException\", \"specialinvoke r35.<java.lang.NullPointerException: void <init>(java.lang.String)>(\"No FileItemFactory has been set.\")\", \"throw r35\", \"$z0 = interfaceinvoke r29.<org.apache.commons.fileupload.FileItemIterator: boolean hasNext()>()\", \"if $z0 == 0 goto return r34\", \"r4 = interfaceinvoke r29.<org.apache.commons.fileupload.FileItemIterator: org.apache.commons.fileupload.FileItemStream next()>()\", \"$r7 = interfaceinvoke r4.<org.apache.commons.fileupload.FileItemStream: java.lang.String getFieldName()>()\", \"$r8 = interfaceinvoke r4.<org.apache.commons.fileupload.FileItemStream: java.lang.String getContentType()>()\", \"$z1 = interfaceinvoke r4.<org.apache.commons.fileupload.FileItemStream: boolean isFormField()>()\", \"$r9 = interfaceinvoke r4.<org.apache.commons.fileupload.FileItemStream: java.lang.String getName()>()\", \"r5 = interfaceinvoke r3.<org.apache.commons.fileupload.FileItemFactory: org.apache.commons.fileupload.FileItem createItem(java.lang.String,java.lang.String,boolean,java.lang.String)>($r7, $r8, $z1, $r9)\", \"$r10 = interfaceinvoke r4.<org.apache.commons.fileupload.FileItemStream: java.io.InputStream openStream()>()\", \"$r11 = interfaceinvoke r5.<org.apache.commons.fileupload.FileItem: java.io.OutputStream getOutputStream()>()\", \"staticinvoke <org.apache.commons.fileupload.util.Streams: long copy(java.io.InputStream,java.io.OutputStream,boolean)>($r10, $r11, 1)\", \"goto [?= interfaceinvoke r34.<java.util.List: boolean add(java.lang.Object)>(r5)]\", \"$r13 := @caughtexception\", \"r39 = (org.apache.commons.fileupload.FileUploadBase$FileUploadIOException) $r13\", \"$r14 = virtualinvoke r39.<org.apache.commons.fileupload.FileUploadBase$FileUploadIOException: java.lang.Throwable getCause()>()\", \"$r15 = (org.apache.commons.fileupload.FileUploadException) $r14\", \"r40 = (java.lang.Throwable) $r15\", \"throw r40\", \"$r16 := @caughtexception\", \"r37 = new org.apache.commons.fileupload.FileUploadBase$IOFileUploadException\", \"r36 = new java.lang.StringBuffer\", \"specialinvoke r36.<java.lang.StringBuffer: void <init>()>()\", \"$r19 = virtualinvoke r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"Processing of multipart/form-data request failed. \")\", \"$r20 = virtualinvoke $r16.<java.io.IOException: java.lang.String getMessage()>()\", \"$r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20)\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>()\", \"specialinvoke r37.<org.apache.commons.fileupload.FileUploadBase$IOFileUploadException: void <init>(java.lang.String,java.io.IOException)>($r22, $r16)\", \"r41 = (java.lang.Throwable) r37\", \"throw r41\", \"interfaceinvoke r34.<java.util.List: boolean add(java.lang.Object)>(r5)\", \"goto [?= $z0 = interfaceinvoke r29.<org.apache.commons.fileupload.FileItemIterator: boolean hasNext()>()]\", \"return r34\", \"$r26 := @caughtexception\", \"r42 = (org.apache.commons.fileupload.FileUploadBase$FileUploadIOException) $r26\", \"$r27 = virtualinvoke r42.<org.apache.commons.fileupload.FileUploadBase$FileUploadIOException: java.lang.Throwable getCause()>()\", \"$r28 = (org.apache.commons.fileupload.FileUploadException) $r27\", \"r43 = (java.lang.Throwable) $r28\", \"throw r43\", \"$r23 := @caughtexception\", \"r38 = new org.apache.commons.fileupload.FileUploadException\", \"$r25 = virtualinvoke $r23.<java.io.IOException: java.lang.String getMessage()>()\", \"specialinvoke r38.<org.apache.commons.fileupload.FileUploadException: void <init>(java.lang.String,java.lang.Throwable)>($r25, $r23)\", \"r44 = (java.lang.Throwable) r38\", \"throw r44\"],\"parseParameterMap\":null,\"getBoundary.5\":[\"r3 = virtualinvoke $r6.<org.apache.commons.fileupload.ParameterParser: java.util.Map parse(java.lang.String,char)>(r1, 59)\", \"$r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"boundary\")\", \"r4 = (java.lang.String) $r7\", \"if r4 != null goto r9 = virtualinvoke r4.<java.lang.String: byte[] getBytes(java.lang.String)>(\"ISO-8859-1\")\"],\"getBoundary.13\":[\"r9 = virtualinvoke r4.<java.lang.String: byte[] getBytes(java.lang.String)>(\"ISO-8859-1\")\", \"goto [?= return r9]\", \"$r8 := @caughtexception\", \"r9 = virtualinvoke r4.<java.lang.String: byte[] getBytes()>()\", \"return r9\"],\"getFileName.2\":[\"r8 = null\", \"r2 = virtualinvoke r0.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getHeader(java.util.Map,java.lang.String)>(r1, \"Content-disposition\")\", \"if r2 == null goto return r8\", \"r3 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>()\", \"$z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>(\"form-data\")\", \"if $z0 != 0 goto $r6 = new org.apache.commons.fileupload.ParameterParser\", \"$z2 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>(\"attachment\")\", \"if $z2 == 0 goto return r8\", \"$r6 = new org.apache.commons.fileupload.ParameterParser\", \"specialinvoke $r6.<org.apache.commons.fileupload.ParameterParser: void <init>()>()\", \"virtualinvoke $r6.<org.apache.commons.fileupload.ParameterParser: void setLowerCaseNames(boolean)>(1)\", \"r5 = virtualinvoke $r6.<org.apache.commons.fileupload.ParameterParser: java.util.Map parse(java.lang.String,char)>(r2, 59)\", \"$z1 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>(\"filename\")\", \"if $z1 == 0 goto return r8\", \"$r7 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"filename\")\", \"r9 = (java.lang.String) $r7\", \"if r9 == null goto r8 = \"\"\", \"r8 = virtualinvoke r9.<java.lang.String: java.lang.String trim()>()\", \"goto [?= return r8]\", \"r8 = \"\"\", \"return r8\"],\"getFileName\":null,\"getFileName\":null,\"getFieldName\":null,\"getFieldName\":null,\"getFieldName.2\":[\"r8 = null\", \"r2 = virtualinvoke r0.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getHeader(java.util.Map,java.lang.String)>(r1, \"Content-disposition\")\", \"if r2 == null goto return r8\", \"$r5 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>()\", \"$z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>(\"form-data\")\", \"if $z0 == 0 goto return r8\", \"$r6 = new org.apache.commons.fileupload.ParameterParser\", \"specialinvoke $r6.<org.apache.commons.fileupload.ParameterParser: void <init>()>()\", \"virtualinvoke $r6.<org.apache.commons.fileupload.ParameterParser: void setLowerCaseNames(boolean)>(1)\", \"r4 = virtualinvoke $r6.<org.apache.commons.fileupload.ParameterParser: java.util.Map parse(java.lang.String,char)>(r2, 59)\", \"$r7 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"name\")\", \"r8 = (java.lang.String) $r7\", \"if r8 == null goto return r8\", \"r8 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>()\", \"return r8\"],\"getParsedHeaders\":null,\"newFileItemHeaders\":null,\"parseHeaders.2\":[\"i0 = virtualinvoke r1.<java.lang.String: int length()>()\", \"$r3 = new java.util.HashMap\", \"specialinvoke $r3.<java.util.HashMap: void <init>()>()\", \"i2 = 0\", \"i3 = specialinvoke r0.<org.apache.commons.fileupload.FileUploadBase: int parseEndOfLine(java.lang.String,int)>(r1, i2)\", \"if i2 != i3 goto r9 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i2, i3)\", \"goto [?= return $r3]\", \"r9 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i2, i3)\", \"i2 = i3 + 2\", \"if i2 >= i0 goto specialinvoke r0.<org.apache.commons.fileupload.FileUploadBase: void parseHeaderLine(java.util.Map,java.lang.String)>($r3, r9)\", \"i4 = i2\", \"if i4 >= i0 goto (branch)\", \"c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4)\", \"if c1 == 32 goto i4 = i4 + 1\", \"if c1 == 9 goto i4 = i4 + 1\", \"goto [?= (branch)]\", \"i4 = i4 + 1\", \"goto [?= (branch)]\", \"if i4 != i2 goto i5 = specialinvoke r0.<org.apache.commons.fileupload.FileUploadBase: int parseEndOfLine(java.lang.String,int)>(r1, i4)\", \"goto [?= specialinvoke r0.<org.apache.commons.fileupload.FileUploadBase: void parseHeaderLine(java.util.Map,java.lang.String)>($r3, r9)]\", \"i5 = specialinvoke r0.<org.apache.commons.fileupload.FileUploadBase: int parseEndOfLine(java.lang.String,int)>(r1, i4)\", \"$r4 = new java.lang.StringBuffer\", \"specialinvoke $r4.<java.lang.StringBuffer: void <init>()>()\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9)\", \"$r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\" \")\", \"$r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i4, i5)\", \"$r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7)\", \"r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>()\", \"i2 = i5 + 2\", \"goto [?= (branch)]\", \"specialinvoke r0.<org.apache.commons.fileupload.FileUploadBase: void parseHeaderLine(java.util.Map,java.lang.String)>($r3, r9)\", \"goto [?= i3 = specialinvoke r0.<org.apache.commons.fileupload.FileUploadBase: int parseEndOfLine(java.lang.String,int)>(r1, i2)]\", \"return $r3\"],\"parseHeaderLine\":null,\"getHeader.3\":[\"$r3 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>()\", \"$r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3)\", \"$r5 = (java.lang.String) $r4\", \"return $r5\"],\"parseHeaderLine\":\"<org.apache.commons.fileupload.FileUploadBase: void parseHeaderLine(java.util.Map,java.lang.String)>\"}}",
            "commit": "1565143",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1565143/org/apache/commons/fileupload/FileUploadBase.class",
            "contained": true
        },
        {
            "qname": "org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl",
            "affectedFile": "/org/apache/commons/fileupload/FileUploadBase.class",
            "diff": "{\"lhs\" : {\"<init>.3\":[\"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0> = r1\"],\"<init>.5\":null,\"<init>.6\":[\"$r27 = new java.lang.NullPointerException\", \"specialinvoke $r27.<java.lang.NullPointerException: void <init>(java.lang.String)>(\"ctx parameter\")\", \"throw $r27\"],\"<init>.10\":[\"if null == r3 goto $r4 = new org.apache.commons.fileupload.FileUploadBase$InvalidContentTypeException\", \"$r7 = <java.util.Locale: java.util.Locale ENGLISH>\", \"$r8 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r7)\", \"$z0 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>(\"multipart/\")\", \"if $z0 != 0 goto r28 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: java.io.InputStream getInputStream()>()\", \"$r4 = new org.apache.commons.fileupload.FileUploadBase$InvalidContentTypeException\", \"$r5 = newarray (java.lang.Object)[3]\", \"$r5[0] = \"multipart/form-data\"\", \"$r5[1] = \"multipart/form-data\"\", \"$r5[2] = r3\", \"$r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"the request doesn\\'t contain a %s or %s stream, content type header is %s\", $r5)\", \"specialinvoke $r4.<org.apache.commons.fileupload.FileUploadBase$InvalidContentTypeException: void <init>(java.lang.String)>($r6)\", \"throw $r4\", \"r28 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: java.io.InputStream getInputStream()>()\", \"i0 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: int getContentLength()>()\", \"$r9 = class \"Lorg/apache/commons/fileupload/UploadContext;\"\", \"$r10 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>()\", \"$z1 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r10)\", \"if $z1 == 0 goto $l10 = (long) i0\", \"$r26 = (org.apache.commons.fileupload.UploadContext) r2\", \"$l10 = interfaceinvoke $r26.<org.apache.commons.fileupload.UploadContext: long contentLength()>()\", \"goto [?= l1 = $l10]\", \"$l10 = (long) i0\", \"l1 = $l10\", \"$l2 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$b3 = $l2 cmp 0L\", \"if $b3 < 0 goto r29 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: java.lang.String access$500(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$b4 = $l10 cmp -1L\", \"if $b4 == 0 goto $r20 = new org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$1\", \"$l6 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$b7 = $l10 cmp $l6\", \"if $b7 <= 0 goto $r20 = new org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$1\", \"$r21 = new org.apache.commons.fileupload.FileUploadBase$SizeLimitExceededException\", \"$r22 = newarray (java.lang.Object)[2]\", \"$r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l10)\", \"$r22[0] = $r23\", \"$l8 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8)\", \"$r22[1] = $r24\", \"$r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"the request was rejected because its size (%s) exceeds the configured maximum (%s)\", $r22)\"],\"<init>.51\":[\"specialinvoke $r21.<org.apache.commons.fileupload.FileUploadBase$SizeLimitExceededException: void <init>(java.lang.String,long,long)>($r25, $l10, $l9)\", \"throw $r21\", \"$r20 = new org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$1\", \"$l5 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"specialinvoke $r20.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$1: void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl,java.io.InputStream,long,org.apache.commons.fileupload.FileUploadBase)>(r0, r28, $l5, r1)\", \"r28 = $r20\", \"r29 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: java.lang.String access$500(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"if r29 != null goto $r11 = virtualinvoke r1.<org.apache.commons.fileupload.FileUploadBase: byte[] getBoundary(java.lang.String)>(r3)\", \"r29 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: java.lang.String getCharacterEncoding()>()\", \"$r11 = virtualinvoke r1.<org.apache.commons.fileupload.FileUploadBase: byte[] getBoundary(java.lang.String)>(r3)\", \"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: byte[] boundary> = $r11\", \"$r12 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: byte[] boundary>\", \"if $r12 != null goto $r13 = new org.apache.commons.fileupload.MultipartStream$ProgressNotifier\", \"$r19 = new org.apache.commons.fileupload.FileUploadException\", \"specialinvoke $r19.<org.apache.commons.fileupload.FileUploadException: void <init>(java.lang.String)>(\"the request was rejected because no multipart boundary was found\")\", \"throw $r19\", \"$r13 = new org.apache.commons.fileupload.MultipartStream$ProgressNotifier\", \"$r14 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.ProgressListener access$600(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"specialinvoke $r13.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: void <init>(org.apache.commons.fileupload.ProgressListener,long)>($r14, l1)\", \"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream$ProgressNotifier notifier> = $r13\", \"$r15 = new org.apache.commons.fileupload.MultipartStream\", \"$r17 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: byte[] boundary>\", \"$r16 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream$ProgressNotifier notifier>\", \"specialinvoke $r15.<org.apache.commons.fileupload.MultipartStream: void <init>(java.io.InputStream,byte[],org.apache.commons.fileupload.MultipartStream$ProgressNotifier)>(r28, $r17, $r16)\", \"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream multi> = $r15\", \"$r18 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream multi>\", \"virtualinvoke $r18.<org.apache.commons.fileupload.MultipartStream: void setHeaderEncoding(java.lang.String)>(r29)\"],\"findNextItem.29\":[\"r1 = virtualinvoke $r6.<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.FileItemHeaders getParsedHeaders(java.lang.String)>($r7)\"],\"findNextItem.33\":[\"r35 = virtualinvoke $r16.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFieldName(org.apache.commons.fileupload.FileItemHeaders)>(r1)\"],\"findNextItem.35\":[\"r2 = interfaceinvoke r1.<org.apache.commons.fileupload.FileItemHeaders: java.lang.String getHeader(java.lang.String)>(\"Content-type\")\", \"if r2 == null goto $r17 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\", \"$r26 = <java.util.Locale: java.util.Locale ENGLISH>\", \"$r27 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r26)\"],\"findNextItem.40\":[\"if $z1 == 0 goto $r17 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\"],\"findNextItem.48\":[\"$r17 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\", \"r37 = virtualinvoke $r17.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFileName(org.apache.commons.fileupload.FileItemHeaders)>(r1)\", \"$r18 = new org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl\", \"$r19 = interfaceinvoke r1.<org.apache.commons.fileupload.FileItemHeaders: java.lang.String getHeader(java.lang.String)>(\"Content-type\")\"],\"findNextItem.54\":[\"goto [?= $l2 = specialinvoke r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: long getContentLength(org.apache.commons.fileupload.FileItemHeaders)>(r1)]\"],\"findNextItem.56\":[\"$l2 = specialinvoke r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: long getContentLength(org.apache.commons.fileupload.FileItemHeaders)>(r1)\", \"specialinvoke $r18.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl,java.lang.String,java.lang.String,java.lang.String,boolean,long)>(r0, r37, r35, $r19, $z4, $l2)\", \"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem> = $r18\", \"$r20 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem>\", \"virtualinvoke $r20.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void setHeaders(org.apache.commons.fileupload.FileItemHeaders)>(r1)\", \"$r21 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream$ProgressNotifier notifier>\", \"virtualinvoke $r21.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: void noteItem()>()\"],\"findNextItem.67\":[\"r38 = virtualinvoke $r9.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFileName(org.apache.commons.fileupload.FileItemHeaders)>(r1)\"],\"findNextItem.70\":[\"$r12 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: java.lang.String currentFieldName>\", \"$r13 = interfaceinvoke r1.<org.apache.commons.fileupload.FileItemHeaders: java.lang.String getHeader(java.lang.String)>(\"Content-type\")\", \"$l1 = specialinvoke r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: long getContentLength(org.apache.commons.fileupload.FileItemHeaders)>(r1)\", \"specialinvoke $r11.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl,java.lang.String,java.lang.String,java.lang.String,boolean,long)>(r0, r38, $r12, $r13, 0, $l1)\"],\"findNextItem.75\":[\"$r14 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem>\", \"virtualinvoke $r14.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void setHeaders(org.apache.commons.fileupload.FileItemHeaders)>(r1)\"],\"getContentLength\":\"<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: long getContentLength(org.apache.commons.fileupload.FileItemHeaders)>\",\"hasNext.9\":[\"$r2 := @caughtexception\", \"$r3 = virtualinvoke $r2.<org.apache.commons.fileupload.FileUploadBase$FileUploadIOException: java.lang.Throwable getCause()>()\", \"$r4 = (org.apache.commons.fileupload.FileUploadException) $r3\", \"throw $r4\"],\"access$100\":\"<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream access$100(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl)>\",\"access$000\":null,\"access$100\":null},\"rhs\" : {\"<init>.3\":null,\"<init>.5\":[\"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0> = r1\"],\"<init>.6\":[\"r31 = new java.lang.NullPointerException\", \"specialinvoke r31.<java.lang.NullPointerException: void <init>(java.lang.String)>(\"ctx parameter\")\", \"throw r31\"],\"<init>.10\":[\"if null == r3 goto r33 = new org.apache.commons.fileupload.FileUploadBase$InvalidContentTypeException\", \"$r9 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>()\", \"$z0 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>(\"multipart/\")\", \"if $z0 != 0 goto r29 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: java.io.InputStream getInputStream()>()\", \"r33 = new org.apache.commons.fileupload.FileUploadBase$InvalidContentTypeException\", \"r32 = new java.lang.StringBuffer\", \"specialinvoke r32.<java.lang.StringBuffer: void <init>()>()\", \"$r6 = virtualinvoke r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"the request doesn\\'t contain a multipart/form-data or multipart/mixed stream, content type header is \")\", \"$r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3)\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>()\", \"specialinvoke r33.<org.apache.commons.fileupload.FileUploadBase$InvalidContentTypeException: void <init>(java.lang.String)>($r8)\", \"r40 = (java.lang.Throwable) r33\", \"throw r40\", \"r29 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: java.io.InputStream getInputStream()>()\", \"$l0 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$b1 = $l0 cmp 0L\", \"if $b1 < 0 goto r30 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: java.lang.String access$500(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"i13 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: int getContentLength()>()\", \"if i13 != -1 goto $l4 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"r34 = new org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$1\", \"$l12 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"r41 = (java.io.InputStream) r29\", \"specialinvoke r34.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$1: void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl,java.io.InputStream,long,org.apache.commons.fileupload.FileUploadBase)>(r0, r41, $l12, r1)\", \"r29 = r34\", \"goto [?= r30 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: java.lang.String access$500(org.apache.commons.fileupload.FileUploadBase)>(r1)]\", \"$l4 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$b5 = $l4 cmp 0L\", \"if $b5 < 0 goto r30 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: java.lang.String access$500(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$l6 = (long) i13\", \"$l7 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$b8 = $l6 cmp $l7\", \"if $b8 <= 0 goto r30 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: java.lang.String access$500(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"r36 = new org.apache.commons.fileupload.FileUploadBase$SizeLimitExceededException\", \"r35 = new java.lang.StringBuffer\", \"specialinvoke r35.<java.lang.StringBuffer: void <init>()>()\", \"$r21 = virtualinvoke r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"the request was rejected because its size (\")\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i13)\", \"$r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\") exceeds the configured maximum (\")\"],\"<init>.51\":[\"$r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l9)\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\")\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>()\", \"$l10 = (long) i13\", \"$l11 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"specialinvoke r36.<org.apache.commons.fileupload.FileUploadBase$SizeLimitExceededException: void <init>(java.lang.String,long,long)>($r26, $l10, $l11)\", \"r42 = (java.lang.Throwable) r36\", \"throw r42\", \"r30 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: java.lang.String access$500(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"if r30 != null goto $r10 = virtualinvoke r1.<org.apache.commons.fileupload.FileUploadBase: byte[] getBoundary(java.lang.String)>(r3)\", \"r30 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: java.lang.String getCharacterEncoding()>()\", \"$r10 = virtualinvoke r1.<org.apache.commons.fileupload.FileUploadBase: byte[] getBoundary(java.lang.String)>(r3)\", \"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: byte[] boundary> = $r10\", \"$r11 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: byte[] boundary>\", \"if $r11 != null goto r38 = new org.apache.commons.fileupload.MultipartStream$ProgressNotifier\", \"r37 = new org.apache.commons.fileupload.FileUploadException\", \"specialinvoke r37.<org.apache.commons.fileupload.FileUploadException: void <init>(java.lang.String)>(\"the request was rejected because no multipart boundary was found\")\", \"r43 = (java.lang.Throwable) r37\", \"throw r43\", \"r38 = new org.apache.commons.fileupload.MultipartStream$ProgressNotifier\", \"$r13 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.ProgressListener access$600(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$i2 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: int getContentLength()>()\", \"$l3 = (long) $i2\", \"specialinvoke r38.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: void <init>(org.apache.commons.fileupload.ProgressListener,long)>($r13, $l3)\", \"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream$ProgressNotifier notifier> = r38\", \"r39 = new org.apache.commons.fileupload.MultipartStream\", \"$r16 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: byte[] boundary>\", \"$r15 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream$ProgressNotifier notifier>\", \"r44 = (java.io.InputStream) r29\", \"specialinvoke r39.<org.apache.commons.fileupload.MultipartStream: void <init>(java.io.InputStream,byte[],org.apache.commons.fileupload.MultipartStream$ProgressNotifier)>(r44, $r16, $r15)\", \"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream multi> = r39\", \"$r17 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream multi>\", \"virtualinvoke $r17.<org.apache.commons.fileupload.MultipartStream: void setHeaderEncoding(java.lang.String)>(r30)\"],\"findNextItem.29\":[\"r1 = virtualinvoke $r6.<org.apache.commons.fileupload.FileUploadBase: java.util.Map parseHeaders(java.lang.String)>($r7)\"],\"findNextItem.33\":[\"r35 = virtualinvoke $r16.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFieldName(java.util.Map)>(r1)\"],\"findNextItem.35\":[\"$r17 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\", \"r2 = virtualinvoke $r17.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getHeader(java.util.Map,java.lang.String)>(r1, \"Content-type\")\", \"if r2 == null goto $r18 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\", \"$r27 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>()\"],\"findNextItem.40\":[\"if $z1 == 0 goto $r18 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\"],\"findNextItem.48\":[\"$r18 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\", \"r37 = virtualinvoke $r18.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFileName(java.util.Map)>(r1)\", \"$r19 = new org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl\", \"$r20 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\", \"$r21 = virtualinvoke $r20.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getHeader(java.util.Map,java.lang.String)>(r1, \"Content-type\")\"],\"findNextItem.54\":[\"goto [?= specialinvoke $r19.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl,java.lang.String,java.lang.String,java.lang.String,boolean)>(r0, r37, r35, $r21, $z4)]\"],\"findNextItem.56\":[\"specialinvoke $r19.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl,java.lang.String,java.lang.String,java.lang.String,boolean)>(r0, r37, r35, $r21, $z4)\", \"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem> = $r19\", \"$r22 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream$ProgressNotifier notifier>\", \"virtualinvoke $r22.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: void noteItem()>()\"],\"findNextItem.67\":[\"r38 = virtualinvoke $r9.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFileName(java.util.Map)>(r1)\"],\"findNextItem.70\":[\"$r13 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: java.lang.String currentFieldName>\", \"$r12 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\", \"$r14 = virtualinvoke $r12.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getHeader(java.util.Map,java.lang.String)>(r1, \"Content-type\")\", \"specialinvoke $r11.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl,java.lang.String,java.lang.String,java.lang.String,boolean)>(r0, r38, $r13, $r14, 0)\"],\"findNextItem.75\":null,\"getContentLength\":null,\"hasNext.9\":null,\"access$100\":null,\"access$000\":\"<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream access$000(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl)>\",\"access$100\":\"<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase access$100(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl)>\"}}",
            "commit": "1565143",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1565143/org/apache/commons/fileupload/FileUploadBase.class",
            "contained": true
        },
        {
            "qname": "org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl(RequestContext)",
            "affectedFile": "/org/apache/commons/fileupload/FileUploadBase.class",
            "diff": "{\"lhs\" : {\"<init>.3\":[\"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0> = r1\"],\"<init>.5\":null,\"<init>.6\":[\"$r27 = new java.lang.NullPointerException\", \"specialinvoke $r27.<java.lang.NullPointerException: void <init>(java.lang.String)>(\"ctx parameter\")\", \"throw $r27\"],\"<init>.10\":[\"if null == r3 goto $r4 = new org.apache.commons.fileupload.FileUploadBase$InvalidContentTypeException\", \"$r7 = <java.util.Locale: java.util.Locale ENGLISH>\", \"$r8 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r7)\", \"$z0 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>(\"multipart/\")\", \"if $z0 != 0 goto r28 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: java.io.InputStream getInputStream()>()\", \"$r4 = new org.apache.commons.fileupload.FileUploadBase$InvalidContentTypeException\", \"$r5 = newarray (java.lang.Object)[3]\", \"$r5[0] = \"multipart/form-data\"\", \"$r5[1] = \"multipart/form-data\"\", \"$r5[2] = r3\", \"$r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"the request doesn\\'t contain a %s or %s stream, content type header is %s\", $r5)\", \"specialinvoke $r4.<org.apache.commons.fileupload.FileUploadBase$InvalidContentTypeException: void <init>(java.lang.String)>($r6)\", \"throw $r4\", \"r28 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: java.io.InputStream getInputStream()>()\", \"i0 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: int getContentLength()>()\", \"$r9 = class \"Lorg/apache/commons/fileupload/UploadContext;\"\", \"$r10 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>()\", \"$z1 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r10)\", \"if $z1 == 0 goto $l10 = (long) i0\", \"$r26 = (org.apache.commons.fileupload.UploadContext) r2\", \"$l10 = interfaceinvoke $r26.<org.apache.commons.fileupload.UploadContext: long contentLength()>()\", \"goto [?= l1 = $l10]\", \"$l10 = (long) i0\", \"l1 = $l10\", \"$l2 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$b3 = $l2 cmp 0L\", \"if $b3 < 0 goto r29 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: java.lang.String access$500(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$b4 = $l10 cmp -1L\", \"if $b4 == 0 goto $r20 = new org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$1\", \"$l6 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$b7 = $l10 cmp $l6\", \"if $b7 <= 0 goto $r20 = new org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$1\", \"$r21 = new org.apache.commons.fileupload.FileUploadBase$SizeLimitExceededException\", \"$r22 = newarray (java.lang.Object)[2]\", \"$r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l10)\", \"$r22[0] = $r23\", \"$l8 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8)\", \"$r22[1] = $r24\", \"$r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"the request was rejected because its size (%s) exceeds the configured maximum (%s)\", $r22)\"],\"<init>.51\":[\"specialinvoke $r21.<org.apache.commons.fileupload.FileUploadBase$SizeLimitExceededException: void <init>(java.lang.String,long,long)>($r25, $l10, $l9)\", \"throw $r21\", \"$r20 = new org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$1\", \"$l5 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"specialinvoke $r20.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$1: void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl,java.io.InputStream,long,org.apache.commons.fileupload.FileUploadBase)>(r0, r28, $l5, r1)\", \"r28 = $r20\", \"r29 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: java.lang.String access$500(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"if r29 != null goto $r11 = virtualinvoke r1.<org.apache.commons.fileupload.FileUploadBase: byte[] getBoundary(java.lang.String)>(r3)\", \"r29 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: java.lang.String getCharacterEncoding()>()\", \"$r11 = virtualinvoke r1.<org.apache.commons.fileupload.FileUploadBase: byte[] getBoundary(java.lang.String)>(r3)\", \"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: byte[] boundary> = $r11\", \"$r12 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: byte[] boundary>\", \"if $r12 != null goto $r13 = new org.apache.commons.fileupload.MultipartStream$ProgressNotifier\", \"$r19 = new org.apache.commons.fileupload.FileUploadException\", \"specialinvoke $r19.<org.apache.commons.fileupload.FileUploadException: void <init>(java.lang.String)>(\"the request was rejected because no multipart boundary was found\")\", \"throw $r19\", \"$r13 = new org.apache.commons.fileupload.MultipartStream$ProgressNotifier\", \"$r14 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.ProgressListener access$600(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"specialinvoke $r13.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: void <init>(org.apache.commons.fileupload.ProgressListener,long)>($r14, l1)\", \"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream$ProgressNotifier notifier> = $r13\", \"$r15 = new org.apache.commons.fileupload.MultipartStream\", \"$r17 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: byte[] boundary>\", \"$r16 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream$ProgressNotifier notifier>\", \"specialinvoke $r15.<org.apache.commons.fileupload.MultipartStream: void <init>(java.io.InputStream,byte[],org.apache.commons.fileupload.MultipartStream$ProgressNotifier)>(r28, $r17, $r16)\", \"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream multi> = $r15\", \"$r18 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream multi>\", \"virtualinvoke $r18.<org.apache.commons.fileupload.MultipartStream: void setHeaderEncoding(java.lang.String)>(r29)\"],\"findNextItem.29\":[\"r1 = virtualinvoke $r6.<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.FileItemHeaders getParsedHeaders(java.lang.String)>($r7)\"],\"findNextItem.33\":[\"r35 = virtualinvoke $r16.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFieldName(org.apache.commons.fileupload.FileItemHeaders)>(r1)\"],\"findNextItem.35\":[\"r2 = interfaceinvoke r1.<org.apache.commons.fileupload.FileItemHeaders: java.lang.String getHeader(java.lang.String)>(\"Content-type\")\", \"if r2 == null goto $r17 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\", \"$r26 = <java.util.Locale: java.util.Locale ENGLISH>\", \"$r27 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r26)\"],\"findNextItem.40\":[\"if $z1 == 0 goto $r17 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\"],\"findNextItem.48\":[\"$r17 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\", \"r37 = virtualinvoke $r17.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFileName(org.apache.commons.fileupload.FileItemHeaders)>(r1)\", \"$r18 = new org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl\", \"$r19 = interfaceinvoke r1.<org.apache.commons.fileupload.FileItemHeaders: java.lang.String getHeader(java.lang.String)>(\"Content-type\")\"],\"findNextItem.54\":[\"goto [?= $l2 = specialinvoke r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: long getContentLength(org.apache.commons.fileupload.FileItemHeaders)>(r1)]\"],\"findNextItem.56\":[\"$l2 = specialinvoke r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: long getContentLength(org.apache.commons.fileupload.FileItemHeaders)>(r1)\", \"specialinvoke $r18.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl,java.lang.String,java.lang.String,java.lang.String,boolean,long)>(r0, r37, r35, $r19, $z4, $l2)\", \"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem> = $r18\", \"$r20 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem>\", \"virtualinvoke $r20.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void setHeaders(org.apache.commons.fileupload.FileItemHeaders)>(r1)\", \"$r21 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream$ProgressNotifier notifier>\", \"virtualinvoke $r21.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: void noteItem()>()\"],\"findNextItem.67\":[\"r38 = virtualinvoke $r9.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFileName(org.apache.commons.fileupload.FileItemHeaders)>(r1)\"],\"findNextItem.70\":[\"$r12 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: java.lang.String currentFieldName>\", \"$r13 = interfaceinvoke r1.<org.apache.commons.fileupload.FileItemHeaders: java.lang.String getHeader(java.lang.String)>(\"Content-type\")\", \"$l1 = specialinvoke r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: long getContentLength(org.apache.commons.fileupload.FileItemHeaders)>(r1)\", \"specialinvoke $r11.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl,java.lang.String,java.lang.String,java.lang.String,boolean,long)>(r0, r38, $r12, $r13, 0, $l1)\"],\"findNextItem.75\":[\"$r14 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem>\", \"virtualinvoke $r14.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void setHeaders(org.apache.commons.fileupload.FileItemHeaders)>(r1)\"],\"getContentLength\":\"<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: long getContentLength(org.apache.commons.fileupload.FileItemHeaders)>\",\"hasNext.9\":[\"$r2 := @caughtexception\", \"$r3 = virtualinvoke $r2.<org.apache.commons.fileupload.FileUploadBase$FileUploadIOException: java.lang.Throwable getCause()>()\", \"$r4 = (org.apache.commons.fileupload.FileUploadException) $r3\", \"throw $r4\"],\"access$100\":\"<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream access$100(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl)>\",\"access$000\":null,\"access$100\":null},\"rhs\" : {\"<init>.3\":null,\"<init>.5\":[\"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0> = r1\"],\"<init>.6\":[\"r31 = new java.lang.NullPointerException\", \"specialinvoke r31.<java.lang.NullPointerException: void <init>(java.lang.String)>(\"ctx parameter\")\", \"throw r31\"],\"<init>.10\":[\"if null == r3 goto r33 = new org.apache.commons.fileupload.FileUploadBase$InvalidContentTypeException\", \"$r9 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>()\", \"$z0 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>(\"multipart/\")\", \"if $z0 != 0 goto r29 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: java.io.InputStream getInputStream()>()\", \"r33 = new org.apache.commons.fileupload.FileUploadBase$InvalidContentTypeException\", \"r32 = new java.lang.StringBuffer\", \"specialinvoke r32.<java.lang.StringBuffer: void <init>()>()\", \"$r6 = virtualinvoke r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"the request doesn\\'t contain a multipart/form-data or multipart/mixed stream, content type header is \")\", \"$r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3)\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>()\", \"specialinvoke r33.<org.apache.commons.fileupload.FileUploadBase$InvalidContentTypeException: void <init>(java.lang.String)>($r8)\", \"r40 = (java.lang.Throwable) r33\", \"throw r40\", \"r29 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: java.io.InputStream getInputStream()>()\", \"$l0 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$b1 = $l0 cmp 0L\", \"if $b1 < 0 goto r30 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: java.lang.String access$500(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"i13 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: int getContentLength()>()\", \"if i13 != -1 goto $l4 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"r34 = new org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$1\", \"$l12 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"r41 = (java.io.InputStream) r29\", \"specialinvoke r34.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$1: void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl,java.io.InputStream,long,org.apache.commons.fileupload.FileUploadBase)>(r0, r41, $l12, r1)\", \"r29 = r34\", \"goto [?= r30 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: java.lang.String access$500(org.apache.commons.fileupload.FileUploadBase)>(r1)]\", \"$l4 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$b5 = $l4 cmp 0L\", \"if $b5 < 0 goto r30 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: java.lang.String access$500(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$l6 = (long) i13\", \"$l7 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$b8 = $l6 cmp $l7\", \"if $b8 <= 0 goto r30 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: java.lang.String access$500(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"r36 = new org.apache.commons.fileupload.FileUploadBase$SizeLimitExceededException\", \"r35 = new java.lang.StringBuffer\", \"specialinvoke r35.<java.lang.StringBuffer: void <init>()>()\", \"$r21 = virtualinvoke r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"the request was rejected because its size (\")\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i13)\", \"$r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\") exceeds the configured maximum (\")\"],\"<init>.51\":[\"$r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l9)\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\")\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>()\", \"$l10 = (long) i13\", \"$l11 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$400(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"specialinvoke r36.<org.apache.commons.fileupload.FileUploadBase$SizeLimitExceededException: void <init>(java.lang.String,long,long)>($r26, $l10, $l11)\", \"r42 = (java.lang.Throwable) r36\", \"throw r42\", \"r30 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: java.lang.String access$500(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"if r30 != null goto $r10 = virtualinvoke r1.<org.apache.commons.fileupload.FileUploadBase: byte[] getBoundary(java.lang.String)>(r3)\", \"r30 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: java.lang.String getCharacterEncoding()>()\", \"$r10 = virtualinvoke r1.<org.apache.commons.fileupload.FileUploadBase: byte[] getBoundary(java.lang.String)>(r3)\", \"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: byte[] boundary> = $r10\", \"$r11 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: byte[] boundary>\", \"if $r11 != null goto r38 = new org.apache.commons.fileupload.MultipartStream$ProgressNotifier\", \"r37 = new org.apache.commons.fileupload.FileUploadException\", \"specialinvoke r37.<org.apache.commons.fileupload.FileUploadException: void <init>(java.lang.String)>(\"the request was rejected because no multipart boundary was found\")\", \"r43 = (java.lang.Throwable) r37\", \"throw r43\", \"r38 = new org.apache.commons.fileupload.MultipartStream$ProgressNotifier\", \"$r13 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.ProgressListener access$600(org.apache.commons.fileupload.FileUploadBase)>(r1)\", \"$i2 = interfaceinvoke r2.<org.apache.commons.fileupload.RequestContext: int getContentLength()>()\", \"$l3 = (long) $i2\", \"specialinvoke r38.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: void <init>(org.apache.commons.fileupload.ProgressListener,long)>($r13, $l3)\", \"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream$ProgressNotifier notifier> = r38\", \"r39 = new org.apache.commons.fileupload.MultipartStream\", \"$r16 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: byte[] boundary>\", \"$r15 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream$ProgressNotifier notifier>\", \"r44 = (java.io.InputStream) r29\", \"specialinvoke r39.<org.apache.commons.fileupload.MultipartStream: void <init>(java.io.InputStream,byte[],org.apache.commons.fileupload.MultipartStream$ProgressNotifier)>(r44, $r16, $r15)\", \"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream multi> = r39\", \"$r17 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream multi>\", \"virtualinvoke $r17.<org.apache.commons.fileupload.MultipartStream: void setHeaderEncoding(java.lang.String)>(r30)\"],\"findNextItem.29\":[\"r1 = virtualinvoke $r6.<org.apache.commons.fileupload.FileUploadBase: java.util.Map parseHeaders(java.lang.String)>($r7)\"],\"findNextItem.33\":[\"r35 = virtualinvoke $r16.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFieldName(java.util.Map)>(r1)\"],\"findNextItem.35\":[\"$r17 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\", \"r2 = virtualinvoke $r17.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getHeader(java.util.Map,java.lang.String)>(r1, \"Content-type\")\", \"if r2 == null goto $r18 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\", \"$r27 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>()\"],\"findNextItem.40\":[\"if $z1 == 0 goto $r18 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\"],\"findNextItem.48\":[\"$r18 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\", \"r37 = virtualinvoke $r18.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFileName(java.util.Map)>(r1)\", \"$r19 = new org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl\", \"$r20 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\", \"$r21 = virtualinvoke $r20.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getHeader(java.util.Map,java.lang.String)>(r1, \"Content-type\")\"],\"findNextItem.54\":[\"goto [?= specialinvoke $r19.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl,java.lang.String,java.lang.String,java.lang.String,boolean)>(r0, r37, r35, $r21, $z4)]\"],\"findNextItem.56\":[\"specialinvoke $r19.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl,java.lang.String,java.lang.String,java.lang.String,boolean)>(r0, r37, r35, $r21, $z4)\", \"r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem> = $r19\", \"$r22 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream$ProgressNotifier notifier>\", \"virtualinvoke $r22.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: void noteItem()>()\"],\"findNextItem.67\":[\"r38 = virtualinvoke $r9.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFileName(java.util.Map)>(r1)\"],\"findNextItem.70\":[\"$r13 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: java.lang.String currentFieldName>\", \"$r12 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase this$0>\", \"$r14 = virtualinvoke $r12.<org.apache.commons.fileupload.FileUploadBase: java.lang.String getHeader(java.util.Map,java.lang.String)>(r1, \"Content-type\")\", \"specialinvoke $r11.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl,java.lang.String,java.lang.String,java.lang.String,boolean)>(r0, r38, $r13, $r14, 0)\"],\"findNextItem.75\":null,\"getContentLength\":null,\"hasNext.9\":null,\"access$100\":null,\"access$000\":\"<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream access$000(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl)>\",\"access$100\":\"<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase access$100(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl)>\"}}",
            "commit": "1565143",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1565143/org/apache/commons/fileupload/FileUploadBase.class",
            "contained": true
        },
        {
            "qname": "org.apache.commons.fileupload.FileUploadBase$InvalidContentTypeException",
            "affectedFile": "/org/apache/commons/fileupload/FileUploadBase.class",
            "diff": "",
            "commit": "1565143",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1565143/org/apache/commons/fileupload/FileUploadBase.class",
            "contained": true
        },
        {
            "qname": "org.apache.commons.fileupload.FileUploadBase$InvalidContentTypeException()",
            "affectedFile": "/org/apache/commons/fileupload/FileUploadBase.class",
            "diff": "",
            "commit": "1565143",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1565143/org/apache/commons/fileupload/FileUploadBase.class",
            "contained": true
        },
        {
            "qname": "org.apache.commons.fileupload.FileUploadBase$InvalidContentTypeException(String,Throwable)",
            "affectedFile": "/org/apache/commons/fileupload/FileUploadBase.class",
            "diff": "",
            "commit": "1565143",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1565143/org/apache/commons/fileupload/FileUploadBase.class",
            "contained": true
        },
        {
            "qname": "org.apache.commons.fileupload.MultipartStream",
            "affectedFile": "/org/apache/commons/fileupload/MultipartStream.class",
            "diff": "{\"lhs\" : {\"KEEP_REGION_PAD\":null,\"<init>.22\":\"$r8 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"<init>.23\":\"$i7 = lengthof $r8\",\"<init>.24\":\"r0.<org.apache.commons.fileupload.MultipartStream: int keepRegion> = $i7\",\"<init>.25\":\"$r11 = <org.apache.commons.fileupload.MultipartStream: byte[] BOUNDARY_PREFIX>\",\"<init>.26\":\"$r10 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"<init>.27\":\"$r9 = <org.apache.commons.fileupload.MultipartStream: byte[] BOUNDARY_PREFIX>\",\"<init>.28\":\"$i8 = lengthof $r9\",\"<init>.29\":\"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, $r10, 0, $i8)\",\"<init>.30\":\"$r13 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"<init>.31\":\"$r12 = <org.apache.commons.fileupload.MultipartStream: byte[] BOUNDARY_PREFIX>\",\"<init>.32\":\"$i10 = lengthof $r12\",\"<init>.33\":\"$i9 = lengthof r2\",\"<init>.34\":\"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r13, $i10, $i9)\",\"readByte.3\":[\"if $i1 != $i0 goto $r6 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] buffer>\"],\"readByte.5\":[\"$r2 = r0.<org.apache.commons.fileupload.MultipartStream: java.io.InputStream input>\", \"$r1 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] buffer>\", \"$i3 = r0.<org.apache.commons.fileupload.MultipartStream: int head>\", \"$i2 = r0.<org.apache.commons.fileupload.MultipartStream: int bufSize>\", \"$i4 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i3, $i2)\", \"r0.<org.apache.commons.fileupload.MultipartStream: int tail> = $i4\", \"$i5 = r0.<org.apache.commons.fileupload.MultipartStream: int tail>\", \"if $i5 != -1 goto $r3 = r0.<org.apache.commons.fileupload.MultipartStream: org.apache.commons.fileupload.MultipartStream$ProgressNotifier notifier>\", \"$r5 = new java.io.IOException\", \"specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>(\"No more data is available\")\", \"throw $r5\", \"$r3 = r0.<org.apache.commons.fileupload.MultipartStream: org.apache.commons.fileupload.MultipartStream$ProgressNotifier notifier>\", \"if $r3 == null goto $r6 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] buffer>\"],\"readByte.19\":[\"$i6 = r0.<org.apache.commons.fileupload.MultipartStream: int tail>\", \"virtualinvoke $r4.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: void noteBytesRead(int)>($i6)\", \"$r6 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] buffer>\", \"$i7 = r0.<org.apache.commons.fileupload.MultipartStream: int head>\", \"$i8 = $i7 + 1\", \"r0.<org.apache.commons.fileupload.MultipartStream: int head> = $i8\", \"$b9 = $r6[$i7]\", \"return $b9\"],\"readBoundary.13\":\"$r2 = <org.apache.commons.fileupload.MultipartStream: byte[] STREAM_TERMINATOR>\",\"readBoundary.14\":\"$z0 = staticinvoke <org.apache.commons.fileupload.MultipartStream: boolean arrayequals(byte[],byte[],int)>(r1, $r2, 2)\",\"readBoundary.15\":\"if $z0 == 0 goto $r3 = <org.apache.commons.fileupload.MultipartStream: byte[] FIELD_SEPARATOR>\",\"readBoundary.18\":\"$r3 = <org.apache.commons.fileupload.MultipartStream: byte[] FIELD_SEPARATOR>\",\"readBoundary.19\":\"$z1 = staticinvoke <org.apache.commons.fileupload.MultipartStream: boolean arrayequals(byte[],byte[],int)>(r1, $r3, 2)\",\"readBoundary.20\":\"if $z1 == 0 goto $r4 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\",\"readBoundary.23\":\"$r4 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\",\"readBoundary.24\":\"specialinvoke $r4.<org.apache.commons.fileupload.MultipartStream$MalformedStreamException: void <init>(java.lang.String)>(\\\"Unexpected characters follow a boundary\\\")\",\"readBoundary.25\":\"throw $r4\",\"readBoundary.26\":\"goto [?= return z3]\",\"readBoundary.27\":\"$r5 := @caughtexception\",\"readBoundary.28\":\"throw $r5\",\"readBoundary.29\":\"$r6 := @caughtexception\",\"readBoundary.30\":\"$r7 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\",\"readBoundary.31\":\"specialinvoke $r7.<org.apache.commons.fileupload.MultipartStream$MalformedStreamException: void <init>(java.lang.String)>(\\\"Stream ended unexpectedly\\\")\",\"readBoundary.32\":\"throw $r7\",\"setBoundary.8\":[\"$r5 = new org.apache.commons.fileupload.MultipartStream$IllegalBoundaryException\", \"specialinvoke $r5.<org.apache.commons.fileupload.MultipartStream$IllegalBoundaryException: void <init>(java.lang.String)>(\"The length of a boundary token can not be changed\")\", \"throw $r5\"],\"readHeaders.1\":[\"i3 = 0\", \"$r2 = new java.io.ByteArrayOutputStream\", \"specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>()\"],\"readHeaders.5\":[\"$r3 = <org.apache.commons.fileupload.MultipartStream: byte[] HEADER_SEPARATOR>\", \"$i1 = lengthof $r3\", \"if i3 >= $i1 goto $r4 = r0.<org.apache.commons.fileupload.MultipartStream: java.lang.String headerEncoding>\", \"b0 = virtualinvoke r0.<org.apache.commons.fileupload.MultipartStream: byte readByte()>()\", \"goto [?= i4 = i4 + 1]\", \"$r13 := @caughtexception\", \"throw $r13\", \"$r11 := @caughtexception\", \"$r12 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\", \"specialinvoke $r12.<org.apache.commons.fileupload.MultipartStream$MalformedStreamException: void <init>(java.lang.String)>(\"Stream ended unexpectedly\")\", \"throw $r12\", \"i4 = i4 + 1\", \"if i4 <= 10240 goto $r6 = <org.apache.commons.fileupload.MultipartStream: byte[] HEADER_SEPARATOR>\", \"$r7 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\", \"$r8 = newarray (java.lang.Object)[1]\", \"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10240)\", \"$r8[0] = $r9\", \"$r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"Header section has more than %s bytes (maybe it is not properly terminated)\", $r8)\", \"specialinvoke $r7.<org.apache.commons.fileupload.MultipartStream$MalformedStreamException: void <init>(java.lang.String)>($r10)\", \"throw $r7\"],\"readHeaders.26\":[\"$b2 = $r6[i3]\", \"if b0 != $b2 goto i3 = 0\", \"i3 = i3 + 1\", \"goto [?= virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(b0)]\", \"i3 = 0\", \"virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(b0)\", \"goto [?= $r3 = <org.apache.commons.fileupload.MultipartStream: byte[] HEADER_SEPARATOR>]\"],\"readHeaders.34\":[\"if $r4 == null goto r16 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: java.lang.String toString()>()\"],\"readHeaders.36\":[\"r16 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>($r5)\", \"goto [?= return r16]\", \"$r14 := @caughtexception\", \"r16 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: java.lang.String toString()>()\", \"goto [?= return r16]\", \"r16 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: java.lang.String toString()>()\", \"return r16\"],\"readBodyData.3\":[\"$l0 = staticinvoke <org.apache.commons.fileupload.util.Streams: long copy(java.io.InputStream,java.io.OutputStream,boolean)>(r2, r1, 0)\"],\"skipPreamble.27\":\"$r12 := @caughtexception\",\"skipPreamble.28\":\"$r15 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.29\":\"$r14 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.30\":\"$r13 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.31\":\"$i8 = lengthof $r13\",\"skipPreamble.32\":\"$i9 = $i8 - 2\",\"skipPreamble.33\":\"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, 0, $r14, 2, $i9)\",\"skipPreamble.34\":\"$r16 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.35\":\"$i10 = lengthof $r16\",\"skipPreamble.36\":\"r0.<org.apache.commons.fileupload.MultipartStream: int boundaryLength> = $i10\",\"skipPreamble.37\":\"$r17 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.38\":\"$r17[0] = 13\",\"skipPreamble.39\":\"$r18 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.40\":\"$r18[1] = 10\",\"skipPreamble.42\":\"$r19 := @caughtexception\",\"skipPreamble.43\":\"$r22 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.44\":\"$r21 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.45\":\"$r20 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.46\":\"$i11 = lengthof $r20\",\"skipPreamble.47\":\"$i12 = $i11 - 2\",\"skipPreamble.48\":\"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r22, 0, $r21, 2, $i12)\",\"skipPreamble.49\":\"$r23 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.50\":\"$i13 = lengthof $r23\",\"skipPreamble.51\":\"r0.<org.apache.commons.fileupload.MultipartStream: int boundaryLength> = $i13\",\"skipPreamble.52\":\"$r24 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.53\":\"$r24[0] = 13\",\"skipPreamble.54\":\"$r25 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.55\":\"$r25[1] = 10\",\"skipPreamble.56\":\"throw $r19\",\"access$400\":\"<org.apache.commons.fileupload.MultipartStream: java.io.InputStream access$400(org.apache.commons.fileupload.MultipartStream)>\",\"access$500\":\"<org.apache.commons.fileupload.MultipartStream: int access$500(org.apache.commons.fileupload.MultipartStream)>\",\"access$112\":null,\"access$114\":null,\"access$400\":null,\"access$500\":null},\"rhs\" : {\"KEEP_REGION_PAD\":\"<org.apache.commons.fileupload.MultipartStream: int KEEP_REGION_PAD>\",\"<init>.22\":\"$i7 = lengthof r2\",\"<init>.23\":\"$i8 = $i7 + 3\",\"<init>.24\":\"r0.<org.apache.commons.fileupload.MultipartStream: int keepRegion> = $i8\",\"<init>.25\":\"$r10 = <org.apache.commons.fileupload.MultipartStream: byte[] BOUNDARY_PREFIX>\",\"<init>.26\":\"$r9 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"<init>.27\":\"$r8 = <org.apache.commons.fileupload.MultipartStream: byte[] BOUNDARY_PREFIX>\",\"<init>.28\":\"$i9 = lengthof $r8\",\"<init>.29\":\"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r9, 0, $i9)\",\"<init>.30\":\"$r12 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"<init>.31\":\"$r11 = <org.apache.commons.fileupload.MultipartStream: byte[] BOUNDARY_PREFIX>\",\"<init>.32\":\"$i11 = lengthof $r11\",\"<init>.33\":\"$i10 = lengthof r2\",\"<init>.34\":\"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r12, $i11, $i10)\",\"readByte.3\":[\"if $i1 != $i0 goto $r1 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] buffer>\"],\"readByte.5\":[\"$r3 = r0.<org.apache.commons.fileupload.MultipartStream: java.io.InputStream input>\", \"$r2 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] buffer>\", \"$i6 = r0.<org.apache.commons.fileupload.MultipartStream: int head>\", \"$i5 = r0.<org.apache.commons.fileupload.MultipartStream: int bufSize>\", \"$i7 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, $i6, $i5)\", \"r0.<org.apache.commons.fileupload.MultipartStream: int tail> = $i7\", \"$i8 = r0.<org.apache.commons.fileupload.MultipartStream: int tail>\", \"if $i8 != -1 goto $r4 = r0.<org.apache.commons.fileupload.MultipartStream: org.apache.commons.fileupload.MultipartStream$ProgressNotifier notifier>\", \"$r6 = new java.io.IOException\", \"specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>(\"No more data is available\")\", \"throw $r6\"],\"readByte.19\":[\"$i9 = r0.<org.apache.commons.fileupload.MultipartStream: int tail>\", \"virtualinvoke $r4.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: void noteBytesRead(int)>($i9)\", \"$r1 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] buffer>\", \"$i2 = r0.<org.apache.commons.fileupload.MultipartStream: int head>\", \"$i3 = $i2 + 1\", \"r0.<org.apache.commons.fileupload.MultipartStream: int head> = $i3\", \"$b4 = $r1[$i2]\", \"return $b4\"],\"readBoundary.13\":\"$r3 = <org.apache.commons.fileupload.MultipartStream: byte[] STREAM_TERMINATOR>\",\"readBoundary.14\":\"$z0 = staticinvoke <org.apache.commons.fileupload.MultipartStream: boolean arrayequals(byte[],byte[],int)>(r1, $r3, 2)\",\"readBoundary.15\":\"if $z0 == 0 goto $r4 = <org.apache.commons.fileupload.MultipartStream: byte[] FIELD_SEPARATOR>\",\"readBoundary.18\":\"$r4 = <org.apache.commons.fileupload.MultipartStream: byte[] FIELD_SEPARATOR>\",\"readBoundary.19\":\"$z1 = staticinvoke <org.apache.commons.fileupload.MultipartStream: boolean arrayequals(byte[],byte[],int)>(r1, $r4, 2)\",\"readBoundary.20\":\"if $z1 == 0 goto r8 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\",\"readBoundary.23\":\"r8 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\",\"readBoundary.24\":\"specialinvoke r8.<org.apache.commons.fileupload.MultipartStream$MalformedStreamException: void <init>(java.lang.String)>(\\\"Unexpected characters follow a boundary\\\")\",\"readBoundary.25\":\"r10 = (java.lang.Throwable) r8\",\"readBoundary.26\":\"throw r10\",\"readBoundary.27\":\"goto [?= return z3]\",\"readBoundary.28\":\"$r6 := @caughtexception\",\"readBoundary.29\":\"r9 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\",\"readBoundary.30\":\"specialinvoke r9.<org.apache.commons.fileupload.MultipartStream$MalformedStreamException: void <init>(java.lang.String)>(\\\"Stream ended unexpectedly\\\")\",\"readBoundary.31\":\"r11 = (java.lang.Throwable) r9\",\"readBoundary.32\":\"throw r11\",\"setBoundary.8\":[\"r6 = new org.apache.commons.fileupload.MultipartStream$IllegalBoundaryException\", \"specialinvoke r6.<org.apache.commons.fileupload.MultipartStream$IllegalBoundaryException: void <init>(java.lang.String)>(\"The length of a boundary token can not be changed\")\", \"r7 = (java.lang.Throwable) r6\", \"throw r7\"],\"readHeaders.1\":null,\"readHeaders.5\":[\"r1 = newarray (byte)[1]\", \"r12 = new java.io.ByteArrayOutputStream\", \"specialinvoke r12.<java.io.ByteArrayOutputStream: void <init>()>()\", \"i5 = 0\", \"$r10 = <org.apache.commons.fileupload.MultipartStream: byte[] HEADER_SEPARATOR>\", \"$i6 = lengthof $r10\", \"if i4 >= $i6 goto $r4 = r0.<org.apache.commons.fileupload.MultipartStream: java.lang.String headerEncoding>\", \"$b0 = virtualinvoke r0.<org.apache.commons.fileupload.MultipartStream: byte readByte()>()\", \"r1[0] = $b0\", \"goto [?= i5 = i5 + 1]\", \"$r7 := @caughtexception\", \"r13 = new org.apache.commons.fileupload.MultipartStream$MalformedStreamException\", \"specialinvoke r13.<org.apache.commons.fileupload.MultipartStream$MalformedStreamException: void <init>(java.lang.String)>(\"Stream ended unexpectedly\")\", \"r14 = (java.lang.Throwable) r13\", \"throw r14\", \"i5 = i5 + 1\", \"$b2 = r1[0]\"],\"readHeaders.26\":[\"$b1 = $r6[i4]\", \"if $b2 != $b1 goto i4 = 0\", \"i4 = i4 + 1\", \"goto [?= (branch)]\", \"i4 = 0\", \"if i5 > 10240 goto $r10 = <org.apache.commons.fileupload.MultipartStream: byte[] HEADER_SEPARATOR>\", \"$b3 = r1[0]\", \"virtualinvoke r12.<java.io.ByteArrayOutputStream: void write(int)>($b3)\", \"goto [?= $r10 = <org.apache.commons.fileupload.MultipartStream: byte[] HEADER_SEPARATOR>]\"],\"readHeaders.34\":[\"if $r4 == null goto r11 = virtualinvoke r12.<java.io.ByteArrayOutputStream: java.lang.String toString()>()\"],\"readHeaders.36\":[\"r11 = virtualinvoke r12.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>($r5)\", \"goto [?= return r11]\", \"$r9 := @caughtexception\", \"r11 = virtualinvoke r12.<java.io.ByteArrayOutputStream: java.lang.String toString()>()\", \"goto [?= return r11]\", \"r11 = virtualinvoke r12.<java.io.ByteArrayOutputStream: java.lang.String toString()>()\", \"return r11\"],\"readBodyData.3\":[\"r3 = (java.io.InputStream) r2\", \"$l0 = staticinvoke <org.apache.commons.fileupload.util.Streams: long copy(java.io.InputStream,java.io.OutputStream,boolean)>(r3, r1, 0)\"],\"skipPreamble.27\":\"$r19 := @caughtexception\",\"skipPreamble.28\":\"$r22 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.29\":\"$r21 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.30\":\"$r20 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.31\":\"$i11 = lengthof $r20\",\"skipPreamble.32\":\"$i12 = $i11 - 2\",\"skipPreamble.33\":\"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r22, 0, $r21, 2, $i12)\",\"skipPreamble.34\":\"$r23 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.35\":\"$i13 = lengthof $r23\",\"skipPreamble.36\":\"r0.<org.apache.commons.fileupload.MultipartStream: int boundaryLength> = $i13\",\"skipPreamble.37\":\"$r24 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.38\":\"$r24[0] = 13\",\"skipPreamble.39\":\"$r25 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.40\":\"$r25[1] = 10\",\"skipPreamble.42\":\"$r12 := @caughtexception\",\"skipPreamble.43\":\"$r15 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.44\":\"$r14 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.45\":\"$r13 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.46\":\"$i8 = lengthof $r13\",\"skipPreamble.47\":\"$i9 = $i8 - 2\",\"skipPreamble.48\":\"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, 0, $r14, 2, $i9)\",\"skipPreamble.49\":\"$r16 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.50\":\"$i10 = lengthof $r16\",\"skipPreamble.51\":\"r0.<org.apache.commons.fileupload.MultipartStream: int boundaryLength> = $i10\",\"skipPreamble.52\":\"$r17 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.53\":\"$r17[0] = 13\",\"skipPreamble.54\":\"$r18 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"skipPreamble.55\":\"$r18[1] = 10\",\"skipPreamble.56\":\"throw $r12\",\"access$400\":null,\"access$500\":null,\"access$112\":\"<org.apache.commons.fileupload.MultipartStream: int access$112(org.apache.commons.fileupload.MultipartStream,int)>\",\"access$114\":\"<org.apache.commons.fileupload.MultipartStream: int access$114(org.apache.commons.fileupload.MultipartStream,long)>\",\"access$400\":\"<org.apache.commons.fileupload.MultipartStream: int access$400(org.apache.commons.fileupload.MultipartStream)>\",\"access$500\":\"<org.apache.commons.fileupload.MultipartStream: java.io.InputStream access$500(org.apache.commons.fileupload.MultipartStream)>\"}}",
            "commit": "1565143",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1565143/org/apache/commons/fileupload/MultipartStream.class",
            "contained": true
        },
        {
            "qname": "org.apache.commons.fileupload.MultipartStream(InputStream,byte[],int,ProgressNotifier)",
            "affectedFile": "/org/apache/commons/fileupload/MultipartStream.class",
            "diff": "{\"lhs\" : {\"22\":\"$r8 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"23\":\"$i7 = lengthof $r8\",\"24\":\"r0.<org.apache.commons.fileupload.MultipartStream: int keepRegion> = $i7\",\"25\":\"$r11 = <org.apache.commons.fileupload.MultipartStream: byte[] BOUNDARY_PREFIX>\",\"26\":\"$r10 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"27\":\"$r9 = <org.apache.commons.fileupload.MultipartStream: byte[] BOUNDARY_PREFIX>\",\"28\":\"$i8 = lengthof $r9\",\"29\":\"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, $r10, 0, $i8)\",\"30\":\"$r13 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"31\":\"$r12 = <org.apache.commons.fileupload.MultipartStream: byte[] BOUNDARY_PREFIX>\",\"32\":\"$i10 = lengthof $r12\",\"33\":\"$i9 = lengthof r2\",\"34\":\"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r13, $i10, $i9)\"},\"rhs\" : {\"22\":\"$i7 = lengthof r2\",\"23\":\"$i8 = $i7 + 3\",\"24\":\"r0.<org.apache.commons.fileupload.MultipartStream: int keepRegion> = $i8\",\"25\":\"$r10 = <org.apache.commons.fileupload.MultipartStream: byte[] BOUNDARY_PREFIX>\",\"26\":\"$r9 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"27\":\"$r8 = <org.apache.commons.fileupload.MultipartStream: byte[] BOUNDARY_PREFIX>\",\"28\":\"$i9 = lengthof $r8\",\"29\":\"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r9, 0, $i9)\",\"30\":\"$r12 = r0.<org.apache.commons.fileupload.MultipartStream: byte[] boundary>\",\"31\":\"$r11 = <org.apache.commons.fileupload.MultipartStream: byte[] BOUNDARY_PREFIX>\",\"32\":\"$i11 = lengthof $r11\",\"33\":\"$i10 = lengthof r2\",\"34\":\"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r12, $i11, $i10)\"}}",
            "commit": "1565143",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1565143/org/apache/commons/fileupload/MultipartStream.class",
            "contained": true
        }
    ]
}