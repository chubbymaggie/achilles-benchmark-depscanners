{
    "details": [
        {
            "qname": "org.springframework.web.reactive.resource.PathResourceResolver",
            "diff": null,
            "contained": false,
            "commit": "13356a7ee2240f740737c5c83bdccdacc30603a",
            "ref_file": "/data4/test_compare_script/13356a7ee2240f740737c5c83bdccdacc30603a/org/springframework/web/reactive/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/reactive/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.PathResourceResolver",
            "diff": null,
            "contained": false,
            "commit": "695bf2961feffd35b5560ccc982a2189dcca611",
            "ref_file": "/data4/test_compare_script/695bf2961feffd35b5560ccc982a2189dcca611/org/springframework/web/reactive/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/reactive/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.PathResourceResolver",
            "diff": null,
            "contained": false,
            "commit": "98ad23bef8e2e04143f8f5b201380543a8d8c0c",
            "ref_file": "/data4/test_compare_script/98ad23bef8e2e04143f8f5b201380543a8d8c0c/org/springframework/web/reactive/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/reactive/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.PathResourceResolver.getResource(String,Resource)",
            "diff": null,
            "contained": false,
            "commit": "695bf2961feffd35b5560ccc982a2189dcca611",
            "ref_file": "/data4/test_compare_script/695bf2961feffd35b5560ccc982a2189dcca611/org/springframework/web/reactive/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/reactive/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.PathResourceResolver.isInvalidEncodedPath(String)",
            "diff": null,
            "contained": false,
            "commit": "13356a7ee2240f740737c5c83bdccdacc30603a",
            "ref_file": "/data4/test_compare_script/13356a7ee2240f740737c5c83bdccdacc30603a/org/springframework/web/reactive/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/reactive/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.PathResourceResolver.isInvalidEncodedPath(String)",
            "diff": null,
            "contained": false,
            "commit": "695bf2961feffd35b5560ccc982a2189dcca611",
            "ref_file": "/data4/test_compare_script/695bf2961feffd35b5560ccc982a2189dcca611/org/springframework/web/reactive/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/reactive/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.PathResourceResolver.isInvalidEncodedPath(String)",
            "diff": null,
            "contained": false,
            "commit": "98ad23bef8e2e04143f8f5b201380543a8d8c0c",
            "ref_file": "/data4/test_compare_script/98ad23bef8e2e04143f8f5b201380543a8d8c0c/org/springframework/web/reactive/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/reactive/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.PathResourceResolver.isResourceUnderLocation(Resource,Resource)",
            "diff": null,
            "contained": false,
            "commit": "13356a7ee2240f740737c5c83bdccdacc30603a",
            "ref_file": "/data4/test_compare_script/13356a7ee2240f740737c5c83bdccdacc30603a/org/springframework/web/reactive/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/reactive/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandler",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/reactive/resource/ResourceWebHandler.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandler.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandler",
            "diff": null,
            "contained": false,
            "commit": "13356a7ee2240f740737c5c83bdccdacc30603a",
            "ref_file": "/data4/test_compare_script/13356a7ee2240f740737c5c83bdccdacc30603a/org/springframework/web/reactive/resource/ResourceWebHandler.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandler.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandler.cleanDuplicateSlashes(String)",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/reactive/resource/ResourceWebHandler.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandler.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandler.cleanLeadingSlash(String)",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/reactive/resource/ResourceWebHandler.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandler.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandler.getResource(ServerWebExchange)",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/reactive/resource/ResourceWebHandler.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandler.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandler.getResource(ServerWebExchange)",
            "diff": null,
            "contained": false,
            "commit": "13356a7ee2240f740737c5c83bdccdacc30603a",
            "ref_file": "/data4/test_compare_script/13356a7ee2240f740737c5c83bdccdacc30603a/org/springframework/web/reactive/resource/ResourceWebHandler.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandler.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandler.isInvalidEncodedPath(String)",
            "diff": null,
            "contained": false,
            "commit": "13356a7ee2240f740737c5c83bdccdacc30603a",
            "ref_file": "/data4/test_compare_script/13356a7ee2240f740737c5c83bdccdacc30603a/org/springframework/web/reactive/resource/ResourceWebHandler.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandler.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandler.processPath(String)",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/reactive/resource/ResourceWebHandler.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandler.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests.invalidPath()",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests.testInvalidPath()",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests.testInvalidPath(HttpMethod)",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests.testInvalidPath(HttpMethod,String,Resource)",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests.testInvalidPath(String,ResourceWebHandler)",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests.testResolvePathWithTraversal()",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests.testResolvePathWithTraversal(HttpMethod)",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests.testResolvePathWithTraversal(HttpMethod,String,Resource)",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
            "affectedFile": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.PathResourceResolver",
            "diff": "{\"lhs\" : {\"locationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"<init>.2\":[\"$r1 = new java.util.HashMap\", \"specialinvoke $r1.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets> = $r1\"],\"setLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>\",\"getLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map getLocationCharsets()>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r2, r1, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r1, null, r2)\",\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>\",\"getResource.9\":[\"if $z2 == 0 goto $r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"r4 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r7 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r6 = new java.lang.StringBuilder\", \"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r11 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r14 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"if r4 == null goto $r19 = \"[]\"\", \"$r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4)\", \"goto [?= $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)]\", \"$r19 = \"[]\"\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)\", \"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r7.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r18)\"],\"checkResource.4\":[\"if $z0 == 0 goto r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":null,\"checkResource.7\":[\"if r3 == null goto return 0\"],\"checkResource.11\":[\"r5 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r5)\"],\"isResourceUnderLocation.9\":[\"$r17 = interfaceinvoke r1.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"r20 = virtualinvoke $r17.<java.net.URL: java.lang.String toExternalForm()>()\", \"$r18 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r19 = virtualinvoke $r18.<java.net.URL: java.lang.String toString()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r19)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.17\":[\"$r14 = (org.springframework.core.io.ClassPathResource) r1\", \"r20 = virtualinvoke $r14.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"$r15 = (org.springframework.core.io.ClassPathResource) r2\", \"$r16 = virtualinvoke $r15.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r16)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.25\":[\"$r11 = (org.springframework.web.context.support.ServletContextResource) r1\", \"r20 = virtualinvoke $r11.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"$r12 = (org.springframework.web.context.support.ServletContextResource) r2\", \"$r13 = virtualinvoke $r12.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r13)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.32\":[\"r20 = virtualinvoke $r5.<java.net.URL: java.lang.String getPath()>()\"],\"isResourceUnderLocation.35\":[\"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r7)\", \"$z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)\", \"if $z7 == 0 goto $z3 = virtualinvoke r21.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\"],\"isResourceUnderLocation.39\":[\"$z3 = virtualinvoke r21.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\", \"if $z3 != 0 goto $r22 = r21\", \"$z6 = virtualinvoke r21.<java.lang.String: boolean isEmpty()>()\", \"if $z6 == 0 goto $r8 = new java.lang.StringBuilder\", \"$r22 = r21\", \"goto [?= $z4 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>($r22)]\", \"$r8 = new java.lang.StringBuilder\", \"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r22 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$z4 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>($r22)\", \"if $z4 == 0 goto $z8 = 0\", \"$z5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isInvalidEncodedPath(java.lang.String)>(r20)\", \"if $z5 != 0 goto $z8 = 0\", \"$z8 = 1\", \"goto [?= return $z8]\", \"$z8 = 0\", \"return $z8\"],\"encodeIfNecessary\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.lang.String encodeIfNecessary(java.lang.String,javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>\",\"shouldEncodeRelativePath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean shouldEncodeRelativePath(org.springframework.core.io.Resource)>\",\"isInvalidEncodedPath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean isInvalidEncodedPath(java.lang.String)>\",\"getResource\":null},\"rhs\" : {\"locationCharsets\":null,\"urlPathHelper\":null,\"<init>.2\":null,\"setLocationCharsets\":null,\"getLocationCharsets\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r2, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r1, r2)\",\"getResource\":null,\"getResource.9\":[\"if $z2 == 0 goto $r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"$r6 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r5 = new java.lang.StringBuilder\", \"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()\", \"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r10 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)\", \"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r13 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)\", \"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"$r16 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16)\", \"$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r6.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r19)\"],\"checkResource.4\":[\"if $z0 == 0 goto $r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":[\"$r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"if $r5 == null goto return 0\"],\"checkResource.7\":null,\"checkResource.11\":[\"r4 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r4)\"],\"isResourceUnderLocation.9\":[\"$r24 = interfaceinvoke r1.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"r27 = virtualinvoke $r24.<java.net.URL: java.lang.String toExternalForm()>()\", \"$r25 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r26 = virtualinvoke $r25.<java.net.URL: java.lang.String toString()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r26)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.17\":[\"$r21 = (org.springframework.core.io.ClassPathResource) r1\", \"r27 = virtualinvoke $r21.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"$r22 = (org.springframework.core.io.ClassPathResource) r2\", \"$r23 = virtualinvoke $r22.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r23)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.25\":[\"$r18 = (org.springframework.web.context.support.ServletContextResource) r1\", \"r27 = virtualinvoke $r18.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"$r19 = (org.springframework.web.context.support.ServletContextResource) r2\", \"$r20 = virtualinvoke $r19.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r20)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.32\":[\"r27 = virtualinvoke $r5.<java.net.URL: java.lang.String getPath()>()\"],\"isResourceUnderLocation.35\":[\"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r7)\", \"$z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)\", \"if $z9 == 0 goto $z3 = virtualinvoke r28.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\"],\"isResourceUnderLocation.39\":[\"$z3 = virtualinvoke r28.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\", \"if $z3 != 0 goto $r29 = r28\", \"$z8 = virtualinvoke r28.<java.lang.String: boolean isEmpty()>()\", \"if $z8 == 0 goto $r15 = new java.lang.StringBuilder\", \"$r29 = r28\", \"goto [?= $z4 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>($r29)]\", \"$r15 = new java.lang.StringBuilder\", \"specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28)\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r29 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$z4 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>($r29)\", \"if $z4 != 0 goto $z5 = virtualinvoke r27.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"return 0\", \"$z5 = virtualinvoke r27.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z5 == 0 goto return 1\", \"$r8 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r27, \"UTF-8\")\", \"$z6 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"../\")\", \"if $z6 == 0 goto return 1\", \"$r9 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z7 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z7 == 0 goto return 0\", \"$r11 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r10 = new java.lang.StringBuilder\", \"specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resolved resource path contains \\\"../\\\" after decoding: \")\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27)\", \"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r11.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r14)\", \"return 0\", \"return 1\"],\"encodeIfNecessary\":null,\"shouldEncodeRelativePath\":null,\"isInvalidEncodedPath\":null,\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>\"}}",
            "contained": true,
            "commit": "695bf2961feffd35b5560ccc982a2189dcca611",
            "ref_file": "/data4/test_compare_script/695bf2961feffd35b5560ccc982a2189dcca611/org/springframework/web/servlet/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/servlet/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.PathResourceResolver",
            "diff": "{\"lhs\" : {\"locationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"<init>.2\":[\"$r1 = new java.util.HashMap\", \"specialinvoke $r1.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets> = $r1\"],\"setLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>\",\"getLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map getLocationCharsets()>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r2, r1, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r1, null, r2)\",\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>\",\"getResource.9\":[\"if $z2 == 0 goto $r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"r4 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r7 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r6 = new java.lang.StringBuilder\", \"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r11 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r14 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"if r4 == null goto $r19 = \"[]\"\", \"$r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4)\", \"goto [?= $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)]\", \"$r19 = \"[]\"\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)\", \"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r7.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r18)\"],\"checkResource.4\":[\"if $z0 == 0 goto r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":null,\"checkResource.7\":[\"if r3 == null goto return 0\"],\"checkResource.11\":[\"r5 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r5)\"],\"encodeIfNecessary\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.lang.String encodeIfNecessary(java.lang.String,javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>\",\"shouldEncodeRelativePath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean shouldEncodeRelativePath(org.springframework.core.io.Resource)>\",\"getResource\":null},\"rhs\" : {\"locationCharsets\":null,\"urlPathHelper\":null,\"<init>.2\":null,\"setLocationCharsets\":null,\"getLocationCharsets\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r2, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r1, r2)\",\"getResource\":null,\"getResource.9\":[\"if $z2 == 0 goto $r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"$r6 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r5 = new java.lang.StringBuilder\", \"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()\", \"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r10 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)\", \"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r13 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)\", \"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"$r16 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16)\", \"$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r6.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r19)\"],\"checkResource.4\":[\"if $z0 == 0 goto $r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":[\"$r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"if $r5 == null goto return 0\"],\"checkResource.7\":null,\"checkResource.11\":[\"r4 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r4)\"],\"encodeIfNecessary\":null,\"shouldEncodeRelativePath\":null,\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>\"}}",
            "contained": true,
            "commit": "91b803a2310344d925e5d4b1709bbcea9037554",
            "ref_file": "/data4/test_compare_script/91b803a2310344d925e5d4b1709bbcea9037554/org/springframework/web/servlet/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/servlet/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.PathResourceResolver",
            "diff": "{\"lhs\" : {\"locationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"<init>.2\":[\"$r1 = new java.util.HashMap\", \"specialinvoke $r1.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets> = $r1\"],\"setLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>\",\"getLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map getLocationCharsets()>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r2, r1, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r1, null, r2)\",\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>\",\"getResource.9\":[\"if $z2 == 0 goto $r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"r4 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r7 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r6 = new java.lang.StringBuilder\", \"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r11 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r14 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"if r4 == null goto $r19 = \"[]\"\", \"$r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4)\", \"goto [?= $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)]\", \"$r19 = \"[]\"\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)\", \"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r7.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r18)\"],\"checkResource.4\":[\"if $z0 == 0 goto r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":null,\"checkResource.7\":[\"if r3 == null goto return 0\"],\"checkResource.11\":[\"r5 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r5)\"],\"isResourceUnderLocation.9\":[\"$r17 = interfaceinvoke r1.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"r20 = virtualinvoke $r17.<java.net.URL: java.lang.String toExternalForm()>()\", \"$r18 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r19 = virtualinvoke $r18.<java.net.URL: java.lang.String toString()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r19)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.17\":[\"$r14 = (org.springframework.core.io.ClassPathResource) r1\", \"r20 = virtualinvoke $r14.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"$r15 = (org.springframework.core.io.ClassPathResource) r2\", \"$r16 = virtualinvoke $r15.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r16)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.25\":[\"$r11 = (org.springframework.web.context.support.ServletContextResource) r1\", \"r20 = virtualinvoke $r11.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"$r12 = (org.springframework.web.context.support.ServletContextResource) r2\", \"$r13 = virtualinvoke $r12.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r13)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.32\":[\"r20 = virtualinvoke $r5.<java.net.URL: java.lang.String getPath()>()\"],\"isResourceUnderLocation.35\":[\"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r7)\", \"$z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)\", \"if $z7 == 0 goto $z3 = virtualinvoke r21.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\"],\"isResourceUnderLocation.39\":[\"$z3 = virtualinvoke r21.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\", \"if $z3 != 0 goto $r22 = r21\", \"$z6 = virtualinvoke r21.<java.lang.String: boolean isEmpty()>()\", \"if $z6 == 0 goto $r8 = new java.lang.StringBuilder\", \"$r22 = r21\", \"goto [?= $z4 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>($r22)]\", \"$r8 = new java.lang.StringBuilder\", \"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r22 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$z4 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>($r22)\", \"if $z4 == 0 goto $z8 = 0\", \"$z5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isInvalidEncodedPath(java.lang.String)>(r20)\", \"if $z5 != 0 goto $z8 = 0\", \"$z8 = 1\", \"goto [?= return $z8]\", \"$z8 = 0\", \"return $z8\"],\"encodeIfNecessary\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.lang.String encodeIfNecessary(java.lang.String,javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>\",\"shouldEncodeRelativePath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean shouldEncodeRelativePath(org.springframework.core.io.Resource)>\",\"isInvalidEncodedPath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean isInvalidEncodedPath(java.lang.String)>\",\"getResource\":null},\"rhs\" : {\"locationCharsets\":null,\"urlPathHelper\":null,\"<init>.2\":null,\"setLocationCharsets\":null,\"getLocationCharsets\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r2, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r1, r2)\",\"getResource\":null,\"getResource.9\":[\"if $z2 == 0 goto $r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"$r6 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r5 = new java.lang.StringBuilder\", \"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()\", \"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r10 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)\", \"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r13 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)\", \"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"$r16 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16)\", \"$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r6.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r19)\"],\"checkResource.4\":[\"if $z0 == 0 goto $r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":[\"$r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"if $r5 == null goto return 0\"],\"checkResource.7\":null,\"checkResource.11\":[\"r4 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r4)\"],\"isResourceUnderLocation.9\":[\"$r24 = interfaceinvoke r1.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"r27 = virtualinvoke $r24.<java.net.URL: java.lang.String toExternalForm()>()\", \"$r25 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r26 = virtualinvoke $r25.<java.net.URL: java.lang.String toString()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r26)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.17\":[\"$r21 = (org.springframework.core.io.ClassPathResource) r1\", \"r27 = virtualinvoke $r21.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"$r22 = (org.springframework.core.io.ClassPathResource) r2\", \"$r23 = virtualinvoke $r22.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r23)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.25\":[\"$r18 = (org.springframework.web.context.support.ServletContextResource) r1\", \"r27 = virtualinvoke $r18.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"$r19 = (org.springframework.web.context.support.ServletContextResource) r2\", \"$r20 = virtualinvoke $r19.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r20)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.32\":[\"r27 = virtualinvoke $r5.<java.net.URL: java.lang.String getPath()>()\"],\"isResourceUnderLocation.35\":[\"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r7)\", \"$z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)\", \"if $z9 == 0 goto $z3 = virtualinvoke r28.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\"],\"isResourceUnderLocation.39\":[\"$z3 = virtualinvoke r28.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\", \"if $z3 != 0 goto $r29 = r28\", \"$z8 = virtualinvoke r28.<java.lang.String: boolean isEmpty()>()\", \"if $z8 == 0 goto $r15 = new java.lang.StringBuilder\", \"$r29 = r28\", \"goto [?= $z4 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>($r29)]\", \"$r15 = new java.lang.StringBuilder\", \"specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28)\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r29 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$z4 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>($r29)\", \"if $z4 != 0 goto $z5 = virtualinvoke r27.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"return 0\", \"$z5 = virtualinvoke r27.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z5 == 0 goto return 1\", \"$r8 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r27, \"UTF-8\")\", \"$z6 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"../\")\", \"if $z6 == 0 goto return 1\", \"$r9 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z7 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z7 == 0 goto return 0\", \"$r11 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r10 = new java.lang.StringBuilder\", \"specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resolved resource path contains \\\"../\\\" after decoding: \")\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27)\", \"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r11.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r14)\", \"return 0\", \"return 1\"],\"encodeIfNecessary\":null,\"shouldEncodeRelativePath\":null,\"isInvalidEncodedPath\":null,\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>\"}}",
            "contained": true,
            "commit": "98ad23bef8e2e04143f8f5b201380543a8d8c0c",
            "ref_file": "/data4/test_compare_script/98ad23bef8e2e04143f8f5b201380543a8d8c0c/org/springframework/web/servlet/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/servlet/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.PathResourceResolver",
            "diff": "{\"lhs\" : {\"locationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"<init>.2\":[\"$r1 = new java.util.HashMap\", \"specialinvoke $r1.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets> = $r1\"],\"setLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>\",\"getLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map getLocationCharsets()>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r2, r1, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r1, null, r2)\",\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>\",\"getResource.9\":[\"if $z2 == 0 goto $r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"r4 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r7 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r6 = new java.lang.StringBuilder\", \"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r11 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r14 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"if r4 == null goto $r19 = \"[]\"\", \"$r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4)\", \"goto [?= $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)]\", \"$r19 = \"[]\"\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)\", \"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r7.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r18)\"],\"checkResource.4\":[\"if $z0 == 0 goto r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":null,\"checkResource.7\":[\"if r3 == null goto return 0\"],\"checkResource.11\":[\"r5 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r5)\"],\"encodeIfNecessary\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.lang.String encodeIfNecessary(java.lang.String,javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>\",\"shouldEncodeRelativePath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean shouldEncodeRelativePath(org.springframework.core.io.Resource)>\",\"getResource\":null},\"rhs\" : {\"locationCharsets\":null,\"urlPathHelper\":null,\"<init>.2\":null,\"setLocationCharsets\":null,\"getLocationCharsets\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r2, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r1, r2)\",\"getResource\":null,\"getResource.9\":[\"if $z2 == 0 goto $r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"$r6 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r5 = new java.lang.StringBuilder\", \"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()\", \"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r10 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)\", \"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r13 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)\", \"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"$r16 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16)\", \"$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r6.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r19)\"],\"checkResource.4\":[\"if $z0 == 0 goto $r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":[\"$r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"if $r5 == null goto return 0\"],\"checkResource.7\":null,\"checkResource.11\":[\"r4 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r4)\"],\"encodeIfNecessary\":null,\"shouldEncodeRelativePath\":null,\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>\"}}",
            "contained": true,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/servlet/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.PathResourceResolver",
            "diff": "{\"lhs\" : {\"locationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"<init>.2\":[\"$r1 = new java.util.HashMap\", \"specialinvoke $r1.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets> = $r1\"],\"setLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>\",\"getLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map getLocationCharsets()>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r2, r1, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r1, null, r2)\",\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>\",\"getResource.9\":[\"if $z2 == 0 goto $r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"r4 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r7 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r6 = new java.lang.StringBuilder\", \"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r11 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r14 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"if r4 == null goto $r19 = \"[]\"\", \"$r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4)\", \"goto [?= $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)]\", \"$r19 = \"[]\"\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)\", \"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r7.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r18)\"],\"checkResource.4\":[\"if $z0 == 0 goto r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":null,\"checkResource.7\":[\"if r3 == null goto return 0\"],\"checkResource.11\":[\"r5 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r5)\"],\"isResourceUnderLocation.9\":[\"$r17 = interfaceinvoke r1.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"r20 = virtualinvoke $r17.<java.net.URL: java.lang.String toExternalForm()>()\", \"$r18 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r19 = virtualinvoke $r18.<java.net.URL: java.lang.String toString()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r19)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.17\":[\"$r14 = (org.springframework.core.io.ClassPathResource) r1\", \"r20 = virtualinvoke $r14.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"$r15 = (org.springframework.core.io.ClassPathResource) r2\", \"$r16 = virtualinvoke $r15.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r16)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.25\":[\"$r11 = (org.springframework.web.context.support.ServletContextResource) r1\", \"r20 = virtualinvoke $r11.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"$r12 = (org.springframework.web.context.support.ServletContextResource) r2\", \"$r13 = virtualinvoke $r12.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r13)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.32\":[\"r20 = virtualinvoke $r5.<java.net.URL: java.lang.String getPath()>()\"],\"isResourceUnderLocation.35\":[\"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r7)\", \"$z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)\", \"if $z7 == 0 goto $z3 = virtualinvoke r21.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\"],\"isResourceUnderLocation.39\":[\"$z3 = virtualinvoke r21.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\", \"if $z3 != 0 goto $r22 = r21\", \"$z6 = virtualinvoke r21.<java.lang.String: boolean isEmpty()>()\", \"if $z6 == 0 goto $r8 = new java.lang.StringBuilder\", \"$r22 = r21\", \"goto [?= $z4 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>($r22)]\", \"$r8 = new java.lang.StringBuilder\", \"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r22 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$z4 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>($r22)\", \"if $z4 == 0 goto $z8 = 0\", \"$z5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isInvalidEncodedPath(java.lang.String)>(r20)\", \"if $z5 != 0 goto $z8 = 0\", \"$z8 = 1\", \"goto [?= return $z8]\", \"$z8 = 0\", \"return $z8\"],\"encodeIfNecessary\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.lang.String encodeIfNecessary(java.lang.String,javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>\",\"shouldEncodeRelativePath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean shouldEncodeRelativePath(org.springframework.core.io.Resource)>\",\"isInvalidEncodedPath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean isInvalidEncodedPath(java.lang.String)>\",\"getResource\":null},\"rhs\" : {\"locationCharsets\":null,\"urlPathHelper\":null,\"<init>.2\":null,\"setLocationCharsets\":null,\"getLocationCharsets\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r2, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r1, r2)\",\"getResource\":null,\"getResource.9\":[\"if $z2 == 0 goto $r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"$r6 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r5 = new java.lang.StringBuilder\", \"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()\", \"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r10 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)\", \"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r13 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)\", \"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"$r16 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16)\", \"$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r6.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r19)\"],\"checkResource.4\":[\"if $z0 == 0 goto $r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":[\"$r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"if $r5 == null goto return 0\"],\"checkResource.7\":null,\"checkResource.11\":[\"r4 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r4)\"],\"isResourceUnderLocation.9\":[\"$r24 = interfaceinvoke r1.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"r27 = virtualinvoke $r24.<java.net.URL: java.lang.String toExternalForm()>()\", \"$r25 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r26 = virtualinvoke $r25.<java.net.URL: java.lang.String toString()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r26)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.17\":[\"$r21 = (org.springframework.core.io.ClassPathResource) r1\", \"r27 = virtualinvoke $r21.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"$r22 = (org.springframework.core.io.ClassPathResource) r2\", \"$r23 = virtualinvoke $r22.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r23)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.25\":[\"$r18 = (org.springframework.web.context.support.ServletContextResource) r1\", \"r27 = virtualinvoke $r18.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"$r19 = (org.springframework.web.context.support.ServletContextResource) r2\", \"$r20 = virtualinvoke $r19.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r20)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.32\":[\"r27 = virtualinvoke $r5.<java.net.URL: java.lang.String getPath()>()\"],\"isResourceUnderLocation.35\":[\"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r7)\", \"$z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)\", \"if $z9 == 0 goto $z3 = virtualinvoke r28.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\"],\"isResourceUnderLocation.39\":[\"$z3 = virtualinvoke r28.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\", \"if $z3 != 0 goto $r29 = r28\", \"$z8 = virtualinvoke r28.<java.lang.String: boolean isEmpty()>()\", \"if $z8 == 0 goto $r15 = new java.lang.StringBuilder\", \"$r29 = r28\", \"goto [?= $z4 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>($r29)]\", \"$r15 = new java.lang.StringBuilder\", \"specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28)\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r29 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$z4 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>($r29)\", \"if $z4 != 0 goto $z5 = virtualinvoke r27.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"return 0\", \"$z5 = virtualinvoke r27.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z5 == 0 goto return 1\", \"$r8 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r27, \"UTF-8\")\", \"$z6 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"../\")\", \"if $z6 == 0 goto return 1\", \"$r9 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z7 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z7 == 0 goto return 0\", \"$r11 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r10 = new java.lang.StringBuilder\", \"specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resolved resource path contains \\\"../\\\" after decoding: \")\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27)\", \"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r11.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r14)\", \"return 0\", \"return 1\"],\"encodeIfNecessary\":null,\"shouldEncodeRelativePath\":null,\"isInvalidEncodedPath\":null,\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>\"}}",
            "contained": true,
            "commit": "f59ea610dfcf55cd0b42f6dd76a9b3dab0218aa",
            "ref_file": "/data4/test_compare_script/f59ea610dfcf55cd0b42f6dd76a9b3dab0218aa/org/springframework/web/servlet/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/servlet/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.PathResourceResolver.getResource(String,Resource)",
            "diff": "{\"lhs\" : {\"9\":[\"if $z2 == 0 goto $r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"11\":[\"$r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"14\":[\"r4 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r7 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r6 = new java.lang.StringBuilder\", \"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r11 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r14 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"if r4 == null goto $r19 = \"[]\"\", \"$r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4)\", \"goto [?= $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)]\", \"$r19 = \"[]\"\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)\", \"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r7.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r18)\"]},\"rhs\" : {\"9\":[\"if $z2 == 0 goto $r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"11\":[\"$r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"14\":[\"$r6 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r5 = new java.lang.StringBuilder\", \"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()\", \"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r10 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)\", \"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r13 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)\", \"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"$r16 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16)\", \"$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r6.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r19)\"]}}",
            "contained": true,
            "commit": "695bf2961feffd35b5560ccc982a2189dcca611",
            "ref_file": "/data4/test_compare_script/695bf2961feffd35b5560ccc982a2189dcca611/org/springframework/web/servlet/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/servlet/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.PathResourceResolver.isInvalidEncodedPath(String)",
            "diff": "{\"lhs\" : {\"locationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"<init>.2\":[\"$r1 = new java.util.HashMap\", \"specialinvoke $r1.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets> = $r1\"],\"setLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>\",\"getLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map getLocationCharsets()>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r2, r1, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r1, null, r2)\",\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>\",\"getResource.9\":[\"if $z2 == 0 goto $r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"r4 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r7 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r6 = new java.lang.StringBuilder\", \"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r11 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r14 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"if r4 == null goto $r19 = \"[]\"\", \"$r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4)\", \"goto [?= $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)]\", \"$r19 = \"[]\"\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)\", \"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r7.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r18)\"],\"checkResource.4\":[\"if $z0 == 0 goto r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":null,\"checkResource.7\":[\"if r3 == null goto return 0\"],\"checkResource.11\":[\"r5 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r5)\"],\"isResourceUnderLocation.9\":[\"$r17 = interfaceinvoke r1.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"r20 = virtualinvoke $r17.<java.net.URL: java.lang.String toExternalForm()>()\", \"$r18 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r19 = virtualinvoke $r18.<java.net.URL: java.lang.String toString()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r19)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.17\":[\"$r14 = (org.springframework.core.io.ClassPathResource) r1\", \"r20 = virtualinvoke $r14.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"$r15 = (org.springframework.core.io.ClassPathResource) r2\", \"$r16 = virtualinvoke $r15.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r16)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.25\":[\"$r11 = (org.springframework.web.context.support.ServletContextResource) r1\", \"r20 = virtualinvoke $r11.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"$r12 = (org.springframework.web.context.support.ServletContextResource) r2\", \"$r13 = virtualinvoke $r12.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r13)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.32\":[\"r20 = virtualinvoke $r5.<java.net.URL: java.lang.String getPath()>()\"],\"isResourceUnderLocation.35\":[\"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r7)\", \"$z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)\", \"if $z7 == 0 goto $z3 = virtualinvoke r21.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\"],\"isResourceUnderLocation.39\":[\"$z3 = virtualinvoke r21.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\", \"if $z3 != 0 goto $r22 = r21\", \"$z6 = virtualinvoke r21.<java.lang.String: boolean isEmpty()>()\", \"if $z6 == 0 goto $r8 = new java.lang.StringBuilder\", \"$r22 = r21\", \"goto [?= $z4 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>($r22)]\", \"$r8 = new java.lang.StringBuilder\", \"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r22 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$z4 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>($r22)\", \"if $z4 == 0 goto $z8 = 0\", \"$z5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isInvalidEncodedPath(java.lang.String)>(r20)\", \"if $z5 != 0 goto $z8 = 0\", \"$z8 = 1\", \"goto [?= return $z8]\", \"$z8 = 0\", \"return $z8\"],\"encodeIfNecessary\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.lang.String encodeIfNecessary(java.lang.String,javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>\",\"shouldEncodeRelativePath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean shouldEncodeRelativePath(org.springframework.core.io.Resource)>\",\"isInvalidEncodedPath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean isInvalidEncodedPath(java.lang.String)>\",\"getResource\":null},\"rhs\" : {\"locationCharsets\":null,\"urlPathHelper\":null,\"<init>.2\":null,\"setLocationCharsets\":null,\"getLocationCharsets\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r2, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r1, r2)\",\"getResource\":null,\"getResource.9\":[\"if $z2 == 0 goto $r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"$r6 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r5 = new java.lang.StringBuilder\", \"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()\", \"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r10 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)\", \"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r13 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)\", \"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"$r16 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16)\", \"$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r6.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r19)\"],\"checkResource.4\":[\"if $z0 == 0 goto $r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":[\"$r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"if $r5 == null goto return 0\"],\"checkResource.7\":null,\"checkResource.11\":[\"r4 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r4)\"],\"isResourceUnderLocation.9\":[\"$r24 = interfaceinvoke r1.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"r27 = virtualinvoke $r24.<java.net.URL: java.lang.String toExternalForm()>()\", \"$r25 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r26 = virtualinvoke $r25.<java.net.URL: java.lang.String toString()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r26)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.17\":[\"$r21 = (org.springframework.core.io.ClassPathResource) r1\", \"r27 = virtualinvoke $r21.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"$r22 = (org.springframework.core.io.ClassPathResource) r2\", \"$r23 = virtualinvoke $r22.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r23)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.25\":[\"$r18 = (org.springframework.web.context.support.ServletContextResource) r1\", \"r27 = virtualinvoke $r18.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"$r19 = (org.springframework.web.context.support.ServletContextResource) r2\", \"$r20 = virtualinvoke $r19.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r20)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.32\":[\"r27 = virtualinvoke $r5.<java.net.URL: java.lang.String getPath()>()\"],\"isResourceUnderLocation.35\":[\"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r7)\", \"$z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)\", \"if $z9 == 0 goto $z3 = virtualinvoke r28.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\"],\"isResourceUnderLocation.39\":[\"$z3 = virtualinvoke r28.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\", \"if $z3 != 0 goto $r29 = r28\", \"$z8 = virtualinvoke r28.<java.lang.String: boolean isEmpty()>()\", \"if $z8 == 0 goto $r15 = new java.lang.StringBuilder\", \"$r29 = r28\", \"goto [?= $z4 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>($r29)]\", \"$r15 = new java.lang.StringBuilder\", \"specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28)\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r29 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$z4 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>($r29)\", \"if $z4 != 0 goto $z5 = virtualinvoke r27.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"return 0\", \"$z5 = virtualinvoke r27.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z5 == 0 goto return 1\", \"$r8 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r27, \"UTF-8\")\", \"$z6 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"../\")\", \"if $z6 == 0 goto return 1\", \"$r9 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z7 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z7 == 0 goto return 0\", \"$r11 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r10 = new java.lang.StringBuilder\", \"specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resolved resource path contains \\\"../\\\" after decoding: \")\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27)\", \"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r11.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r14)\", \"return 0\", \"return 1\"],\"encodeIfNecessary\":null,\"shouldEncodeRelativePath\":null,\"isInvalidEncodedPath\":null,\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>\"}}",
            "contained": true,
            "commit": "695bf2961feffd35b5560ccc982a2189dcca611",
            "ref_file": "/data4/test_compare_script/695bf2961feffd35b5560ccc982a2189dcca611/org/springframework/web/servlet/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/servlet/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.PathResourceResolver.isInvalidEncodedPath(String)",
            "diff": "{\"lhs\" : {\"locationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"<init>.2\":[\"$r1 = new java.util.HashMap\", \"specialinvoke $r1.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets> = $r1\"],\"setLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>\",\"getLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map getLocationCharsets()>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r2, r1, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r1, null, r2)\",\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>\",\"getResource.9\":[\"if $z2 == 0 goto $r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"r4 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r7 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r6 = new java.lang.StringBuilder\", \"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r11 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r14 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"if r4 == null goto $r19 = \"[]\"\", \"$r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4)\", \"goto [?= $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)]\", \"$r19 = \"[]\"\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)\", \"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r7.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r18)\"],\"checkResource.4\":[\"if $z0 == 0 goto r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":null,\"checkResource.7\":[\"if r3 == null goto return 0\"],\"checkResource.11\":[\"r5 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r5)\"],\"encodeIfNecessary\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.lang.String encodeIfNecessary(java.lang.String,javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>\",\"shouldEncodeRelativePath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean shouldEncodeRelativePath(org.springframework.core.io.Resource)>\",\"getResource\":null},\"rhs\" : {\"locationCharsets\":null,\"urlPathHelper\":null,\"<init>.2\":null,\"setLocationCharsets\":null,\"getLocationCharsets\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r2, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r1, r2)\",\"getResource\":null,\"getResource.9\":[\"if $z2 == 0 goto $r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"$r6 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r5 = new java.lang.StringBuilder\", \"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()\", \"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r10 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)\", \"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r13 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)\", \"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"$r16 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16)\", \"$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r6.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r19)\"],\"checkResource.4\":[\"if $z0 == 0 goto $r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":[\"$r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"if $r5 == null goto return 0\"],\"checkResource.7\":null,\"checkResource.11\":[\"r4 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r4)\"],\"encodeIfNecessary\":null,\"shouldEncodeRelativePath\":null,\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>\"}}",
            "contained": true,
            "commit": "91b803a2310344d925e5d4b1709bbcea9037554",
            "ref_file": "/data4/test_compare_script/91b803a2310344d925e5d4b1709bbcea9037554/org/springframework/web/servlet/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/servlet/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.PathResourceResolver.isInvalidEncodedPath(String)",
            "diff": "{\"lhs\" : {\"locationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"<init>.2\":[\"$r1 = new java.util.HashMap\", \"specialinvoke $r1.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets> = $r1\"],\"setLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>\",\"getLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map getLocationCharsets()>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r2, r1, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r1, null, r2)\",\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>\",\"getResource.9\":[\"if $z2 == 0 goto $r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"r4 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r7 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r6 = new java.lang.StringBuilder\", \"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r11 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r14 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"if r4 == null goto $r19 = \"[]\"\", \"$r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4)\", \"goto [?= $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)]\", \"$r19 = \"[]\"\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)\", \"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r7.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r18)\"],\"checkResource.4\":[\"if $z0 == 0 goto r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":null,\"checkResource.7\":[\"if r3 == null goto return 0\"],\"checkResource.11\":[\"r5 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r5)\"],\"isResourceUnderLocation.9\":[\"$r17 = interfaceinvoke r1.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"r20 = virtualinvoke $r17.<java.net.URL: java.lang.String toExternalForm()>()\", \"$r18 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r19 = virtualinvoke $r18.<java.net.URL: java.lang.String toString()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r19)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.17\":[\"$r14 = (org.springframework.core.io.ClassPathResource) r1\", \"r20 = virtualinvoke $r14.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"$r15 = (org.springframework.core.io.ClassPathResource) r2\", \"$r16 = virtualinvoke $r15.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r16)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.25\":[\"$r11 = (org.springframework.web.context.support.ServletContextResource) r1\", \"r20 = virtualinvoke $r11.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"$r12 = (org.springframework.web.context.support.ServletContextResource) r2\", \"$r13 = virtualinvoke $r12.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r13)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.32\":[\"r20 = virtualinvoke $r5.<java.net.URL: java.lang.String getPath()>()\"],\"isResourceUnderLocation.35\":[\"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r7)\", \"$z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)\", \"if $z7 == 0 goto $z3 = virtualinvoke r21.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\"],\"isResourceUnderLocation.39\":[\"$z3 = virtualinvoke r21.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\", \"if $z3 != 0 goto $r22 = r21\", \"$z6 = virtualinvoke r21.<java.lang.String: boolean isEmpty()>()\", \"if $z6 == 0 goto $r8 = new java.lang.StringBuilder\", \"$r22 = r21\", \"goto [?= $z4 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>($r22)]\", \"$r8 = new java.lang.StringBuilder\", \"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r22 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$z4 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>($r22)\", \"if $z4 == 0 goto $z8 = 0\", \"$z5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isInvalidEncodedPath(java.lang.String)>(r20)\", \"if $z5 != 0 goto $z8 = 0\", \"$z8 = 1\", \"goto [?= return $z8]\", \"$z8 = 0\", \"return $z8\"],\"encodeIfNecessary\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.lang.String encodeIfNecessary(java.lang.String,javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>\",\"shouldEncodeRelativePath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean shouldEncodeRelativePath(org.springframework.core.io.Resource)>\",\"isInvalidEncodedPath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean isInvalidEncodedPath(java.lang.String)>\",\"getResource\":null},\"rhs\" : {\"locationCharsets\":null,\"urlPathHelper\":null,\"<init>.2\":null,\"setLocationCharsets\":null,\"getLocationCharsets\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r2, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r1, r2)\",\"getResource\":null,\"getResource.9\":[\"if $z2 == 0 goto $r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"$r6 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r5 = new java.lang.StringBuilder\", \"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()\", \"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r10 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)\", \"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r13 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)\", \"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"$r16 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16)\", \"$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r6.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r19)\"],\"checkResource.4\":[\"if $z0 == 0 goto $r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":[\"$r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"if $r5 == null goto return 0\"],\"checkResource.7\":null,\"checkResource.11\":[\"r4 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r4)\"],\"isResourceUnderLocation.9\":[\"$r24 = interfaceinvoke r1.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"r27 = virtualinvoke $r24.<java.net.URL: java.lang.String toExternalForm()>()\", \"$r25 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r26 = virtualinvoke $r25.<java.net.URL: java.lang.String toString()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r26)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.17\":[\"$r21 = (org.springframework.core.io.ClassPathResource) r1\", \"r27 = virtualinvoke $r21.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"$r22 = (org.springframework.core.io.ClassPathResource) r2\", \"$r23 = virtualinvoke $r22.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r23)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.25\":[\"$r18 = (org.springframework.web.context.support.ServletContextResource) r1\", \"r27 = virtualinvoke $r18.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"$r19 = (org.springframework.web.context.support.ServletContextResource) r2\", \"$r20 = virtualinvoke $r19.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r20)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.32\":[\"r27 = virtualinvoke $r5.<java.net.URL: java.lang.String getPath()>()\"],\"isResourceUnderLocation.35\":[\"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r7)\", \"$z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)\", \"if $z9 == 0 goto $z3 = virtualinvoke r28.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\"],\"isResourceUnderLocation.39\":[\"$z3 = virtualinvoke r28.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\", \"if $z3 != 0 goto $r29 = r28\", \"$z8 = virtualinvoke r28.<java.lang.String: boolean isEmpty()>()\", \"if $z8 == 0 goto $r15 = new java.lang.StringBuilder\", \"$r29 = r28\", \"goto [?= $z4 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>($r29)]\", \"$r15 = new java.lang.StringBuilder\", \"specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28)\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r29 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$z4 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>($r29)\", \"if $z4 != 0 goto $z5 = virtualinvoke r27.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"return 0\", \"$z5 = virtualinvoke r27.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z5 == 0 goto return 1\", \"$r8 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r27, \"UTF-8\")\", \"$z6 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"../\")\", \"if $z6 == 0 goto return 1\", \"$r9 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z7 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z7 == 0 goto return 0\", \"$r11 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r10 = new java.lang.StringBuilder\", \"specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resolved resource path contains \\\"../\\\" after decoding: \")\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27)\", \"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r11.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r14)\", \"return 0\", \"return 1\"],\"encodeIfNecessary\":null,\"shouldEncodeRelativePath\":null,\"isInvalidEncodedPath\":null,\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>\"}}",
            "contained": true,
            "commit": "98ad23bef8e2e04143f8f5b201380543a8d8c0c",
            "ref_file": "/data4/test_compare_script/98ad23bef8e2e04143f8f5b201380543a8d8c0c/org/springframework/web/servlet/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/servlet/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.PathResourceResolver.isInvalidEncodedPath(String)",
            "diff": "{\"lhs\" : {\"locationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"<init>.2\":[\"$r1 = new java.util.HashMap\", \"specialinvoke $r1.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets> = $r1\"],\"setLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>\",\"getLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map getLocationCharsets()>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r2, r1, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r1, null, r2)\",\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>\",\"getResource.9\":[\"if $z2 == 0 goto $r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"r4 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r7 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r6 = new java.lang.StringBuilder\", \"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r11 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r14 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"if r4 == null goto $r19 = \"[]\"\", \"$r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4)\", \"goto [?= $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)]\", \"$r19 = \"[]\"\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)\", \"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r7.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r18)\"],\"checkResource.4\":[\"if $z0 == 0 goto r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":null,\"checkResource.7\":[\"if r3 == null goto return 0\"],\"checkResource.11\":[\"r5 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r5)\"],\"encodeIfNecessary\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.lang.String encodeIfNecessary(java.lang.String,javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>\",\"shouldEncodeRelativePath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean shouldEncodeRelativePath(org.springframework.core.io.Resource)>\",\"getResource\":null},\"rhs\" : {\"locationCharsets\":null,\"urlPathHelper\":null,\"<init>.2\":null,\"setLocationCharsets\":null,\"getLocationCharsets\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r2, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r1, r2)\",\"getResource\":null,\"getResource.9\":[\"if $z2 == 0 goto $r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"$r6 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r5 = new java.lang.StringBuilder\", \"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()\", \"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r10 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)\", \"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r13 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)\", \"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"$r16 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16)\", \"$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r6.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r19)\"],\"checkResource.4\":[\"if $z0 == 0 goto $r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":[\"$r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"if $r5 == null goto return 0\"],\"checkResource.7\":null,\"checkResource.11\":[\"r4 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r4)\"],\"encodeIfNecessary\":null,\"shouldEncodeRelativePath\":null,\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>\"}}",
            "contained": true,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/servlet/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.PathResourceResolver.isInvalidEncodedPath(String)",
            "diff": "{\"lhs\" : {\"locationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"<init>.2\":[\"$r1 = new java.util.HashMap\", \"specialinvoke $r1.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets> = $r1\"],\"setLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>\",\"getLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map getLocationCharsets()>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r2, r1, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r1, null, r2)\",\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>\",\"getResource.9\":[\"if $z2 == 0 goto $r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"r4 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r7 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r6 = new java.lang.StringBuilder\", \"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r11 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r14 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"if r4 == null goto $r19 = \"[]\"\", \"$r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4)\", \"goto [?= $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)]\", \"$r19 = \"[]\"\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)\", \"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r7.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r18)\"],\"checkResource.4\":[\"if $z0 == 0 goto r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":null,\"checkResource.7\":[\"if r3 == null goto return 0\"],\"checkResource.11\":[\"r5 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r5)\"],\"isResourceUnderLocation.9\":[\"$r17 = interfaceinvoke r1.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"r20 = virtualinvoke $r17.<java.net.URL: java.lang.String toExternalForm()>()\", \"$r18 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r19 = virtualinvoke $r18.<java.net.URL: java.lang.String toString()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r19)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.17\":[\"$r14 = (org.springframework.core.io.ClassPathResource) r1\", \"r20 = virtualinvoke $r14.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"$r15 = (org.springframework.core.io.ClassPathResource) r2\", \"$r16 = virtualinvoke $r15.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r16)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.25\":[\"$r11 = (org.springframework.web.context.support.ServletContextResource) r1\", \"r20 = virtualinvoke $r11.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"$r12 = (org.springframework.web.context.support.ServletContextResource) r2\", \"$r13 = virtualinvoke $r12.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r13)\", \"goto [?= $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)]\"],\"isResourceUnderLocation.32\":[\"r20 = virtualinvoke $r5.<java.net.URL: java.lang.String getPath()>()\"],\"isResourceUnderLocation.35\":[\"r21 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r7)\", \"$z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>(r20)\", \"if $z7 == 0 goto $z3 = virtualinvoke r21.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\"],\"isResourceUnderLocation.39\":[\"$z3 = virtualinvoke r21.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\", \"if $z3 != 0 goto $r22 = r21\", \"$z6 = virtualinvoke r21.<java.lang.String: boolean isEmpty()>()\", \"if $z6 == 0 goto $r8 = new java.lang.StringBuilder\", \"$r22 = r21\", \"goto [?= $z4 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>($r22)]\", \"$r8 = new java.lang.StringBuilder\", \"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r22 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$z4 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>($r22)\", \"if $z4 == 0 goto $z8 = 0\", \"$z5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isInvalidEncodedPath(java.lang.String)>(r20)\", \"if $z5 != 0 goto $z8 = 0\", \"$z8 = 1\", \"goto [?= return $z8]\", \"$z8 = 0\", \"return $z8\"],\"encodeIfNecessary\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.lang.String encodeIfNecessary(java.lang.String,javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>\",\"shouldEncodeRelativePath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean shouldEncodeRelativePath(org.springframework.core.io.Resource)>\",\"isInvalidEncodedPath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean isInvalidEncodedPath(java.lang.String)>\",\"getResource\":null},\"rhs\" : {\"locationCharsets\":null,\"urlPathHelper\":null,\"<init>.2\":null,\"setLocationCharsets\":null,\"getLocationCharsets\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r2, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r1, r2)\",\"getResource\":null,\"getResource.9\":[\"if $z2 == 0 goto $r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"$r6 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r5 = new java.lang.StringBuilder\", \"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()\", \"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r10 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)\", \"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r13 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)\", \"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"$r16 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16)\", \"$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r6.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r19)\"],\"checkResource.4\":[\"if $z0 == 0 goto $r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":[\"$r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"if $r5 == null goto return 0\"],\"checkResource.7\":null,\"checkResource.11\":[\"r4 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r4)\"],\"isResourceUnderLocation.9\":[\"$r24 = interfaceinvoke r1.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"r27 = virtualinvoke $r24.<java.net.URL: java.lang.String toExternalForm()>()\", \"$r25 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r26 = virtualinvoke $r25.<java.net.URL: java.lang.String toString()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r26)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.17\":[\"$r21 = (org.springframework.core.io.ClassPathResource) r1\", \"r27 = virtualinvoke $r21.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"$r22 = (org.springframework.core.io.ClassPathResource) r2\", \"$r23 = virtualinvoke $r22.<org.springframework.core.io.ClassPathResource: java.lang.String getPath()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r23)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.25\":[\"$r18 = (org.springframework.web.context.support.ServletContextResource) r1\", \"r27 = virtualinvoke $r18.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"$r19 = (org.springframework.web.context.support.ServletContextResource) r2\", \"$r20 = virtualinvoke $r19.<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()>()\", \"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r20)\", \"goto [?= $z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)]\"],\"isResourceUnderLocation.32\":[\"r27 = virtualinvoke $r5.<java.net.URL: java.lang.String getPath()>()\"],\"isResourceUnderLocation.35\":[\"r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r7)\", \"$z9 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r27)\", \"if $z9 == 0 goto $z3 = virtualinvoke r28.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\"],\"isResourceUnderLocation.39\":[\"$z3 = virtualinvoke r28.<java.lang.String: boolean endsWith(java.lang.String)>(\"/\")\", \"if $z3 != 0 goto $r29 = r28\", \"$z8 = virtualinvoke r28.<java.lang.String: boolean isEmpty()>()\", \"if $z8 == 0 goto $r15 = new java.lang.StringBuilder\", \"$r29 = r28\", \"goto [?= $z4 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>($r29)]\", \"$r15 = new java.lang.StringBuilder\", \"specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28)\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r29 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$z4 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>($r29)\", \"if $z4 != 0 goto $z5 = virtualinvoke r27.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"return 0\", \"$z5 = virtualinvoke r27.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z5 == 0 goto return 1\", \"$r8 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r27, \"UTF-8\")\", \"$z6 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"../\")\", \"if $z6 == 0 goto return 1\", \"$r9 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z7 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z7 == 0 goto return 0\", \"$r11 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r10 = new java.lang.StringBuilder\", \"specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resolved resource path contains \\\"../\\\" after decoding: \")\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27)\", \"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r11.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r14)\", \"return 0\", \"return 1\"],\"encodeIfNecessary\":null,\"shouldEncodeRelativePath\":null,\"isInvalidEncodedPath\":null,\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>\"}}",
            "contained": true,
            "commit": "f59ea610dfcf55cd0b42f6dd76a9b3dab0218aa",
            "ref_file": "/data4/test_compare_script/f59ea610dfcf55cd0b42f6dd76a9b3dab0218aa/org/springframework/web/servlet/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/servlet/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.PathResourceResolver.isResourceUnderLocation(Resource,Resource)",
            "diff": "",
            "contained": true,
            "commit": "91b803a2310344d925e5d4b1709bbcea9037554",
            "ref_file": "/data4/test_compare_script/91b803a2310344d925e5d4b1709bbcea9037554/org/springframework/web/servlet/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/servlet/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.PathResourceResolver.isResourceUnderLocation(Resource,Resource)",
            "diff": "",
            "contained": true,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/servlet/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.PathResourceResolver.shouldEncodeRelativePath(Resource)",
            "diff": "{\"lhs\" : {\"locationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"<init>.2\":[\"$r1 = new java.util.HashMap\", \"specialinvoke $r1.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets> = $r1\"],\"setLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>\",\"getLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map getLocationCharsets()>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r2, r1, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r1, null, r2)\",\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>\",\"getResource.9\":[\"if $z2 == 0 goto $r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"r4 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r7 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r6 = new java.lang.StringBuilder\", \"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r11 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r14 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"if r4 == null goto $r19 = \"[]\"\", \"$r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4)\", \"goto [?= $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)]\", \"$r19 = \"[]\"\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)\", \"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r7.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r18)\"],\"checkResource.4\":[\"if $z0 == 0 goto r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":null,\"checkResource.7\":[\"if r3 == null goto return 0\"],\"checkResource.11\":[\"r5 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r5)\"],\"encodeIfNecessary\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.lang.String encodeIfNecessary(java.lang.String,javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>\",\"shouldEncodeRelativePath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean shouldEncodeRelativePath(org.springframework.core.io.Resource)>\",\"getResource\":null},\"rhs\" : {\"locationCharsets\":null,\"urlPathHelper\":null,\"<init>.2\":null,\"setLocationCharsets\":null,\"getLocationCharsets\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r2, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r1, r2)\",\"getResource\":null,\"getResource.9\":[\"if $z2 == 0 goto $r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"$r6 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r5 = new java.lang.StringBuilder\", \"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()\", \"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r10 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)\", \"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r13 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)\", \"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"$r16 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16)\", \"$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r6.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r19)\"],\"checkResource.4\":[\"if $z0 == 0 goto $r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":[\"$r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"if $r5 == null goto return 0\"],\"checkResource.7\":null,\"checkResource.11\":[\"r4 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r4)\"],\"encodeIfNecessary\":null,\"shouldEncodeRelativePath\":null,\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>\"}}",
            "contained": true,
            "commit": "91b803a2310344d925e5d4b1709bbcea9037554",
            "ref_file": "/data4/test_compare_script/91b803a2310344d925e5d4b1709bbcea9037554/org/springframework/web/servlet/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/servlet/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.PathResourceResolver.shouldEncodeRelativePath(Resource)",
            "diff": "{\"lhs\" : {\"locationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"<init>.2\":[\"$r1 = new java.util.HashMap\", \"specialinvoke $r1.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map locationCharsets> = $r1\"],\"setLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>\",\"getLocationCharsets\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.util.Map getLocationCharsets()>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r2, r1, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>(r1, null, r2)\",\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,javax.servlet.http.HttpServletRequest,java.util.List)>\",\"getResource.9\":[\"if $z2 == 0 goto $r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r5 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"r4 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r7 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r6 = new java.lang.StringBuilder\", \"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r11 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)\", \"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r14 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)\", \"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"if r4 == null goto $r19 = \"[]\"\", \"$r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4)\", \"goto [?= $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)]\", \"$r19 = \"[]\"\", \"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)\", \"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r7.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r18)\"],\"checkResource.4\":[\"if $z0 == 0 goto r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":null,\"checkResource.7\":[\"if r3 == null goto return 0\"],\"checkResource.11\":[\"r5 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r5)\"],\"encodeIfNecessary\":\"<org.springframework.web.servlet.resource.PathResourceResolver: java.lang.String encodeIfNecessary(java.lang.String,javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>\",\"shouldEncodeRelativePath\":\"<org.springframework.web.servlet.resource.PathResourceResolver: boolean shouldEncodeRelativePath(org.springframework.core.io.Resource)>\",\"getResource\":null},\"rhs\" : {\"locationCharsets\":null,\"urlPathHelper\":null,\"<init>.2\":null,\"setLocationCharsets\":null,\"getLocationCharsets\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"resolveResourceInternal.5\":\"$r5 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r2, r3)\",\"resolveUrlPathInternal.6\":\"$r4 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>(r1, r2)\",\"getResource\":null,\"getResource.9\":[\"if $z2 == 0 goto $r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\"],\"getResource.11\":[\"$r4 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\"],\"getResource.14\":[\"$r6 = r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.apache.commons.logging.Log logger>\", \"$r5 = new java.lang.StringBuilder\", \"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()\", \"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Resource path=\\\"\")\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" was successfully resolved but resource=\\\"\")\", \"$r10 = interfaceinvoke r3.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)\", \"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" is neither under the current location=\\\"\")\", \"$r13 = interfaceinvoke r2.<org.springframework.core.io.Resource: java.net.URL getURL()>()\", \"$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)\", \"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" nor under any of the allowed locations=\")\", \"$r16 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"$r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16)\", \"$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r6.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r19)\"],\"checkResource.4\":[\"if $z0 == 0 goto $r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\"],\"checkResource.6\":[\"$r5 = virtualinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()>()\", \"if $r5 == null goto return 0\"],\"checkResource.7\":null,\"checkResource.11\":[\"r4 = r3[i1]\", \"$z1 = specialinvoke r0.<org.springframework.web.servlet.resource.PathResourceResolver: boolean isResourceUnderLocation(org.springframework.core.io.Resource,org.springframework.core.io.Resource)>(r1, r4)\"],\"encodeIfNecessary\":null,\"shouldEncodeRelativePath\":null,\"getResource\":\"<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)>\"}}",
            "contained": true,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/PathResourceResolver.class",
            "affectedFile": "/org/springframework/web/servlet/resource/PathResourceResolver.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler",
            "diff": "{\"lhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"EmbeddedValueResolverAware\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String URL_RESOURCE_CHARSET_PREFIX>\",\"locationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues>\",\"locationCharsets\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"embeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.util.StringValueResolver embeddedValueResolver>\",\"contentLengthLongAvailable\":null,\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r7\", \"$r8 = new java.util.HashMap\", \"specialinvoke $r8.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets> = $r8\", \"$r9 = new java.util.ArrayList\", \"specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r9\", \"$r10 = new java.util.ArrayList\", \"specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r10\"],\"setLocationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setLocationValues(java.util.List)>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"setEmbeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)>\",\"afterPropertiesSet.1\":[\"specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>()\"],\"resolveResourceLocations\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>\",\"initAllowedLocations.7\":[\"i1 = $i0 - 1\", \"if i1 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i1 = i1 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto $r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"$r12 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r13 = newarray (org.springframework.core.io.Resource)[0]\", \"$r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13)\", \"$r15 = (org.springframework.core.io.Resource[]) $r14\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r15)\", \"$r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"if $r9 == null goto return\", \"$r10 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>($r10)\", \"$r11 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>($r11)\"],\"initAllowedLocations.31\":[\"i1 = i1 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r8 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r8)\"],\"handleRequest.13\":[\"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r36)\"],\"handleRequest.17\":[\"$r9 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r35 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r35.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r27 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r27.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r43 = \"HEAD\"\"],\"handleRequest.32\":[\"$r28 = new java.lang.StringBuilder\", \"specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()\", \"$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r29.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r34)\", \"goto [?= $r43 = \"HEAD\"]\", \"$r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r43 = \"HEAD\"\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r21 = new java.lang.StringBuilder\", \"specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()\", \"$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r26)\", \"$r43 = \"HEAD\"\", \"$r44 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>($r44)\", \"if $z4 == 0 goto $r11 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r20 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r20.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r11 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r11.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r12 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r12 != null goto $r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"if $r18 == null goto $z5 = 0\", \"$z5 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")]\", \"$z5 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")\"],\"handleRequest.71\":[\"$r19 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r19.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r11)\"],\"handleRequest.74\":[\"$r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"if $r13 == null goto $z6 = 0\", \"$z6 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")]\", \"$z6 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")\"],\"handleRequest.84\":[\"r45 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":null,\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r45, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r11)\"],\"handleRequest.90\":[\"$r38 := @caughtexception\", \"$r39 = new java.lang.StringBuilder\", \"specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()\", \"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l1 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1)\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r42)\"],\"getMediaType.3\":[\"$r3 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"if $r3 == null goto $r5 = null\"],\"getMediaType.7\":[\"goto [?= return $r5]\", \"$r5 = null\"],\"setHeaders.7\":null,\"setHeaders.9\":null,\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"$r17 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r17)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"if $z0 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\", \"$r10 = (org.springframework.web.servlet.resource.HttpResource) r2\", \"r4 = interfaceinvoke $r10.<org.springframework.web.servlet.resource.HttpResource: org.springframework.http.HttpHeaders getResponseHeaders()>()\", \"$r11 = virtualinvoke r4.<org.springframework.http.HttpHeaders: java.util.Set entrySet()>()\", \"r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\"],\"setHeaders.22\":[\"$r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (java.util.Map$Entry) $r12\", \"$r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()\", \"r7 = (java.lang.String) $r13\", \"z3 = 1\", \"$r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()\", \"$r15 = (java.util.List) $r14\", \"r8 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>()\", \"$z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()\", \"if $z2 == 0 goto (branch)\", \"$r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()\", \"r9 = (java.lang.String) $r16\", \"if z3 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"goto [?= z3 = 0]\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"z3 = 0\", \"goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\"],\"<clinit>.0\":[\"$r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r0\"],\"getMediaType\":null},\"rhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":null,\"locationValues\":null,\"locationCharsets\":null,\"urlPathHelper\":null,\"embeddedValueResolver\":null,\"contentLengthLongAvailable\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\",\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r7\", \"$r8 = new java.util.ArrayList\", \"specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r8\"],\"setLocationValues\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"setEmbeddedValueResolver\":null,\"afterPropertiesSet.1\":null,\"resolveResourceLocations\":null,\"initAllowedLocations.7\":[\"i2 = $i0 - 1\", \"if i2 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i2 = i2 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto return\", \"$r9 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r10 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$i1 = interfaceinvoke $r10.<java.util.List: int size()>()\", \"$r11 = newarray (org.springframework.core.io.Resource)[$i1]\", \"$r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)\", \"$r13 = (org.springframework.core.io.Resource[]) $r12\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r13)\"],\"initAllowedLocations.31\":[\"i2 = i2 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r39 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r39.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r9 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r8.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r9)\"],\"handleRequest.13\":[\"$r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r38)\"],\"handleRequest.17\":[\"$r10 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\"],\"handleRequest.32\":[\"$z3 = interfaceinvoke $r29.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r45 = \"HEAD\"\", \"$r31 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r31.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r36)\", \"goto [?= $r45 = \"HEAD\"]\", \"$r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r45 = \"HEAD\"\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\", \"$r45 = \"HEAD\"\", \"$r46 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r46)\", \"if $z4 == 0 goto $r12 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r12 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r12.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r13 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r13 != null goto interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\"],\"handleRequest.71\":[\"$r21 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r21.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r12)\"],\"handleRequest.74\":null,\"handleRequest.84\":[\"r47 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":[\"$i1 = interfaceinvoke r47.<java.util.List: int size()>()\", \"if $i1 != 1 goto $r16 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = interfaceinvoke r47.<java.util.List: java.lang.Object get(int)>(0)\", \"$r19 = (org.springframework.http.HttpRange) $r18\", \"r7 = virtualinvoke $r19.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r3)\", \"$r20 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"virtualinvoke $r20.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r7, r4, $r12)\", \"goto [?= (branch)]\"],\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r47, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r12)\"],\"handleRequest.90\":[\"$r40 := @caughtexception\", \"$r41 = new java.lang.StringBuilder\", \"specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l2 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2)\", \"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r44)\"],\"getMediaType.3\":[\"r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>(r2)\", \"if r3 == null goto $r4 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"return r3\"],\"getMediaType.7\":null,\"setHeaders.7\":[\"$z2 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\", \"if $z2 == 0 goto $r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\"],\"setHeaders.9\":[\"$r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Length\", $r14)\", \"goto [?= (branch)]\"],\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"$r13 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r13)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"if $z0 == 0 goto $z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\", \"$r11 = (org.springframework.web.servlet.resource.EncodedResource) r2\", \"$r12 = interfaceinvoke $r11.<org.springframework.web.servlet.resource.EncodedResource: java.lang.String getContentEncoding()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Encoding\", $r12)\", \"$z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\"],\"setHeaders.22\":[\"$r4 = new java.lang.StringBuilder\", \"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r6 = (org.springframework.web.servlet.resource.VersionedResource) r2\", \"$r7 = interfaceinvoke $r6.<org.springframework.web.servlet.resource.VersionedResource: java.lang.String getVersion()>()\", \"$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"ETag\", $r10)\"],\"<clinit>.0\":[\"$r0 = newarray (java.lang.Class)[1]\", \"$r1 = <java.lang.Long: java.lang.Class TYPE>\", \"$r0[0] = $r1\", \"$z0 = staticinvoke <org.springframework.util.ClassUtils: boolean hasMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class \"Ljavax/servlet/ServletResponse;\", \"setContentLengthLong\", $r0)\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable> = $z0\", \"$r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r2\"],\"getMediaType\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>\"}}",
            "contained": true,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler",
            "diff": "{\"lhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"EmbeddedValueResolverAware\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String URL_RESOURCE_CHARSET_PREFIX>\",\"locationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues>\",\"locationCharsets\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"embeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.util.StringValueResolver embeddedValueResolver>\",\"contentLengthLongAvailable\":null,\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r7\", \"$r8 = new java.util.HashMap\", \"specialinvoke $r8.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets> = $r8\", \"$r9 = new java.util.ArrayList\", \"specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r9\", \"$r10 = new java.util.ArrayList\", \"specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r10\"],\"setLocationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setLocationValues(java.util.List)>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"setEmbeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)>\",\"afterPropertiesSet.1\":[\"specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>()\"],\"resolveResourceLocations\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>\",\"initAllowedLocations.7\":[\"i1 = $i0 - 1\", \"if i1 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i1 = i1 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto $r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"$r12 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r13 = newarray (org.springframework.core.io.Resource)[0]\", \"$r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13)\", \"$r15 = (org.springframework.core.io.Resource[]) $r14\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r15)\", \"$r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"if $r9 == null goto return\", \"$r10 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>($r10)\", \"$r11 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>($r11)\"],\"initAllowedLocations.31\":[\"i1 = i1 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r8 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r8)\"],\"handleRequest.13\":[\"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r36)\"],\"handleRequest.17\":[\"$r9 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r35 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r35.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r27 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r27.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r43 = \"HEAD\"\"],\"handleRequest.32\":[\"$r28 = new java.lang.StringBuilder\", \"specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()\", \"$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r29.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r34)\", \"goto [?= $r43 = \"HEAD\"]\", \"$r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r43 = \"HEAD\"\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r21 = new java.lang.StringBuilder\", \"specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()\", \"$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r26)\", \"$r43 = \"HEAD\"\", \"$r44 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>($r44)\", \"if $z4 == 0 goto $r11 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r20 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r20.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r11 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r11.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r12 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r12 != null goto $r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"if $r18 == null goto $z5 = 0\", \"$z5 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")]\", \"$z5 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")\"],\"handleRequest.71\":[\"$r19 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r19.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r11)\"],\"handleRequest.74\":[\"$r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"if $r13 == null goto $z6 = 0\", \"$z6 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")]\", \"$z6 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")\"],\"handleRequest.84\":[\"r45 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":null,\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r45, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r11)\"],\"handleRequest.90\":[\"$r38 := @caughtexception\", \"$r39 = new java.lang.StringBuilder\", \"specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()\", \"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l1 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1)\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r42)\"],\"getResource.4\":[\"r37 = (java.lang.String) $r4\", \"if r37 != null goto r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$r29 = new java.lang.IllegalStateException\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r32 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r35)\", \"throw $r29\", \"r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r38)\"],\"getResource.19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r38)\", \"if $z2 == 0 goto $z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"getResource.28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\"],\"getResource.33\":[\"$z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"r39 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r38, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r39)\", \"if $z5 == 0 goto r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z8 = interfaceinvoke $r22.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z8 == 0 goto return null\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\"],\"getResource.50\":[\"r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$z6 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r40)\", \"if $z6 == 0 goto (branch)\", \"$r15 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z7 = interfaceinvoke $r15.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z7 == 0 goto return null\", \"$r17 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r16 = new java.lang.StringBuilder\", \"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()\", \"$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r17.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r21)\", \"return null\", \"goto [?= $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r36 := @caughtexception\", \"$r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r42 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r41.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r42)\", \"$r44 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r45 = interfaceinvoke $r41.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r38, $r44)\", \"if r45 == null goto return r45\"],\"getResource.76\":[\"return r45\"],\"getResource.79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r41, $r14)\", \"r46 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r45)\", \"return r46\"],\"processPath.1\":[\"r2 := @parameter0: java.lang.String\", \"r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r2, \"\\\\\", \"/\")\", \"r4 = specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanDuplicateSlashes(java.lang.String)>(r3)\", \"$r1 = specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanLeadingSlash(java.lang.String)>(r4)\", \"return $r1\"],\"cleanDuplicateSlashes\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanDuplicateSlashes(java.lang.String)>\",\"cleanLeadingSlash\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanLeadingSlash(java.lang.String)>\",\"getMediaType.3\":[\"$r3 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"if $r3 == null goto $r5 = null\"],\"getMediaType.7\":[\"goto [?= return $r5]\", \"$r5 = null\"],\"setHeaders.7\":null,\"setHeaders.9\":null,\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"$r17 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r17)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"if $z0 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\", \"$r10 = (org.springframework.web.servlet.resource.HttpResource) r2\", \"r4 = interfaceinvoke $r10.<org.springframework.web.servlet.resource.HttpResource: org.springframework.http.HttpHeaders getResponseHeaders()>()\", \"$r11 = virtualinvoke r4.<org.springframework.http.HttpHeaders: java.util.Set entrySet()>()\", \"r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\"],\"setHeaders.22\":[\"$r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (java.util.Map$Entry) $r12\", \"$r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()\", \"r7 = (java.lang.String) $r13\", \"z3 = 1\", \"$r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()\", \"$r15 = (java.util.List) $r14\", \"r8 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>()\", \"$z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()\", \"if $z2 == 0 goto (branch)\", \"$r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()\", \"r9 = (java.lang.String) $r16\", \"if z3 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"goto [?= z3 = 0]\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"z3 = 0\", \"goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\"],\"<clinit>.0\":[\"$r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r0\"],\"getMediaType\":null},\"rhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":null,\"locationValues\":null,\"locationCharsets\":null,\"urlPathHelper\":null,\"embeddedValueResolver\":null,\"contentLengthLongAvailable\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\",\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r7\", \"$r8 = new java.util.ArrayList\", \"specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r8\"],\"setLocationValues\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"setEmbeddedValueResolver\":null,\"afterPropertiesSet.1\":null,\"resolveResourceLocations\":null,\"initAllowedLocations.7\":[\"i2 = $i0 - 1\", \"if i2 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i2 = i2 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto return\", \"$r9 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r10 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$i1 = interfaceinvoke $r10.<java.util.List: int size()>()\", \"$r11 = newarray (org.springframework.core.io.Resource)[$i1]\", \"$r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)\", \"$r13 = (org.springframework.core.io.Resource[]) $r12\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r13)\"],\"initAllowedLocations.31\":[\"i2 = i2 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r39 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r39.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r9 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r8.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r9)\"],\"handleRequest.13\":[\"$r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r38)\"],\"handleRequest.17\":[\"$r10 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\"],\"handleRequest.32\":[\"$z3 = interfaceinvoke $r29.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r45 = \"HEAD\"\", \"$r31 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r31.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r36)\", \"goto [?= $r45 = \"HEAD\"]\", \"$r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r45 = \"HEAD\"\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\", \"$r45 = \"HEAD\"\", \"$r46 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r46)\", \"if $z4 == 0 goto $r12 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r12 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r12.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r13 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r13 != null goto interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\"],\"handleRequest.71\":[\"$r21 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r21.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r12)\"],\"handleRequest.74\":null,\"handleRequest.84\":[\"r47 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":[\"$i1 = interfaceinvoke r47.<java.util.List: int size()>()\", \"if $i1 != 1 goto $r16 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = interfaceinvoke r47.<java.util.List: java.lang.Object get(int)>(0)\", \"$r19 = (org.springframework.http.HttpRange) $r18\", \"r7 = virtualinvoke $r19.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r3)\", \"$r20 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"virtualinvoke $r20.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r7, r4, $r12)\", \"goto [?= (branch)]\"],\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r47, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r12)\"],\"handleRequest.90\":[\"$r40 := @caughtexception\", \"$r41 = new java.lang.StringBuilder\", \"specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l2 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2)\", \"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r44)\"],\"getResource.4\":[\"r31 = (java.lang.String) $r4\", \"if r31 != null goto r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$r23 = new java.lang.IllegalStateException\", \"$r24 = new java.lang.StringBuilder\", \"specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r26 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29)\", \"throw $r23\", \"r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r32)\"],\"getResource.19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r32)\", \"if $z2 == 0 goto $z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"getResource.28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\"],\"getResource.33\":[\"$z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r15 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r32, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>($r15)\", \"if $z5 == 0 goto (branch)\", \"$r16 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z6 = interfaceinvoke $r16.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z6 == 0 goto return null\", \"$r18 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r17 = new java.lang.StringBuilder\", \"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()\", \"$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r18.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r22)\"],\"getResource.50\":[\"goto [?= $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r30 := @caughtexception\", \"$r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r34 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r33.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r34)\", \"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r37 = interfaceinvoke $r33.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r32, $r36)\", \"if r37 == null goto return r37\"],\"getResource.76\":[\"return r37\"],\"getResource.79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r33, $r14)\", \"r38 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r37)\", \"return r38\"],\"processPath.1\":[\"r11 := @parameter0: java.lang.String\", \"z1 = 0\", \"i4 = 0\", \"$i0 = virtualinvoke r11.<java.lang.String: int length()>()\", \"if i4 >= $i0 goto (branch)\", \"$c1 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c1 != 47 goto $c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"z1 = 1\", \"goto [?= i4 = i4 + 1]\", \"$c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c2 <= 32 goto i4 = i4 + 1\", \"$c3 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c3 == 127 goto i4 = i4 + 1\", \"if i4 == 0 goto return r11\", \"if i4 != 1 goto (branch)\", \"if z1 == 0 goto (branch)\", \"return r11\", \"if z1 == 0 goto $r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"$r7 = new java.lang.StringBuilder\", \"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r9 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= r13 = $r12]\", \"$r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"r13 = $r12\", \"$r1 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z0 == 0 goto return r13\", \"$r3 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r2 = new java.lang.StringBuilder\", \"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Path after trimming leading \\'/\\' and control characters: \")\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)\", \"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r6)\", \"return r13\", \"i4 = i4 + 1\", \"goto [?= $i0 = virtualinvoke r11.<java.lang.String: int length()>()]\", \"if z1 == 0 goto $r14 = \"\"\", \"$r14 = \"/\"\", \"goto [?= return $r14]\", \"$r14 = \"\"\", \"return $r14\"],\"cleanDuplicateSlashes\":null,\"cleanLeadingSlash\":null,\"getMediaType.3\":[\"r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>(r2)\", \"if r3 == null goto $r4 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"return r3\"],\"getMediaType.7\":null,\"setHeaders.7\":[\"$z2 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\", \"if $z2 == 0 goto $r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\"],\"setHeaders.9\":[\"$r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Length\", $r14)\", \"goto [?= (branch)]\"],\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"$r13 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r13)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"if $z0 == 0 goto $z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\", \"$r11 = (org.springframework.web.servlet.resource.EncodedResource) r2\", \"$r12 = interfaceinvoke $r11.<org.springframework.web.servlet.resource.EncodedResource: java.lang.String getContentEncoding()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Encoding\", $r12)\", \"$z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\"],\"setHeaders.22\":[\"$r4 = new java.lang.StringBuilder\", \"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r6 = (org.springframework.web.servlet.resource.VersionedResource) r2\", \"$r7 = interfaceinvoke $r6.<org.springframework.web.servlet.resource.VersionedResource: java.lang.String getVersion()>()\", \"$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"ETag\", $r10)\"],\"<clinit>.0\":[\"$r0 = newarray (java.lang.Class)[1]\", \"$r1 = <java.lang.Long: java.lang.Class TYPE>\", \"$r0[0] = $r1\", \"$z0 = staticinvoke <org.springframework.util.ClassUtils: boolean hasMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class \"Ljavax/servlet/ServletResponse;\", \"setContentLengthLong\", $r0)\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable> = $z0\", \"$r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r2\"],\"getMediaType\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>\"}}",
            "contained": true,
            "commit": "91b803a2310344d925e5d4b1709bbcea9037554",
            "ref_file": "/data4/test_compare_script/91b803a2310344d925e5d4b1709bbcea9037554/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler",
            "diff": "{\"lhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"EmbeddedValueResolverAware\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String URL_RESOURCE_CHARSET_PREFIX>\",\"locationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues>\",\"locationCharsets\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"embeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.util.StringValueResolver embeddedValueResolver>\",\"contentLengthLongAvailable\":null,\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r7\", \"$r8 = new java.util.HashMap\", \"specialinvoke $r8.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets> = $r8\", \"$r9 = new java.util.ArrayList\", \"specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r9\", \"$r10 = new java.util.ArrayList\", \"specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r10\"],\"setLocationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setLocationValues(java.util.List)>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"setEmbeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)>\",\"afterPropertiesSet.1\":[\"specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>()\"],\"resolveResourceLocations\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>\",\"initAllowedLocations.7\":[\"i1 = $i0 - 1\", \"if i1 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i1 = i1 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto $r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"$r12 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r13 = newarray (org.springframework.core.io.Resource)[0]\", \"$r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13)\", \"$r15 = (org.springframework.core.io.Resource[]) $r14\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r15)\", \"$r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"if $r9 == null goto return\", \"$r10 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>($r10)\", \"$r11 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>($r11)\"],\"initAllowedLocations.31\":[\"i1 = i1 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r8 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r8)\"],\"handleRequest.13\":[\"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r36)\"],\"handleRequest.17\":[\"$r9 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r35 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r35.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r27 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r27.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r43 = \"HEAD\"\"],\"handleRequest.32\":[\"$r28 = new java.lang.StringBuilder\", \"specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()\", \"$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r29.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r34)\", \"goto [?= $r43 = \"HEAD\"]\", \"$r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r43 = \"HEAD\"\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r21 = new java.lang.StringBuilder\", \"specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()\", \"$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r26)\", \"$r43 = \"HEAD\"\", \"$r44 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>($r44)\", \"if $z4 == 0 goto $r11 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r20 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r20.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r11 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r11.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r12 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r12 != null goto $r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"if $r18 == null goto $z5 = 0\", \"$z5 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")]\", \"$z5 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")\"],\"handleRequest.71\":[\"$r19 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r19.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r11)\"],\"handleRequest.74\":[\"$r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"if $r13 == null goto $z6 = 0\", \"$z6 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")]\", \"$z6 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")\"],\"handleRequest.84\":[\"r45 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":null,\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r45, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r11)\"],\"handleRequest.90\":[\"$r38 := @caughtexception\", \"$r39 = new java.lang.StringBuilder\", \"specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()\", \"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l1 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1)\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r42)\"],\"getResource.4\":[\"r37 = (java.lang.String) $r4\", \"if r37 != null goto r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$r29 = new java.lang.IllegalStateException\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r32 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r35)\", \"throw $r29\", \"r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r38)\"],\"getResource.19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r38)\", \"if $z2 == 0 goto $z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"getResource.28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\"],\"getResource.33\":[\"$z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"r39 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r38, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r39)\", \"if $z5 == 0 goto r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z8 = interfaceinvoke $r22.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z8 == 0 goto return null\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\"],\"getResource.50\":[\"r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$z6 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r40)\", \"if $z6 == 0 goto (branch)\", \"$r15 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z7 = interfaceinvoke $r15.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z7 == 0 goto return null\", \"$r17 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r16 = new java.lang.StringBuilder\", \"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()\", \"$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r17.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r21)\", \"return null\", \"goto [?= $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r36 := @caughtexception\", \"$r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r42 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r41.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r42)\", \"$r44 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r45 = interfaceinvoke $r41.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r38, $r44)\", \"if r45 == null goto return r45\"],\"getResource.76\":[\"return r45\"],\"getResource.79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r41, $r14)\", \"r46 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r45)\", \"return r46\"],\"processPath.1\":[\"r2 := @parameter0: java.lang.String\", \"r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r2, \"\\\\\", \"/\")\", \"r4 = specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanDuplicateSlashes(java.lang.String)>(r3)\", \"$r1 = specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanLeadingSlash(java.lang.String)>(r4)\", \"return $r1\"],\"cleanDuplicateSlashes\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanDuplicateSlashes(java.lang.String)>\",\"cleanLeadingSlash\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanLeadingSlash(java.lang.String)>\",\"getMediaType.3\":[\"$r3 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"if $r3 == null goto $r5 = null\"],\"getMediaType.7\":[\"goto [?= return $r5]\", \"$r5 = null\"],\"setHeaders.7\":null,\"setHeaders.9\":null,\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"$r17 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r17)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"if $z0 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\", \"$r10 = (org.springframework.web.servlet.resource.HttpResource) r2\", \"r4 = interfaceinvoke $r10.<org.springframework.web.servlet.resource.HttpResource: org.springframework.http.HttpHeaders getResponseHeaders()>()\", \"$r11 = virtualinvoke r4.<org.springframework.http.HttpHeaders: java.util.Set entrySet()>()\", \"r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\"],\"setHeaders.22\":[\"$r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (java.util.Map$Entry) $r12\", \"$r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()\", \"r7 = (java.lang.String) $r13\", \"z3 = 1\", \"$r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()\", \"$r15 = (java.util.List) $r14\", \"r8 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>()\", \"$z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()\", \"if $z2 == 0 goto (branch)\", \"$r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()\", \"r9 = (java.lang.String) $r16\", \"if z3 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"goto [?= z3 = 0]\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"z3 = 0\", \"goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\"],\"<clinit>.0\":[\"$r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r0\"],\"getMediaType\":null},\"rhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":null,\"locationValues\":null,\"locationCharsets\":null,\"urlPathHelper\":null,\"embeddedValueResolver\":null,\"contentLengthLongAvailable\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\",\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r7\", \"$r8 = new java.util.ArrayList\", \"specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r8\"],\"setLocationValues\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"setEmbeddedValueResolver\":null,\"afterPropertiesSet.1\":null,\"resolveResourceLocations\":null,\"initAllowedLocations.7\":[\"i2 = $i0 - 1\", \"if i2 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i2 = i2 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto return\", \"$r9 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r10 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$i1 = interfaceinvoke $r10.<java.util.List: int size()>()\", \"$r11 = newarray (org.springframework.core.io.Resource)[$i1]\", \"$r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)\", \"$r13 = (org.springframework.core.io.Resource[]) $r12\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r13)\"],\"initAllowedLocations.31\":[\"i2 = i2 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r39 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r39.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r9 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r8.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r9)\"],\"handleRequest.13\":[\"$r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r38)\"],\"handleRequest.17\":[\"$r10 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\"],\"handleRequest.32\":[\"$z3 = interfaceinvoke $r29.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r45 = \"HEAD\"\", \"$r31 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r31.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r36)\", \"goto [?= $r45 = \"HEAD\"]\", \"$r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r45 = \"HEAD\"\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\", \"$r45 = \"HEAD\"\", \"$r46 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r46)\", \"if $z4 == 0 goto $r12 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r12 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r12.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r13 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r13 != null goto interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\"],\"handleRequest.71\":[\"$r21 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r21.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r12)\"],\"handleRequest.74\":null,\"handleRequest.84\":[\"r47 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":[\"$i1 = interfaceinvoke r47.<java.util.List: int size()>()\", \"if $i1 != 1 goto $r16 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = interfaceinvoke r47.<java.util.List: java.lang.Object get(int)>(0)\", \"$r19 = (org.springframework.http.HttpRange) $r18\", \"r7 = virtualinvoke $r19.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r3)\", \"$r20 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"virtualinvoke $r20.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r7, r4, $r12)\", \"goto [?= (branch)]\"],\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r47, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r12)\"],\"handleRequest.90\":[\"$r40 := @caughtexception\", \"$r41 = new java.lang.StringBuilder\", \"specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l2 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2)\", \"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r44)\"],\"getResource.4\":[\"r31 = (java.lang.String) $r4\", \"if r31 != null goto r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$r23 = new java.lang.IllegalStateException\", \"$r24 = new java.lang.StringBuilder\", \"specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r26 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29)\", \"throw $r23\", \"r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r32)\"],\"getResource.19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r32)\", \"if $z2 == 0 goto $z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"getResource.28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\"],\"getResource.33\":[\"$z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r15 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r32, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>($r15)\", \"if $z5 == 0 goto (branch)\", \"$r16 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z6 = interfaceinvoke $r16.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z6 == 0 goto return null\", \"$r18 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r17 = new java.lang.StringBuilder\", \"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()\", \"$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r18.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r22)\"],\"getResource.50\":[\"goto [?= $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r30 := @caughtexception\", \"$r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r34 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r33.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r34)\", \"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r37 = interfaceinvoke $r33.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r32, $r36)\", \"if r37 == null goto return r37\"],\"getResource.76\":[\"return r37\"],\"getResource.79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r33, $r14)\", \"r38 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r37)\", \"return r38\"],\"processPath.1\":[\"r11 := @parameter0: java.lang.String\", \"z1 = 0\", \"i4 = 0\", \"$i0 = virtualinvoke r11.<java.lang.String: int length()>()\", \"if i4 >= $i0 goto (branch)\", \"$c1 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c1 != 47 goto $c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"z1 = 1\", \"goto [?= i4 = i4 + 1]\", \"$c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c2 <= 32 goto i4 = i4 + 1\", \"$c3 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c3 == 127 goto i4 = i4 + 1\", \"if i4 == 0 goto return r11\", \"if i4 != 1 goto (branch)\", \"if z1 == 0 goto (branch)\", \"return r11\", \"if z1 == 0 goto $r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"$r7 = new java.lang.StringBuilder\", \"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r9 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= r13 = $r12]\", \"$r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"r13 = $r12\", \"$r1 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z0 == 0 goto return r13\", \"$r3 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r2 = new java.lang.StringBuilder\", \"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Path after trimming leading \\'/\\' and control characters: \")\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)\", \"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r6)\", \"return r13\", \"i4 = i4 + 1\", \"goto [?= $i0 = virtualinvoke r11.<java.lang.String: int length()>()]\", \"if z1 == 0 goto $r14 = \"\"\", \"$r14 = \"/\"\", \"goto [?= return $r14]\", \"$r14 = \"\"\", \"return $r14\"],\"cleanDuplicateSlashes\":null,\"cleanLeadingSlash\":null,\"getMediaType.3\":[\"r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>(r2)\", \"if r3 == null goto $r4 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"return r3\"],\"getMediaType.7\":null,\"setHeaders.7\":[\"$z2 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\", \"if $z2 == 0 goto $r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\"],\"setHeaders.9\":[\"$r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Length\", $r14)\", \"goto [?= (branch)]\"],\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"$r13 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r13)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"if $z0 == 0 goto $z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\", \"$r11 = (org.springframework.web.servlet.resource.EncodedResource) r2\", \"$r12 = interfaceinvoke $r11.<org.springframework.web.servlet.resource.EncodedResource: java.lang.String getContentEncoding()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Encoding\", $r12)\", \"$z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\"],\"setHeaders.22\":[\"$r4 = new java.lang.StringBuilder\", \"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r6 = (org.springframework.web.servlet.resource.VersionedResource) r2\", \"$r7 = interfaceinvoke $r6.<org.springframework.web.servlet.resource.VersionedResource: java.lang.String getVersion()>()\", \"$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"ETag\", $r10)\"],\"<clinit>.0\":[\"$r0 = newarray (java.lang.Class)[1]\", \"$r1 = <java.lang.Long: java.lang.Class TYPE>\", \"$r0[0] = $r1\", \"$z0 = staticinvoke <org.springframework.util.ClassUtils: boolean hasMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class \"Ljavax/servlet/ServletResponse;\", \"setContentLengthLong\", $r0)\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable> = $z0\", \"$r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r2\"],\"getMediaType\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>\"}}",
            "contained": true,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.cleanDuplicateSlashes(String)",
            "diff": "{\"lhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"EmbeddedValueResolverAware\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String URL_RESOURCE_CHARSET_PREFIX>\",\"locationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues>\",\"locationCharsets\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"embeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.util.StringValueResolver embeddedValueResolver>\",\"contentLengthLongAvailable\":null,\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r7\", \"$r8 = new java.util.HashMap\", \"specialinvoke $r8.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets> = $r8\", \"$r9 = new java.util.ArrayList\", \"specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r9\", \"$r10 = new java.util.ArrayList\", \"specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r10\"],\"setLocationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setLocationValues(java.util.List)>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"setEmbeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)>\",\"afterPropertiesSet.1\":[\"specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>()\"],\"resolveResourceLocations\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>\",\"initAllowedLocations.7\":[\"i1 = $i0 - 1\", \"if i1 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i1 = i1 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto $r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"$r12 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r13 = newarray (org.springframework.core.io.Resource)[0]\", \"$r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13)\", \"$r15 = (org.springframework.core.io.Resource[]) $r14\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r15)\", \"$r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"if $r9 == null goto return\", \"$r10 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>($r10)\", \"$r11 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>($r11)\"],\"initAllowedLocations.31\":[\"i1 = i1 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r8 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r8)\"],\"handleRequest.13\":[\"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r36)\"],\"handleRequest.17\":[\"$r9 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r35 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r35.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r27 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r27.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r43 = \"HEAD\"\"],\"handleRequest.32\":[\"$r28 = new java.lang.StringBuilder\", \"specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()\", \"$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r29.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r34)\", \"goto [?= $r43 = \"HEAD\"]\", \"$r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r43 = \"HEAD\"\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r21 = new java.lang.StringBuilder\", \"specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()\", \"$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r26)\", \"$r43 = \"HEAD\"\", \"$r44 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>($r44)\", \"if $z4 == 0 goto $r11 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r20 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r20.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r11 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r11.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r12 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r12 != null goto $r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"if $r18 == null goto $z5 = 0\", \"$z5 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")]\", \"$z5 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")\"],\"handleRequest.71\":[\"$r19 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r19.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r11)\"],\"handleRequest.74\":[\"$r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"if $r13 == null goto $z6 = 0\", \"$z6 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")]\", \"$z6 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")\"],\"handleRequest.84\":[\"r45 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":null,\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r45, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r11)\"],\"handleRequest.90\":[\"$r38 := @caughtexception\", \"$r39 = new java.lang.StringBuilder\", \"specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()\", \"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l1 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1)\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r42)\"],\"getMediaType.3\":[\"$r3 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"if $r3 == null goto $r5 = null\"],\"getMediaType.7\":[\"goto [?= return $r5]\", \"$r5 = null\"],\"setHeaders.7\":null,\"setHeaders.9\":null,\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"$r17 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r17)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"if $z0 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\", \"$r10 = (org.springframework.web.servlet.resource.HttpResource) r2\", \"r4 = interfaceinvoke $r10.<org.springframework.web.servlet.resource.HttpResource: org.springframework.http.HttpHeaders getResponseHeaders()>()\", \"$r11 = virtualinvoke r4.<org.springframework.http.HttpHeaders: java.util.Set entrySet()>()\", \"r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\"],\"setHeaders.22\":[\"$r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (java.util.Map$Entry) $r12\", \"$r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()\", \"r7 = (java.lang.String) $r13\", \"z3 = 1\", \"$r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()\", \"$r15 = (java.util.List) $r14\", \"r8 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>()\", \"$z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()\", \"if $z2 == 0 goto (branch)\", \"$r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()\", \"r9 = (java.lang.String) $r16\", \"if z3 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"goto [?= z3 = 0]\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"z3 = 0\", \"goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\"],\"<clinit>.0\":[\"$r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r0\"],\"getMediaType\":null},\"rhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":null,\"locationValues\":null,\"locationCharsets\":null,\"urlPathHelper\":null,\"embeddedValueResolver\":null,\"contentLengthLongAvailable\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\",\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r7\", \"$r8 = new java.util.ArrayList\", \"specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r8\"],\"setLocationValues\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"setEmbeddedValueResolver\":null,\"afterPropertiesSet.1\":null,\"resolveResourceLocations\":null,\"initAllowedLocations.7\":[\"i2 = $i0 - 1\", \"if i2 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i2 = i2 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto return\", \"$r9 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r10 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$i1 = interfaceinvoke $r10.<java.util.List: int size()>()\", \"$r11 = newarray (org.springframework.core.io.Resource)[$i1]\", \"$r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)\", \"$r13 = (org.springframework.core.io.Resource[]) $r12\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r13)\"],\"initAllowedLocations.31\":[\"i2 = i2 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r39 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r39.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r9 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r8.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r9)\"],\"handleRequest.13\":[\"$r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r38)\"],\"handleRequest.17\":[\"$r10 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\"],\"handleRequest.32\":[\"$z3 = interfaceinvoke $r29.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r45 = \"HEAD\"\", \"$r31 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r31.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r36)\", \"goto [?= $r45 = \"HEAD\"]\", \"$r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r45 = \"HEAD\"\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\", \"$r45 = \"HEAD\"\", \"$r46 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r46)\", \"if $z4 == 0 goto $r12 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r12 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r12.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r13 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r13 != null goto interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\"],\"handleRequest.71\":[\"$r21 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r21.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r12)\"],\"handleRequest.74\":null,\"handleRequest.84\":[\"r47 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":[\"$i1 = interfaceinvoke r47.<java.util.List: int size()>()\", \"if $i1 != 1 goto $r16 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = interfaceinvoke r47.<java.util.List: java.lang.Object get(int)>(0)\", \"$r19 = (org.springframework.http.HttpRange) $r18\", \"r7 = virtualinvoke $r19.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r3)\", \"$r20 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"virtualinvoke $r20.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r7, r4, $r12)\", \"goto [?= (branch)]\"],\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r47, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r12)\"],\"handleRequest.90\":[\"$r40 := @caughtexception\", \"$r41 = new java.lang.StringBuilder\", \"specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l2 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2)\", \"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r44)\"],\"getMediaType.3\":[\"r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>(r2)\", \"if r3 == null goto $r4 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"return r3\"],\"getMediaType.7\":null,\"setHeaders.7\":[\"$z2 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\", \"if $z2 == 0 goto $r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\"],\"setHeaders.9\":[\"$r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Length\", $r14)\", \"goto [?= (branch)]\"],\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"$r13 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r13)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"if $z0 == 0 goto $z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\", \"$r11 = (org.springframework.web.servlet.resource.EncodedResource) r2\", \"$r12 = interfaceinvoke $r11.<org.springframework.web.servlet.resource.EncodedResource: java.lang.String getContentEncoding()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Encoding\", $r12)\", \"$z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\"],\"setHeaders.22\":[\"$r4 = new java.lang.StringBuilder\", \"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r6 = (org.springframework.web.servlet.resource.VersionedResource) r2\", \"$r7 = interfaceinvoke $r6.<org.springframework.web.servlet.resource.VersionedResource: java.lang.String getVersion()>()\", \"$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"ETag\", $r10)\"],\"<clinit>.0\":[\"$r0 = newarray (java.lang.Class)[1]\", \"$r1 = <java.lang.Long: java.lang.Class TYPE>\", \"$r0[0] = $r1\", \"$z0 = staticinvoke <org.springframework.util.ClassUtils: boolean hasMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class \"Ljavax/servlet/ServletResponse;\", \"setContentLengthLong\", $r0)\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable> = $z0\", \"$r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r2\"],\"getMediaType\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>\"}}",
            "contained": true,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.cleanDuplicateSlashes(String)",
            "diff": "{\"lhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"EmbeddedValueResolverAware\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String URL_RESOURCE_CHARSET_PREFIX>\",\"locationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues>\",\"locationCharsets\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"embeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.util.StringValueResolver embeddedValueResolver>\",\"contentLengthLongAvailable\":null,\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r7\", \"$r8 = new java.util.HashMap\", \"specialinvoke $r8.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets> = $r8\", \"$r9 = new java.util.ArrayList\", \"specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r9\", \"$r10 = new java.util.ArrayList\", \"specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r10\"],\"setLocationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setLocationValues(java.util.List)>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"setEmbeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)>\",\"afterPropertiesSet.1\":[\"specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>()\"],\"resolveResourceLocations\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>\",\"initAllowedLocations.7\":[\"i1 = $i0 - 1\", \"if i1 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i1 = i1 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto $r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"$r12 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r13 = newarray (org.springframework.core.io.Resource)[0]\", \"$r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13)\", \"$r15 = (org.springframework.core.io.Resource[]) $r14\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r15)\", \"$r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"if $r9 == null goto return\", \"$r10 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>($r10)\", \"$r11 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>($r11)\"],\"initAllowedLocations.31\":[\"i1 = i1 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r8 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r8)\"],\"handleRequest.13\":[\"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r36)\"],\"handleRequest.17\":[\"$r9 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r35 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r35.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r27 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r27.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r43 = \"HEAD\"\"],\"handleRequest.32\":[\"$r28 = new java.lang.StringBuilder\", \"specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()\", \"$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r29.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r34)\", \"goto [?= $r43 = \"HEAD\"]\", \"$r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r43 = \"HEAD\"\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r21 = new java.lang.StringBuilder\", \"specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()\", \"$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r26)\", \"$r43 = \"HEAD\"\", \"$r44 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>($r44)\", \"if $z4 == 0 goto $r11 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r20 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r20.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r11 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r11.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r12 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r12 != null goto $r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"if $r18 == null goto $z5 = 0\", \"$z5 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")]\", \"$z5 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")\"],\"handleRequest.71\":[\"$r19 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r19.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r11)\"],\"handleRequest.74\":[\"$r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"if $r13 == null goto $z6 = 0\", \"$z6 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")]\", \"$z6 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")\"],\"handleRequest.84\":[\"r45 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":null,\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r45, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r11)\"],\"handleRequest.90\":[\"$r38 := @caughtexception\", \"$r39 = new java.lang.StringBuilder\", \"specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()\", \"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l1 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1)\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r42)\"],\"getResource.4\":[\"r37 = (java.lang.String) $r4\", \"if r37 != null goto r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$r29 = new java.lang.IllegalStateException\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r32 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r35)\", \"throw $r29\", \"r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r38)\"],\"getResource.19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r38)\", \"if $z2 == 0 goto $z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"getResource.28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\"],\"getResource.33\":[\"$z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"r39 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r38, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r39)\", \"if $z5 == 0 goto r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z8 = interfaceinvoke $r22.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z8 == 0 goto return null\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\"],\"getResource.50\":[\"r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$z6 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r40)\", \"if $z6 == 0 goto (branch)\", \"$r15 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z7 = interfaceinvoke $r15.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z7 == 0 goto return null\", \"$r17 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r16 = new java.lang.StringBuilder\", \"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()\", \"$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r17.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r21)\", \"return null\", \"goto [?= $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r36 := @caughtexception\", \"$r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r42 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r41.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r42)\", \"$r44 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r45 = interfaceinvoke $r41.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r38, $r44)\", \"if r45 == null goto return r45\"],\"getResource.76\":[\"return r45\"],\"getResource.79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r41, $r14)\", \"r46 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r45)\", \"return r46\"],\"processPath.1\":[\"r2 := @parameter0: java.lang.String\", \"r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r2, \"\\\\\", \"/\")\", \"r4 = specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanDuplicateSlashes(java.lang.String)>(r3)\", \"$r1 = specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanLeadingSlash(java.lang.String)>(r4)\", \"return $r1\"],\"cleanDuplicateSlashes\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanDuplicateSlashes(java.lang.String)>\",\"cleanLeadingSlash\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanLeadingSlash(java.lang.String)>\",\"getMediaType.3\":[\"$r3 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"if $r3 == null goto $r5 = null\"],\"getMediaType.7\":[\"goto [?= return $r5]\", \"$r5 = null\"],\"setHeaders.7\":null,\"setHeaders.9\":null,\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"$r17 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r17)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"if $z0 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\", \"$r10 = (org.springframework.web.servlet.resource.HttpResource) r2\", \"r4 = interfaceinvoke $r10.<org.springframework.web.servlet.resource.HttpResource: org.springframework.http.HttpHeaders getResponseHeaders()>()\", \"$r11 = virtualinvoke r4.<org.springframework.http.HttpHeaders: java.util.Set entrySet()>()\", \"r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\"],\"setHeaders.22\":[\"$r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (java.util.Map$Entry) $r12\", \"$r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()\", \"r7 = (java.lang.String) $r13\", \"z3 = 1\", \"$r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()\", \"$r15 = (java.util.List) $r14\", \"r8 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>()\", \"$z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()\", \"if $z2 == 0 goto (branch)\", \"$r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()\", \"r9 = (java.lang.String) $r16\", \"if z3 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"goto [?= z3 = 0]\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"z3 = 0\", \"goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\"],\"<clinit>.0\":[\"$r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r0\"],\"getMediaType\":null},\"rhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":null,\"locationValues\":null,\"locationCharsets\":null,\"urlPathHelper\":null,\"embeddedValueResolver\":null,\"contentLengthLongAvailable\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\",\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r7\", \"$r8 = new java.util.ArrayList\", \"specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r8\"],\"setLocationValues\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"setEmbeddedValueResolver\":null,\"afterPropertiesSet.1\":null,\"resolveResourceLocations\":null,\"initAllowedLocations.7\":[\"i2 = $i0 - 1\", \"if i2 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i2 = i2 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto return\", \"$r9 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r10 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$i1 = interfaceinvoke $r10.<java.util.List: int size()>()\", \"$r11 = newarray (org.springframework.core.io.Resource)[$i1]\", \"$r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)\", \"$r13 = (org.springframework.core.io.Resource[]) $r12\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r13)\"],\"initAllowedLocations.31\":[\"i2 = i2 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r39 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r39.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r9 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r8.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r9)\"],\"handleRequest.13\":[\"$r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r38)\"],\"handleRequest.17\":[\"$r10 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\"],\"handleRequest.32\":[\"$z3 = interfaceinvoke $r29.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r45 = \"HEAD\"\", \"$r31 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r31.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r36)\", \"goto [?= $r45 = \"HEAD\"]\", \"$r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r45 = \"HEAD\"\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\", \"$r45 = \"HEAD\"\", \"$r46 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r46)\", \"if $z4 == 0 goto $r12 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r12 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r12.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r13 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r13 != null goto interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\"],\"handleRequest.71\":[\"$r21 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r21.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r12)\"],\"handleRequest.74\":null,\"handleRequest.84\":[\"r47 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":[\"$i1 = interfaceinvoke r47.<java.util.List: int size()>()\", \"if $i1 != 1 goto $r16 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = interfaceinvoke r47.<java.util.List: java.lang.Object get(int)>(0)\", \"$r19 = (org.springframework.http.HttpRange) $r18\", \"r7 = virtualinvoke $r19.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r3)\", \"$r20 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"virtualinvoke $r20.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r7, r4, $r12)\", \"goto [?= (branch)]\"],\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r47, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r12)\"],\"handleRequest.90\":[\"$r40 := @caughtexception\", \"$r41 = new java.lang.StringBuilder\", \"specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l2 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2)\", \"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r44)\"],\"getResource.4\":[\"r31 = (java.lang.String) $r4\", \"if r31 != null goto r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$r23 = new java.lang.IllegalStateException\", \"$r24 = new java.lang.StringBuilder\", \"specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r26 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29)\", \"throw $r23\", \"r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r32)\"],\"getResource.19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r32)\", \"if $z2 == 0 goto $z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"getResource.28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\"],\"getResource.33\":[\"$z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r15 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r32, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>($r15)\", \"if $z5 == 0 goto (branch)\", \"$r16 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z6 = interfaceinvoke $r16.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z6 == 0 goto return null\", \"$r18 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r17 = new java.lang.StringBuilder\", \"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()\", \"$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r18.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r22)\"],\"getResource.50\":[\"goto [?= $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r30 := @caughtexception\", \"$r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r34 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r33.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r34)\", \"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r37 = interfaceinvoke $r33.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r32, $r36)\", \"if r37 == null goto return r37\"],\"getResource.76\":[\"return r37\"],\"getResource.79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r33, $r14)\", \"r38 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r37)\", \"return r38\"],\"processPath.1\":[\"r11 := @parameter0: java.lang.String\", \"z1 = 0\", \"i4 = 0\", \"$i0 = virtualinvoke r11.<java.lang.String: int length()>()\", \"if i4 >= $i0 goto (branch)\", \"$c1 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c1 != 47 goto $c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"z1 = 1\", \"goto [?= i4 = i4 + 1]\", \"$c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c2 <= 32 goto i4 = i4 + 1\", \"$c3 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c3 == 127 goto i4 = i4 + 1\", \"if i4 == 0 goto return r11\", \"if i4 != 1 goto (branch)\", \"if z1 == 0 goto (branch)\", \"return r11\", \"if z1 == 0 goto $r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"$r7 = new java.lang.StringBuilder\", \"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r9 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= r13 = $r12]\", \"$r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"r13 = $r12\", \"$r1 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z0 == 0 goto return r13\", \"$r3 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r2 = new java.lang.StringBuilder\", \"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Path after trimming leading \\'/\\' and control characters: \")\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)\", \"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r6)\", \"return r13\", \"i4 = i4 + 1\", \"goto [?= $i0 = virtualinvoke r11.<java.lang.String: int length()>()]\", \"if z1 == 0 goto $r14 = \"\"\", \"$r14 = \"/\"\", \"goto [?= return $r14]\", \"$r14 = \"\"\", \"return $r14\"],\"cleanDuplicateSlashes\":null,\"cleanLeadingSlash\":null,\"getMediaType.3\":[\"r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>(r2)\", \"if r3 == null goto $r4 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"return r3\"],\"getMediaType.7\":null,\"setHeaders.7\":[\"$z2 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\", \"if $z2 == 0 goto $r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\"],\"setHeaders.9\":[\"$r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Length\", $r14)\", \"goto [?= (branch)]\"],\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"$r13 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r13)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"if $z0 == 0 goto $z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\", \"$r11 = (org.springframework.web.servlet.resource.EncodedResource) r2\", \"$r12 = interfaceinvoke $r11.<org.springframework.web.servlet.resource.EncodedResource: java.lang.String getContentEncoding()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Encoding\", $r12)\", \"$z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\"],\"setHeaders.22\":[\"$r4 = new java.lang.StringBuilder\", \"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r6 = (org.springframework.web.servlet.resource.VersionedResource) r2\", \"$r7 = interfaceinvoke $r6.<org.springframework.web.servlet.resource.VersionedResource: java.lang.String getVersion()>()\", \"$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"ETag\", $r10)\"],\"<clinit>.0\":[\"$r0 = newarray (java.lang.Class)[1]\", \"$r1 = <java.lang.Long: java.lang.Class TYPE>\", \"$r0[0] = $r1\", \"$z0 = staticinvoke <org.springframework.util.ClassUtils: boolean hasMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class \"Ljavax/servlet/ServletResponse;\", \"setContentLengthLong\", $r0)\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable> = $z0\", \"$r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r2\"],\"getMediaType\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>\"}}",
            "contained": true,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.cleanLeadingSlash(String)",
            "diff": "{\"lhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"EmbeddedValueResolverAware\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String URL_RESOURCE_CHARSET_PREFIX>\",\"locationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues>\",\"locationCharsets\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"embeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.util.StringValueResolver embeddedValueResolver>\",\"contentLengthLongAvailable\":null,\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r7\", \"$r8 = new java.util.HashMap\", \"specialinvoke $r8.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets> = $r8\", \"$r9 = new java.util.ArrayList\", \"specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r9\", \"$r10 = new java.util.ArrayList\", \"specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r10\"],\"setLocationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setLocationValues(java.util.List)>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"setEmbeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)>\",\"afterPropertiesSet.1\":[\"specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>()\"],\"resolveResourceLocations\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>\",\"initAllowedLocations.7\":[\"i1 = $i0 - 1\", \"if i1 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i1 = i1 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto $r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"$r12 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r13 = newarray (org.springframework.core.io.Resource)[0]\", \"$r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13)\", \"$r15 = (org.springframework.core.io.Resource[]) $r14\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r15)\", \"$r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"if $r9 == null goto return\", \"$r10 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>($r10)\", \"$r11 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>($r11)\"],\"initAllowedLocations.31\":[\"i1 = i1 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r8 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r8)\"],\"handleRequest.13\":[\"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r36)\"],\"handleRequest.17\":[\"$r9 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r35 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r35.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r27 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r27.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r43 = \"HEAD\"\"],\"handleRequest.32\":[\"$r28 = new java.lang.StringBuilder\", \"specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()\", \"$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r29.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r34)\", \"goto [?= $r43 = \"HEAD\"]\", \"$r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r43 = \"HEAD\"\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r21 = new java.lang.StringBuilder\", \"specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()\", \"$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r26)\", \"$r43 = \"HEAD\"\", \"$r44 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>($r44)\", \"if $z4 == 0 goto $r11 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r20 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r20.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r11 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r11.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r12 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r12 != null goto $r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"if $r18 == null goto $z5 = 0\", \"$z5 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")]\", \"$z5 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")\"],\"handleRequest.71\":[\"$r19 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r19.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r11)\"],\"handleRequest.74\":[\"$r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"if $r13 == null goto $z6 = 0\", \"$z6 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")]\", \"$z6 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")\"],\"handleRequest.84\":[\"r45 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":null,\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r45, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r11)\"],\"handleRequest.90\":[\"$r38 := @caughtexception\", \"$r39 = new java.lang.StringBuilder\", \"specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()\", \"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l1 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1)\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r42)\"],\"getMediaType.3\":[\"$r3 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"if $r3 == null goto $r5 = null\"],\"getMediaType.7\":[\"goto [?= return $r5]\", \"$r5 = null\"],\"setHeaders.7\":null,\"setHeaders.9\":null,\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"$r17 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r17)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"if $z0 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\", \"$r10 = (org.springframework.web.servlet.resource.HttpResource) r2\", \"r4 = interfaceinvoke $r10.<org.springframework.web.servlet.resource.HttpResource: org.springframework.http.HttpHeaders getResponseHeaders()>()\", \"$r11 = virtualinvoke r4.<org.springframework.http.HttpHeaders: java.util.Set entrySet()>()\", \"r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\"],\"setHeaders.22\":[\"$r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (java.util.Map$Entry) $r12\", \"$r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()\", \"r7 = (java.lang.String) $r13\", \"z3 = 1\", \"$r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()\", \"$r15 = (java.util.List) $r14\", \"r8 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>()\", \"$z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()\", \"if $z2 == 0 goto (branch)\", \"$r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()\", \"r9 = (java.lang.String) $r16\", \"if z3 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"goto [?= z3 = 0]\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"z3 = 0\", \"goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\"],\"<clinit>.0\":[\"$r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r0\"],\"getMediaType\":null},\"rhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":null,\"locationValues\":null,\"locationCharsets\":null,\"urlPathHelper\":null,\"embeddedValueResolver\":null,\"contentLengthLongAvailable\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\",\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r7\", \"$r8 = new java.util.ArrayList\", \"specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r8\"],\"setLocationValues\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"setEmbeddedValueResolver\":null,\"afterPropertiesSet.1\":null,\"resolveResourceLocations\":null,\"initAllowedLocations.7\":[\"i2 = $i0 - 1\", \"if i2 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i2 = i2 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto return\", \"$r9 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r10 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$i1 = interfaceinvoke $r10.<java.util.List: int size()>()\", \"$r11 = newarray (org.springframework.core.io.Resource)[$i1]\", \"$r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)\", \"$r13 = (org.springframework.core.io.Resource[]) $r12\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r13)\"],\"initAllowedLocations.31\":[\"i2 = i2 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r39 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r39.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r9 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r8.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r9)\"],\"handleRequest.13\":[\"$r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r38)\"],\"handleRequest.17\":[\"$r10 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\"],\"handleRequest.32\":[\"$z3 = interfaceinvoke $r29.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r45 = \"HEAD\"\", \"$r31 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r31.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r36)\", \"goto [?= $r45 = \"HEAD\"]\", \"$r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r45 = \"HEAD\"\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\", \"$r45 = \"HEAD\"\", \"$r46 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r46)\", \"if $z4 == 0 goto $r12 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r12 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r12.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r13 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r13 != null goto interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\"],\"handleRequest.71\":[\"$r21 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r21.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r12)\"],\"handleRequest.74\":null,\"handleRequest.84\":[\"r47 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":[\"$i1 = interfaceinvoke r47.<java.util.List: int size()>()\", \"if $i1 != 1 goto $r16 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = interfaceinvoke r47.<java.util.List: java.lang.Object get(int)>(0)\", \"$r19 = (org.springframework.http.HttpRange) $r18\", \"r7 = virtualinvoke $r19.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r3)\", \"$r20 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"virtualinvoke $r20.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r7, r4, $r12)\", \"goto [?= (branch)]\"],\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r47, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r12)\"],\"handleRequest.90\":[\"$r40 := @caughtexception\", \"$r41 = new java.lang.StringBuilder\", \"specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l2 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2)\", \"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r44)\"],\"getMediaType.3\":[\"r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>(r2)\", \"if r3 == null goto $r4 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"return r3\"],\"getMediaType.7\":null,\"setHeaders.7\":[\"$z2 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\", \"if $z2 == 0 goto $r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\"],\"setHeaders.9\":[\"$r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Length\", $r14)\", \"goto [?= (branch)]\"],\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"$r13 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r13)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"if $z0 == 0 goto $z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\", \"$r11 = (org.springframework.web.servlet.resource.EncodedResource) r2\", \"$r12 = interfaceinvoke $r11.<org.springframework.web.servlet.resource.EncodedResource: java.lang.String getContentEncoding()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Encoding\", $r12)\", \"$z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\"],\"setHeaders.22\":[\"$r4 = new java.lang.StringBuilder\", \"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r6 = (org.springframework.web.servlet.resource.VersionedResource) r2\", \"$r7 = interfaceinvoke $r6.<org.springframework.web.servlet.resource.VersionedResource: java.lang.String getVersion()>()\", \"$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"ETag\", $r10)\"],\"<clinit>.0\":[\"$r0 = newarray (java.lang.Class)[1]\", \"$r1 = <java.lang.Long: java.lang.Class TYPE>\", \"$r0[0] = $r1\", \"$z0 = staticinvoke <org.springframework.util.ClassUtils: boolean hasMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class \"Ljavax/servlet/ServletResponse;\", \"setContentLengthLong\", $r0)\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable> = $z0\", \"$r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r2\"],\"getMediaType\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>\"}}",
            "contained": true,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.cleanLeadingSlash(String)",
            "diff": "{\"lhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"EmbeddedValueResolverAware\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String URL_RESOURCE_CHARSET_PREFIX>\",\"locationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues>\",\"locationCharsets\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"embeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.util.StringValueResolver embeddedValueResolver>\",\"contentLengthLongAvailable\":null,\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r7\", \"$r8 = new java.util.HashMap\", \"specialinvoke $r8.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets> = $r8\", \"$r9 = new java.util.ArrayList\", \"specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r9\", \"$r10 = new java.util.ArrayList\", \"specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r10\"],\"setLocationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setLocationValues(java.util.List)>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"setEmbeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)>\",\"afterPropertiesSet.1\":[\"specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>()\"],\"resolveResourceLocations\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>\",\"initAllowedLocations.7\":[\"i1 = $i0 - 1\", \"if i1 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i1 = i1 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto $r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"$r12 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r13 = newarray (org.springframework.core.io.Resource)[0]\", \"$r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13)\", \"$r15 = (org.springframework.core.io.Resource[]) $r14\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r15)\", \"$r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"if $r9 == null goto return\", \"$r10 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>($r10)\", \"$r11 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>($r11)\"],\"initAllowedLocations.31\":[\"i1 = i1 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r8 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r8)\"],\"handleRequest.13\":[\"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r36)\"],\"handleRequest.17\":[\"$r9 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r35 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r35.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r27 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r27.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r43 = \"HEAD\"\"],\"handleRequest.32\":[\"$r28 = new java.lang.StringBuilder\", \"specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()\", \"$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r29.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r34)\", \"goto [?= $r43 = \"HEAD\"]\", \"$r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r43 = \"HEAD\"\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r21 = new java.lang.StringBuilder\", \"specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()\", \"$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r26)\", \"$r43 = \"HEAD\"\", \"$r44 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>($r44)\", \"if $z4 == 0 goto $r11 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r20 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r20.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r11 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r11.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r12 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r12 != null goto $r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"if $r18 == null goto $z5 = 0\", \"$z5 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")]\", \"$z5 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")\"],\"handleRequest.71\":[\"$r19 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r19.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r11)\"],\"handleRequest.74\":[\"$r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"if $r13 == null goto $z6 = 0\", \"$z6 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")]\", \"$z6 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")\"],\"handleRequest.84\":[\"r45 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":null,\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r45, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r11)\"],\"handleRequest.90\":[\"$r38 := @caughtexception\", \"$r39 = new java.lang.StringBuilder\", \"specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()\", \"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l1 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1)\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r42)\"],\"getResource.4\":[\"r37 = (java.lang.String) $r4\", \"if r37 != null goto r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$r29 = new java.lang.IllegalStateException\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r32 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r35)\", \"throw $r29\", \"r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r38)\"],\"getResource.19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r38)\", \"if $z2 == 0 goto $z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"getResource.28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\"],\"getResource.33\":[\"$z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"r39 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r38, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r39)\", \"if $z5 == 0 goto r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z8 = interfaceinvoke $r22.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z8 == 0 goto return null\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\"],\"getResource.50\":[\"r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$z6 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r40)\", \"if $z6 == 0 goto (branch)\", \"$r15 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z7 = interfaceinvoke $r15.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z7 == 0 goto return null\", \"$r17 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r16 = new java.lang.StringBuilder\", \"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()\", \"$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r17.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r21)\", \"return null\", \"goto [?= $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r36 := @caughtexception\", \"$r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r42 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r41.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r42)\", \"$r44 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r45 = interfaceinvoke $r41.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r38, $r44)\", \"if r45 == null goto return r45\"],\"getResource.76\":[\"return r45\"],\"getResource.79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r41, $r14)\", \"r46 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r45)\", \"return r46\"],\"processPath.1\":[\"r2 := @parameter0: java.lang.String\", \"r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r2, \"\\\\\", \"/\")\", \"r4 = specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanDuplicateSlashes(java.lang.String)>(r3)\", \"$r1 = specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanLeadingSlash(java.lang.String)>(r4)\", \"return $r1\"],\"cleanDuplicateSlashes\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanDuplicateSlashes(java.lang.String)>\",\"cleanLeadingSlash\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanLeadingSlash(java.lang.String)>\",\"getMediaType.3\":[\"$r3 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"if $r3 == null goto $r5 = null\"],\"getMediaType.7\":[\"goto [?= return $r5]\", \"$r5 = null\"],\"setHeaders.7\":null,\"setHeaders.9\":null,\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"$r17 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r17)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"if $z0 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\", \"$r10 = (org.springframework.web.servlet.resource.HttpResource) r2\", \"r4 = interfaceinvoke $r10.<org.springframework.web.servlet.resource.HttpResource: org.springframework.http.HttpHeaders getResponseHeaders()>()\", \"$r11 = virtualinvoke r4.<org.springframework.http.HttpHeaders: java.util.Set entrySet()>()\", \"r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\"],\"setHeaders.22\":[\"$r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (java.util.Map$Entry) $r12\", \"$r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()\", \"r7 = (java.lang.String) $r13\", \"z3 = 1\", \"$r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()\", \"$r15 = (java.util.List) $r14\", \"r8 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>()\", \"$z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()\", \"if $z2 == 0 goto (branch)\", \"$r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()\", \"r9 = (java.lang.String) $r16\", \"if z3 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"goto [?= z3 = 0]\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"z3 = 0\", \"goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\"],\"<clinit>.0\":[\"$r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r0\"],\"getMediaType\":null},\"rhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":null,\"locationValues\":null,\"locationCharsets\":null,\"urlPathHelper\":null,\"embeddedValueResolver\":null,\"contentLengthLongAvailable\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\",\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r7\", \"$r8 = new java.util.ArrayList\", \"specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r8\"],\"setLocationValues\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"setEmbeddedValueResolver\":null,\"afterPropertiesSet.1\":null,\"resolveResourceLocations\":null,\"initAllowedLocations.7\":[\"i2 = $i0 - 1\", \"if i2 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i2 = i2 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto return\", \"$r9 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r10 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$i1 = interfaceinvoke $r10.<java.util.List: int size()>()\", \"$r11 = newarray (org.springframework.core.io.Resource)[$i1]\", \"$r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)\", \"$r13 = (org.springframework.core.io.Resource[]) $r12\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r13)\"],\"initAllowedLocations.31\":[\"i2 = i2 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r39 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r39.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r9 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r8.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r9)\"],\"handleRequest.13\":[\"$r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r38)\"],\"handleRequest.17\":[\"$r10 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\"],\"handleRequest.32\":[\"$z3 = interfaceinvoke $r29.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r45 = \"HEAD\"\", \"$r31 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r31.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r36)\", \"goto [?= $r45 = \"HEAD\"]\", \"$r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r45 = \"HEAD\"\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\", \"$r45 = \"HEAD\"\", \"$r46 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r46)\", \"if $z4 == 0 goto $r12 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r12 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r12.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r13 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r13 != null goto interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\"],\"handleRequest.71\":[\"$r21 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r21.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r12)\"],\"handleRequest.74\":null,\"handleRequest.84\":[\"r47 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":[\"$i1 = interfaceinvoke r47.<java.util.List: int size()>()\", \"if $i1 != 1 goto $r16 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = interfaceinvoke r47.<java.util.List: java.lang.Object get(int)>(0)\", \"$r19 = (org.springframework.http.HttpRange) $r18\", \"r7 = virtualinvoke $r19.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r3)\", \"$r20 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"virtualinvoke $r20.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r7, r4, $r12)\", \"goto [?= (branch)]\"],\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r47, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r12)\"],\"handleRequest.90\":[\"$r40 := @caughtexception\", \"$r41 = new java.lang.StringBuilder\", \"specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l2 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2)\", \"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r44)\"],\"getResource.4\":[\"r31 = (java.lang.String) $r4\", \"if r31 != null goto r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$r23 = new java.lang.IllegalStateException\", \"$r24 = new java.lang.StringBuilder\", \"specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r26 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29)\", \"throw $r23\", \"r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r32)\"],\"getResource.19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r32)\", \"if $z2 == 0 goto $z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"getResource.28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\"],\"getResource.33\":[\"$z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r15 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r32, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>($r15)\", \"if $z5 == 0 goto (branch)\", \"$r16 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z6 = interfaceinvoke $r16.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z6 == 0 goto return null\", \"$r18 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r17 = new java.lang.StringBuilder\", \"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()\", \"$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r18.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r22)\"],\"getResource.50\":[\"goto [?= $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r30 := @caughtexception\", \"$r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r34 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r33.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r34)\", \"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r37 = interfaceinvoke $r33.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r32, $r36)\", \"if r37 == null goto return r37\"],\"getResource.76\":[\"return r37\"],\"getResource.79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r33, $r14)\", \"r38 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r37)\", \"return r38\"],\"processPath.1\":[\"r11 := @parameter0: java.lang.String\", \"z1 = 0\", \"i4 = 0\", \"$i0 = virtualinvoke r11.<java.lang.String: int length()>()\", \"if i4 >= $i0 goto (branch)\", \"$c1 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c1 != 47 goto $c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"z1 = 1\", \"goto [?= i4 = i4 + 1]\", \"$c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c2 <= 32 goto i4 = i4 + 1\", \"$c3 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c3 == 127 goto i4 = i4 + 1\", \"if i4 == 0 goto return r11\", \"if i4 != 1 goto (branch)\", \"if z1 == 0 goto (branch)\", \"return r11\", \"if z1 == 0 goto $r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"$r7 = new java.lang.StringBuilder\", \"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r9 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= r13 = $r12]\", \"$r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"r13 = $r12\", \"$r1 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z0 == 0 goto return r13\", \"$r3 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r2 = new java.lang.StringBuilder\", \"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Path after trimming leading \\'/\\' and control characters: \")\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)\", \"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r6)\", \"return r13\", \"i4 = i4 + 1\", \"goto [?= $i0 = virtualinvoke r11.<java.lang.String: int length()>()]\", \"if z1 == 0 goto $r14 = \"\"\", \"$r14 = \"/\"\", \"goto [?= return $r14]\", \"$r14 = \"\"\", \"return $r14\"],\"cleanDuplicateSlashes\":null,\"cleanLeadingSlash\":null,\"getMediaType.3\":[\"r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>(r2)\", \"if r3 == null goto $r4 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"return r3\"],\"getMediaType.7\":null,\"setHeaders.7\":[\"$z2 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\", \"if $z2 == 0 goto $r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\"],\"setHeaders.9\":[\"$r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Length\", $r14)\", \"goto [?= (branch)]\"],\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"$r13 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r13)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"if $z0 == 0 goto $z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\", \"$r11 = (org.springframework.web.servlet.resource.EncodedResource) r2\", \"$r12 = interfaceinvoke $r11.<org.springframework.web.servlet.resource.EncodedResource: java.lang.String getContentEncoding()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Encoding\", $r12)\", \"$z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\"],\"setHeaders.22\":[\"$r4 = new java.lang.StringBuilder\", \"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r6 = (org.springframework.web.servlet.resource.VersionedResource) r2\", \"$r7 = interfaceinvoke $r6.<org.springframework.web.servlet.resource.VersionedResource: java.lang.String getVersion()>()\", \"$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"ETag\", $r10)\"],\"<clinit>.0\":[\"$r0 = newarray (java.lang.Class)[1]\", \"$r1 = <java.lang.Long: java.lang.Class TYPE>\", \"$r0[0] = $r1\", \"$z0 = staticinvoke <org.springframework.util.ClassUtils: boolean hasMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class \"Ljavax/servlet/ServletResponse;\", \"setContentLengthLong\", $r0)\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable> = $z0\", \"$r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r2\"],\"getMediaType\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>\"}}",
            "contained": true,
            "commit": "91b803a2310344d925e5d4b1709bbcea9037554",
            "ref_file": "/data4/test_compare_script/91b803a2310344d925e5d4b1709bbcea9037554/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.cleanLeadingSlash(String)",
            "diff": "{\"lhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"EmbeddedValueResolverAware\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String URL_RESOURCE_CHARSET_PREFIX>\",\"locationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues>\",\"locationCharsets\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"embeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.util.StringValueResolver embeddedValueResolver>\",\"contentLengthLongAvailable\":null,\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r7\", \"$r8 = new java.util.HashMap\", \"specialinvoke $r8.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets> = $r8\", \"$r9 = new java.util.ArrayList\", \"specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r9\", \"$r10 = new java.util.ArrayList\", \"specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r10\"],\"setLocationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setLocationValues(java.util.List)>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"setEmbeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)>\",\"afterPropertiesSet.1\":[\"specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>()\"],\"resolveResourceLocations\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>\",\"initAllowedLocations.7\":[\"i1 = $i0 - 1\", \"if i1 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i1 = i1 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto $r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"$r12 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r13 = newarray (org.springframework.core.io.Resource)[0]\", \"$r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13)\", \"$r15 = (org.springframework.core.io.Resource[]) $r14\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r15)\", \"$r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"if $r9 == null goto return\", \"$r10 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>($r10)\", \"$r11 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>($r11)\"],\"initAllowedLocations.31\":[\"i1 = i1 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r8 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r8)\"],\"handleRequest.13\":[\"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r36)\"],\"handleRequest.17\":[\"$r9 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r35 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r35.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r27 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r27.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r43 = \"HEAD\"\"],\"handleRequest.32\":[\"$r28 = new java.lang.StringBuilder\", \"specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()\", \"$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r29.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r34)\", \"goto [?= $r43 = \"HEAD\"]\", \"$r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r43 = \"HEAD\"\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r21 = new java.lang.StringBuilder\", \"specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()\", \"$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r26)\", \"$r43 = \"HEAD\"\", \"$r44 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>($r44)\", \"if $z4 == 0 goto $r11 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r20 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r20.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r11 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r11.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r12 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r12 != null goto $r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"if $r18 == null goto $z5 = 0\", \"$z5 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")]\", \"$z5 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")\"],\"handleRequest.71\":[\"$r19 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r19.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r11)\"],\"handleRequest.74\":[\"$r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"if $r13 == null goto $z6 = 0\", \"$z6 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")]\", \"$z6 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")\"],\"handleRequest.84\":[\"r45 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":null,\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r45, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r11)\"],\"handleRequest.90\":[\"$r38 := @caughtexception\", \"$r39 = new java.lang.StringBuilder\", \"specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()\", \"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l1 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1)\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r42)\"],\"getResource.4\":[\"r37 = (java.lang.String) $r4\", \"if r37 != null goto r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$r29 = new java.lang.IllegalStateException\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r32 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r35)\", \"throw $r29\", \"r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r38)\"],\"getResource.19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r38)\", \"if $z2 == 0 goto $z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"getResource.28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\"],\"getResource.33\":[\"$z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"r39 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r38, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r39)\", \"if $z5 == 0 goto r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z8 = interfaceinvoke $r22.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z8 == 0 goto return null\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\"],\"getResource.50\":[\"r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$z6 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r40)\", \"if $z6 == 0 goto (branch)\", \"$r15 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z7 = interfaceinvoke $r15.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z7 == 0 goto return null\", \"$r17 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r16 = new java.lang.StringBuilder\", \"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()\", \"$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r17.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r21)\", \"return null\", \"goto [?= $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r36 := @caughtexception\", \"$r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r42 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r41.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r42)\", \"$r44 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r45 = interfaceinvoke $r41.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r38, $r44)\", \"if r45 == null goto return r45\"],\"getResource.76\":[\"return r45\"],\"getResource.79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r41, $r14)\", \"r46 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r45)\", \"return r46\"],\"processPath.1\":[\"r2 := @parameter0: java.lang.String\", \"r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r2, \"\\\\\", \"/\")\", \"r4 = specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanDuplicateSlashes(java.lang.String)>(r3)\", \"$r1 = specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanLeadingSlash(java.lang.String)>(r4)\", \"return $r1\"],\"cleanDuplicateSlashes\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanDuplicateSlashes(java.lang.String)>\",\"cleanLeadingSlash\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanLeadingSlash(java.lang.String)>\",\"getMediaType.3\":[\"$r3 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"if $r3 == null goto $r5 = null\"],\"getMediaType.7\":[\"goto [?= return $r5]\", \"$r5 = null\"],\"setHeaders.7\":null,\"setHeaders.9\":null,\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"$r17 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r17)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"if $z0 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\", \"$r10 = (org.springframework.web.servlet.resource.HttpResource) r2\", \"r4 = interfaceinvoke $r10.<org.springframework.web.servlet.resource.HttpResource: org.springframework.http.HttpHeaders getResponseHeaders()>()\", \"$r11 = virtualinvoke r4.<org.springframework.http.HttpHeaders: java.util.Set entrySet()>()\", \"r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\"],\"setHeaders.22\":[\"$r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (java.util.Map$Entry) $r12\", \"$r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()\", \"r7 = (java.lang.String) $r13\", \"z3 = 1\", \"$r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()\", \"$r15 = (java.util.List) $r14\", \"r8 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>()\", \"$z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()\", \"if $z2 == 0 goto (branch)\", \"$r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()\", \"r9 = (java.lang.String) $r16\", \"if z3 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"goto [?= z3 = 0]\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"z3 = 0\", \"goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\"],\"<clinit>.0\":[\"$r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r0\"],\"getMediaType\":null},\"rhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":null,\"locationValues\":null,\"locationCharsets\":null,\"urlPathHelper\":null,\"embeddedValueResolver\":null,\"contentLengthLongAvailable\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\",\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r7\", \"$r8 = new java.util.ArrayList\", \"specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r8\"],\"setLocationValues\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"setEmbeddedValueResolver\":null,\"afterPropertiesSet.1\":null,\"resolveResourceLocations\":null,\"initAllowedLocations.7\":[\"i2 = $i0 - 1\", \"if i2 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i2 = i2 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto return\", \"$r9 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r10 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$i1 = interfaceinvoke $r10.<java.util.List: int size()>()\", \"$r11 = newarray (org.springframework.core.io.Resource)[$i1]\", \"$r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)\", \"$r13 = (org.springframework.core.io.Resource[]) $r12\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r13)\"],\"initAllowedLocations.31\":[\"i2 = i2 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r39 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r39.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r9 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r8.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r9)\"],\"handleRequest.13\":[\"$r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r38)\"],\"handleRequest.17\":[\"$r10 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\"],\"handleRequest.32\":[\"$z3 = interfaceinvoke $r29.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r45 = \"HEAD\"\", \"$r31 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r31.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r36)\", \"goto [?= $r45 = \"HEAD\"]\", \"$r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r45 = \"HEAD\"\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\", \"$r45 = \"HEAD\"\", \"$r46 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r46)\", \"if $z4 == 0 goto $r12 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r12 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r12.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r13 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r13 != null goto interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\"],\"handleRequest.71\":[\"$r21 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r21.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r12)\"],\"handleRequest.74\":null,\"handleRequest.84\":[\"r47 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":[\"$i1 = interfaceinvoke r47.<java.util.List: int size()>()\", \"if $i1 != 1 goto $r16 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = interfaceinvoke r47.<java.util.List: java.lang.Object get(int)>(0)\", \"$r19 = (org.springframework.http.HttpRange) $r18\", \"r7 = virtualinvoke $r19.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r3)\", \"$r20 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"virtualinvoke $r20.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r7, r4, $r12)\", \"goto [?= (branch)]\"],\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r47, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r12)\"],\"handleRequest.90\":[\"$r40 := @caughtexception\", \"$r41 = new java.lang.StringBuilder\", \"specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l2 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2)\", \"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r44)\"],\"getResource.4\":[\"r31 = (java.lang.String) $r4\", \"if r31 != null goto r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$r23 = new java.lang.IllegalStateException\", \"$r24 = new java.lang.StringBuilder\", \"specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r26 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29)\", \"throw $r23\", \"r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r32)\"],\"getResource.19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r32)\", \"if $z2 == 0 goto $z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"getResource.28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\"],\"getResource.33\":[\"$z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r15 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r32, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>($r15)\", \"if $z5 == 0 goto (branch)\", \"$r16 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z6 = interfaceinvoke $r16.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z6 == 0 goto return null\", \"$r18 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r17 = new java.lang.StringBuilder\", \"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()\", \"$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r18.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r22)\"],\"getResource.50\":[\"goto [?= $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r30 := @caughtexception\", \"$r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r34 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r33.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r34)\", \"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r37 = interfaceinvoke $r33.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r32, $r36)\", \"if r37 == null goto return r37\"],\"getResource.76\":[\"return r37\"],\"getResource.79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r33, $r14)\", \"r38 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r37)\", \"return r38\"],\"processPath.1\":[\"r11 := @parameter0: java.lang.String\", \"z1 = 0\", \"i4 = 0\", \"$i0 = virtualinvoke r11.<java.lang.String: int length()>()\", \"if i4 >= $i0 goto (branch)\", \"$c1 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c1 != 47 goto $c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"z1 = 1\", \"goto [?= i4 = i4 + 1]\", \"$c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c2 <= 32 goto i4 = i4 + 1\", \"$c3 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c3 == 127 goto i4 = i4 + 1\", \"if i4 == 0 goto return r11\", \"if i4 != 1 goto (branch)\", \"if z1 == 0 goto (branch)\", \"return r11\", \"if z1 == 0 goto $r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"$r7 = new java.lang.StringBuilder\", \"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r9 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= r13 = $r12]\", \"$r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"r13 = $r12\", \"$r1 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z0 == 0 goto return r13\", \"$r3 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r2 = new java.lang.StringBuilder\", \"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Path after trimming leading \\'/\\' and control characters: \")\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)\", \"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r6)\", \"return r13\", \"i4 = i4 + 1\", \"goto [?= $i0 = virtualinvoke r11.<java.lang.String: int length()>()]\", \"if z1 == 0 goto $r14 = \"\"\", \"$r14 = \"/\"\", \"goto [?= return $r14]\", \"$r14 = \"\"\", \"return $r14\"],\"cleanDuplicateSlashes\":null,\"cleanLeadingSlash\":null,\"getMediaType.3\":[\"r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>(r2)\", \"if r3 == null goto $r4 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"return r3\"],\"getMediaType.7\":null,\"setHeaders.7\":[\"$z2 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\", \"if $z2 == 0 goto $r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\"],\"setHeaders.9\":[\"$r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Length\", $r14)\", \"goto [?= (branch)]\"],\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"$r13 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r13)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"if $z0 == 0 goto $z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\", \"$r11 = (org.springframework.web.servlet.resource.EncodedResource) r2\", \"$r12 = interfaceinvoke $r11.<org.springframework.web.servlet.resource.EncodedResource: java.lang.String getContentEncoding()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Encoding\", $r12)\", \"$z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\"],\"setHeaders.22\":[\"$r4 = new java.lang.StringBuilder\", \"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r6 = (org.springframework.web.servlet.resource.VersionedResource) r2\", \"$r7 = interfaceinvoke $r6.<org.springframework.web.servlet.resource.VersionedResource: java.lang.String getVersion()>()\", \"$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"ETag\", $r10)\"],\"<clinit>.0\":[\"$r0 = newarray (java.lang.Class)[1]\", \"$r1 = <java.lang.Long: java.lang.Class TYPE>\", \"$r0[0] = $r1\", \"$z0 = staticinvoke <org.springframework.util.ClassUtils: boolean hasMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class \"Ljavax/servlet/ServletResponse;\", \"setContentLengthLong\", $r0)\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable> = $z0\", \"$r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r2\"],\"getMediaType\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>\"}}",
            "contained": true,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getResource(HttpServletRequest)",
            "diff": "",
            "contained": true,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getResource(HttpServletRequest)",
            "diff": "{\"lhs\" : {\"4\":[\"r37 = (java.lang.String) $r4\", \"if r37 != null goto r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$r29 = new java.lang.IllegalStateException\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r32 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r35)\", \"throw $r29\", \"r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r38)\"],\"19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r38)\", \"if $z2 == 0 goto $z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\"],\"33\":[\"$z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"r39 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r38, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r39)\", \"if $z5 == 0 goto r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z8 = interfaceinvoke $r22.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z8 == 0 goto return null\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\"],\"50\":[\"r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$z6 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r40)\", \"if $z6 == 0 goto (branch)\", \"$r15 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z7 = interfaceinvoke $r15.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z7 == 0 goto return null\", \"$r17 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r16 = new java.lang.StringBuilder\", \"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()\", \"$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r17.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r21)\", \"return null\", \"goto [?= $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r36 := @caughtexception\", \"$r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r42 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r41.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r42)\", \"$r44 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r45 = interfaceinvoke $r41.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r38, $r44)\", \"if r45 == null goto return r45\"],\"76\":[\"return r45\"],\"79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r41, $r14)\", \"r46 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r45)\", \"return r46\"]},\"rhs\" : {\"4\":[\"r31 = (java.lang.String) $r4\", \"if r31 != null goto r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$r23 = new java.lang.IllegalStateException\", \"$r24 = new java.lang.StringBuilder\", \"specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r26 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29)\", \"throw $r23\", \"r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r32)\"],\"19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r32)\", \"if $z2 == 0 goto $z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\"],\"33\":[\"$z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r15 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r32, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>($r15)\", \"if $z5 == 0 goto (branch)\", \"$r16 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z6 = interfaceinvoke $r16.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z6 == 0 goto return null\", \"$r18 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r17 = new java.lang.StringBuilder\", \"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()\", \"$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r18.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r22)\"],\"50\":[\"goto [?= $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r30 := @caughtexception\", \"$r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r34 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r33.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r34)\", \"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r37 = interfaceinvoke $r33.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r32, $r36)\", \"if r37 == null goto return r37\"],\"76\":[\"return r37\"],\"79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r33, $r14)\", \"r38 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r37)\", \"return r38\"]}}",
            "contained": true,
            "commit": "91b803a2310344d925e5d4b1709bbcea9037554",
            "ref_file": "/data4/test_compare_script/91b803a2310344d925e5d4b1709bbcea9037554/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getResource(HttpServletRequest)",
            "diff": "{\"lhs\" : {\"4\":[\"r37 = (java.lang.String) $r4\", \"if r37 != null goto r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$r29 = new java.lang.IllegalStateException\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r32 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r35)\", \"throw $r29\", \"r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r38)\"],\"19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r38)\", \"if $z2 == 0 goto $z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\"],\"33\":[\"$z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"r39 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r38, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r39)\", \"if $z5 == 0 goto r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z8 = interfaceinvoke $r22.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z8 == 0 goto return null\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\"],\"50\":[\"r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$z6 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r40)\", \"if $z6 == 0 goto (branch)\", \"$r15 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z7 = interfaceinvoke $r15.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z7 == 0 goto return null\", \"$r17 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r16 = new java.lang.StringBuilder\", \"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()\", \"$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r17.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r21)\", \"return null\", \"goto [?= $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r36 := @caughtexception\", \"$r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r42 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r41.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r42)\", \"$r44 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r45 = interfaceinvoke $r41.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r38, $r44)\", \"if r45 == null goto return r45\"],\"76\":[\"return r45\"],\"79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r41, $r14)\", \"r46 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r45)\", \"return r46\"]},\"rhs\" : {\"4\":[\"r31 = (java.lang.String) $r4\", \"if r31 != null goto r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$r23 = new java.lang.IllegalStateException\", \"$r24 = new java.lang.StringBuilder\", \"specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r26 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29)\", \"throw $r23\", \"r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r32)\"],\"19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r32)\", \"if $z2 == 0 goto $z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\"],\"33\":[\"$z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r15 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r32, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>($r15)\", \"if $z5 == 0 goto (branch)\", \"$r16 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z6 = interfaceinvoke $r16.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z6 == 0 goto return null\", \"$r18 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r17 = new java.lang.StringBuilder\", \"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()\", \"$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r18.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r22)\"],\"50\":[\"goto [?= $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r30 := @caughtexception\", \"$r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r34 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r33.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r34)\", \"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r37 = interfaceinvoke $r33.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r32, $r36)\", \"if r37 == null goto return r37\"],\"76\":[\"return r37\"],\"79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r33, $r14)\", \"r38 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r37)\", \"return r38\"]}}",
            "contained": true,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.isInvalidEncodedPath(String)",
            "diff": "{\"lhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"EmbeddedValueResolverAware\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String URL_RESOURCE_CHARSET_PREFIX>\",\"locationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues>\",\"locationCharsets\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"embeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.util.StringValueResolver embeddedValueResolver>\",\"contentLengthLongAvailable\":null,\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r7\", \"$r8 = new java.util.HashMap\", \"specialinvoke $r8.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets> = $r8\", \"$r9 = new java.util.ArrayList\", \"specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r9\", \"$r10 = new java.util.ArrayList\", \"specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r10\"],\"setLocationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setLocationValues(java.util.List)>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"setEmbeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)>\",\"afterPropertiesSet.1\":[\"specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>()\"],\"resolveResourceLocations\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>\",\"initAllowedLocations.7\":[\"i1 = $i0 - 1\", \"if i1 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i1 = i1 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto $r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"$r12 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r13 = newarray (org.springframework.core.io.Resource)[0]\", \"$r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13)\", \"$r15 = (org.springframework.core.io.Resource[]) $r14\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r15)\", \"$r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"if $r9 == null goto return\", \"$r10 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>($r10)\", \"$r11 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>($r11)\"],\"initAllowedLocations.31\":[\"i1 = i1 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r8 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r8)\"],\"handleRequest.13\":[\"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r36)\"],\"handleRequest.17\":[\"$r9 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r35 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r35.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r27 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r27.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r43 = \"HEAD\"\"],\"handleRequest.32\":[\"$r28 = new java.lang.StringBuilder\", \"specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()\", \"$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r29.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r34)\", \"goto [?= $r43 = \"HEAD\"]\", \"$r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r43 = \"HEAD\"\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r21 = new java.lang.StringBuilder\", \"specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()\", \"$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r26)\", \"$r43 = \"HEAD\"\", \"$r44 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>($r44)\", \"if $z4 == 0 goto $r11 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r20 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r20.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r11 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r11.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r12 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r12 != null goto $r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"if $r18 == null goto $z5 = 0\", \"$z5 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")]\", \"$z5 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")\"],\"handleRequest.71\":[\"$r19 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r19.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r11)\"],\"handleRequest.74\":[\"$r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"if $r13 == null goto $z6 = 0\", \"$z6 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")]\", \"$z6 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")\"],\"handleRequest.84\":[\"r45 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":null,\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r45, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r11)\"],\"handleRequest.90\":[\"$r38 := @caughtexception\", \"$r39 = new java.lang.StringBuilder\", \"specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()\", \"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l1 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1)\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r42)\"],\"getResource.4\":[\"r37 = (java.lang.String) $r4\", \"if r37 != null goto r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$r29 = new java.lang.IllegalStateException\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r32 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r35)\", \"throw $r29\", \"r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r38)\"],\"getResource.19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r38)\", \"if $z2 == 0 goto $z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"getResource.28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\"],\"getResource.33\":[\"$z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"r39 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r38, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r39)\", \"if $z5 == 0 goto r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z8 = interfaceinvoke $r22.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z8 == 0 goto return null\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\"],\"getResource.50\":[\"r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$z6 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r40)\", \"if $z6 == 0 goto (branch)\", \"$r15 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z7 = interfaceinvoke $r15.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z7 == 0 goto return null\", \"$r17 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r16 = new java.lang.StringBuilder\", \"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()\", \"$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r17.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r21)\", \"return null\", \"goto [?= $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r36 := @caughtexception\", \"$r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r42 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r41.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r42)\", \"$r44 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r45 = interfaceinvoke $r41.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r38, $r44)\", \"if r45 == null goto return r45\"],\"getResource.76\":[\"return r45\"],\"getResource.79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r41, $r14)\", \"r46 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r45)\", \"return r46\"],\"processPath.1\":[\"r2 := @parameter0: java.lang.String\", \"r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r2, \"\\\\\", \"/\")\", \"r4 = specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanDuplicateSlashes(java.lang.String)>(r3)\", \"$r1 = specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanLeadingSlash(java.lang.String)>(r4)\", \"return $r1\"],\"cleanDuplicateSlashes\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanDuplicateSlashes(java.lang.String)>\",\"cleanLeadingSlash\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanLeadingSlash(java.lang.String)>\",\"getMediaType.3\":[\"$r3 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"if $r3 == null goto $r5 = null\"],\"getMediaType.7\":[\"goto [?= return $r5]\", \"$r5 = null\"],\"setHeaders.7\":null,\"setHeaders.9\":null,\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"$r17 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r17)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"if $z0 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\", \"$r10 = (org.springframework.web.servlet.resource.HttpResource) r2\", \"r4 = interfaceinvoke $r10.<org.springframework.web.servlet.resource.HttpResource: org.springframework.http.HttpHeaders getResponseHeaders()>()\", \"$r11 = virtualinvoke r4.<org.springframework.http.HttpHeaders: java.util.Set entrySet()>()\", \"r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\"],\"setHeaders.22\":[\"$r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (java.util.Map$Entry) $r12\", \"$r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()\", \"r7 = (java.lang.String) $r13\", \"z3 = 1\", \"$r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()\", \"$r15 = (java.util.List) $r14\", \"r8 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>()\", \"$z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()\", \"if $z2 == 0 goto (branch)\", \"$r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()\", \"r9 = (java.lang.String) $r16\", \"if z3 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"goto [?= z3 = 0]\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"z3 = 0\", \"goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\"],\"<clinit>.0\":[\"$r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r0\"],\"getMediaType\":null},\"rhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":null,\"locationValues\":null,\"locationCharsets\":null,\"urlPathHelper\":null,\"embeddedValueResolver\":null,\"contentLengthLongAvailable\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\",\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r7\", \"$r8 = new java.util.ArrayList\", \"specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r8\"],\"setLocationValues\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"setEmbeddedValueResolver\":null,\"afterPropertiesSet.1\":null,\"resolveResourceLocations\":null,\"initAllowedLocations.7\":[\"i2 = $i0 - 1\", \"if i2 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i2 = i2 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto return\", \"$r9 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r10 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$i1 = interfaceinvoke $r10.<java.util.List: int size()>()\", \"$r11 = newarray (org.springframework.core.io.Resource)[$i1]\", \"$r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)\", \"$r13 = (org.springframework.core.io.Resource[]) $r12\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r13)\"],\"initAllowedLocations.31\":[\"i2 = i2 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r39 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r39.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r9 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r8.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r9)\"],\"handleRequest.13\":[\"$r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r38)\"],\"handleRequest.17\":[\"$r10 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\"],\"handleRequest.32\":[\"$z3 = interfaceinvoke $r29.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r45 = \"HEAD\"\", \"$r31 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r31.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r36)\", \"goto [?= $r45 = \"HEAD\"]\", \"$r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r45 = \"HEAD\"\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\", \"$r45 = \"HEAD\"\", \"$r46 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r46)\", \"if $z4 == 0 goto $r12 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r12 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r12.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r13 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r13 != null goto interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\"],\"handleRequest.71\":[\"$r21 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r21.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r12)\"],\"handleRequest.74\":null,\"handleRequest.84\":[\"r47 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":[\"$i1 = interfaceinvoke r47.<java.util.List: int size()>()\", \"if $i1 != 1 goto $r16 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = interfaceinvoke r47.<java.util.List: java.lang.Object get(int)>(0)\", \"$r19 = (org.springframework.http.HttpRange) $r18\", \"r7 = virtualinvoke $r19.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r3)\", \"$r20 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"virtualinvoke $r20.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r7, r4, $r12)\", \"goto [?= (branch)]\"],\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r47, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r12)\"],\"handleRequest.90\":[\"$r40 := @caughtexception\", \"$r41 = new java.lang.StringBuilder\", \"specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l2 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2)\", \"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r44)\"],\"getResource.4\":[\"r31 = (java.lang.String) $r4\", \"if r31 != null goto r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$r23 = new java.lang.IllegalStateException\", \"$r24 = new java.lang.StringBuilder\", \"specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r26 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29)\", \"throw $r23\", \"r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r32)\"],\"getResource.19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r32)\", \"if $z2 == 0 goto $z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"getResource.28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\"],\"getResource.33\":[\"$z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r15 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r32, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>($r15)\", \"if $z5 == 0 goto (branch)\", \"$r16 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z6 = interfaceinvoke $r16.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z6 == 0 goto return null\", \"$r18 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r17 = new java.lang.StringBuilder\", \"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()\", \"$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r18.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r22)\"],\"getResource.50\":[\"goto [?= $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r30 := @caughtexception\", \"$r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r34 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r33.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r34)\", \"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r37 = interfaceinvoke $r33.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r32, $r36)\", \"if r37 == null goto return r37\"],\"getResource.76\":[\"return r37\"],\"getResource.79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r33, $r14)\", \"r38 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r37)\", \"return r38\"],\"processPath.1\":[\"r11 := @parameter0: java.lang.String\", \"z1 = 0\", \"i4 = 0\", \"$i0 = virtualinvoke r11.<java.lang.String: int length()>()\", \"if i4 >= $i0 goto (branch)\", \"$c1 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c1 != 47 goto $c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"z1 = 1\", \"goto [?= i4 = i4 + 1]\", \"$c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c2 <= 32 goto i4 = i4 + 1\", \"$c3 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c3 == 127 goto i4 = i4 + 1\", \"if i4 == 0 goto return r11\", \"if i4 != 1 goto (branch)\", \"if z1 == 0 goto (branch)\", \"return r11\", \"if z1 == 0 goto $r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"$r7 = new java.lang.StringBuilder\", \"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r9 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= r13 = $r12]\", \"$r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"r13 = $r12\", \"$r1 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z0 == 0 goto return r13\", \"$r3 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r2 = new java.lang.StringBuilder\", \"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Path after trimming leading \\'/\\' and control characters: \")\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)\", \"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r6)\", \"return r13\", \"i4 = i4 + 1\", \"goto [?= $i0 = virtualinvoke r11.<java.lang.String: int length()>()]\", \"if z1 == 0 goto $r14 = \"\"\", \"$r14 = \"/\"\", \"goto [?= return $r14]\", \"$r14 = \"\"\", \"return $r14\"],\"cleanDuplicateSlashes\":null,\"cleanLeadingSlash\":null,\"getMediaType.3\":[\"r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>(r2)\", \"if r3 == null goto $r4 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"return r3\"],\"getMediaType.7\":null,\"setHeaders.7\":[\"$z2 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\", \"if $z2 == 0 goto $r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\"],\"setHeaders.9\":[\"$r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Length\", $r14)\", \"goto [?= (branch)]\"],\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"$r13 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r13)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"if $z0 == 0 goto $z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\", \"$r11 = (org.springframework.web.servlet.resource.EncodedResource) r2\", \"$r12 = interfaceinvoke $r11.<org.springframework.web.servlet.resource.EncodedResource: java.lang.String getContentEncoding()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Encoding\", $r12)\", \"$z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\"],\"setHeaders.22\":[\"$r4 = new java.lang.StringBuilder\", \"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r6 = (org.springframework.web.servlet.resource.VersionedResource) r2\", \"$r7 = interfaceinvoke $r6.<org.springframework.web.servlet.resource.VersionedResource: java.lang.String getVersion()>()\", \"$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"ETag\", $r10)\"],\"<clinit>.0\":[\"$r0 = newarray (java.lang.Class)[1]\", \"$r1 = <java.lang.Long: java.lang.Class TYPE>\", \"$r0[0] = $r1\", \"$z0 = staticinvoke <org.springframework.util.ClassUtils: boolean hasMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class \"Ljavax/servlet/ServletResponse;\", \"setContentLengthLong\", $r0)\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable> = $z0\", \"$r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r2\"],\"getMediaType\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>\"}}",
            "contained": true,
            "commit": "91b803a2310344d925e5d4b1709bbcea9037554",
            "ref_file": "/data4/test_compare_script/91b803a2310344d925e5d4b1709bbcea9037554/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.isInvalidEncodedPath(String)",
            "diff": "{\"lhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"EmbeddedValueResolverAware\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String URL_RESOURCE_CHARSET_PREFIX>\",\"locationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues>\",\"locationCharsets\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\",\"urlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\",\"embeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.util.StringValueResolver embeddedValueResolver>\",\"contentLengthLongAvailable\":null,\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locationValues> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r7\", \"$r8 = new java.util.HashMap\", \"specialinvoke $r8.<java.util.HashMap: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets> = $r8\", \"$r9 = new java.util.ArrayList\", \"specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r9\", \"$r10 = new java.util.ArrayList\", \"specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r10\"],\"setLocationValues\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setLocationValues(java.util.List)>\",\"setUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>\",\"getUrlPathHelper\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>\",\"setEmbeddedValueResolver\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)>\",\"afterPropertiesSet.1\":[\"specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>()\"],\"resolveResourceLocations\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void resolveResourceLocations()>\",\"initAllowedLocations.7\":[\"i1 = $i0 - 1\", \"if i1 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i1 = i1 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto $r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"$r12 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r13 = newarray (org.springframework.core.io.Resource)[0]\", \"$r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13)\", \"$r15 = (org.springframework.core.io.Resource[]) $r14\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r15)\", \"$r9 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"if $r9 == null goto return\", \"$r10 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.Map locationCharsets>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setLocationCharsets(java.util.Map)>($r10)\", \"$r11 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.util.UrlPathHelper urlPathHelper>\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>($r11)\"],\"initAllowedLocations.31\":[\"i1 = i1 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r7 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r8 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r8)\"],\"handleRequest.13\":[\"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r36)\"],\"handleRequest.17\":[\"$r9 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r9.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r35 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r35.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r27 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z3 = interfaceinvoke $r27.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r43 = \"HEAD\"\"],\"handleRequest.32\":[\"$r28 = new java.lang.StringBuilder\", \"specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()\", \"$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r29.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r34)\", \"goto [?= $r43 = \"HEAD\"]\", \"$r10 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r43 = \"HEAD\"\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r21 = new java.lang.StringBuilder\", \"specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()\", \"$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r26)\", \"$r43 = \"HEAD\"\", \"$r44 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>($r44)\", \"if $z4 == 0 goto $r11 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r20 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r20.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r11 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r11.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r12 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r12 != null goto $r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"if $r18 == null goto $z5 = 0\", \"$z5 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")]\", \"$z5 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"Not initialized\")\"],\"handleRequest.71\":[\"$r19 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r19.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r11)\"],\"handleRequest.74\":[\"$r13 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"if $r13 == null goto $z6 = 0\", \"$z6 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")]\", \"$z6 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z6, \"Not initialized\")\"],\"handleRequest.84\":[\"r45 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":null,\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r45, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r11)\"],\"handleRequest.90\":[\"$r38 := @caughtexception\", \"$r39 = new java.lang.StringBuilder\", \"specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()\", \"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l1 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1)\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r42)\"],\"getResource.4\":[\"r37 = (java.lang.String) $r4\", \"if r37 != null goto r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$r29 = new java.lang.IllegalStateException\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r32 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r35)\", \"throw $r29\", \"r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r37)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r38)\"],\"getResource.19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r38)\", \"if $z2 == 0 goto $z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"getResource.28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\"],\"getResource.33\":[\"$z3 = virtualinvoke r38.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"r39 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r38, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r39)\", \"if $z5 == 0 goto r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z8 = interfaceinvoke $r22.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z8 == 0 goto return null\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\"],\"getResource.50\":[\"r40 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r39)\", \"$z6 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r40)\", \"if $z6 == 0 goto (branch)\", \"$r15 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z7 = interfaceinvoke $r15.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z7 == 0 goto return null\", \"$r17 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r16 = new java.lang.StringBuilder\", \"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()\", \"$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r17.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r21)\", \"return null\", \"goto [?= $r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r36 := @caughtexception\", \"$r41 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r42 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r41.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r42)\", \"$r44 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r45 = interfaceinvoke $r41.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r38, $r44)\", \"if r45 == null goto return r45\"],\"getResource.76\":[\"return r45\"],\"getResource.79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r41, $r14)\", \"r46 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r45)\", \"return r46\"],\"processPath.1\":[\"r2 := @parameter0: java.lang.String\", \"r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r2, \"\\\\\", \"/\")\", \"r4 = specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanDuplicateSlashes(java.lang.String)>(r3)\", \"$r1 = specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanLeadingSlash(java.lang.String)>(r4)\", \"return $r1\"],\"cleanDuplicateSlashes\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanDuplicateSlashes(java.lang.String)>\",\"cleanLeadingSlash\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanLeadingSlash(java.lang.String)>\",\"getMediaType.3\":[\"$r3 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"if $r3 == null goto $r5 = null\"],\"getMediaType.7\":[\"goto [?= return $r5]\", \"$r5 = null\"],\"setHeaders.7\":null,\"setHeaders.9\":null,\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"$r17 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r17)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.HttpResource\", \"if $z0 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\", \"$r10 = (org.springframework.web.servlet.resource.HttpResource) r2\", \"r4 = interfaceinvoke $r10.<org.springframework.web.servlet.resource.HttpResource: org.springframework.http.HttpHeaders getResponseHeaders()>()\", \"$r11 = virtualinvoke r4.<org.springframework.http.HttpHeaders: java.util.Set entrySet()>()\", \"r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()\", \"$z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\"],\"setHeaders.22\":[\"$r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (java.util.Map$Entry) $r12\", \"$r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()\", \"r7 = (java.lang.String) $r13\", \"z3 = 1\", \"$r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()\", \"$r15 = (java.util.List) $r14\", \"r8 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>()\", \"$z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()\", \"if $z2 == 0 goto (branch)\", \"$r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()\", \"r9 = (java.lang.String) $r16\", \"if z3 == 0 goto interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"goto [?= z3 = 0]\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>(r7, r9)\", \"z3 = 0\", \"goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\"],\"<clinit>.0\":[\"$r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r0\"],\"getMediaType\":null},\"rhs\" : {\"interfaces\":[\"HttpRequestHandler\", \"InitializingBean\", \"CorsConfigurationSource\"],\"URL_RESOURCE_CHARSET_PREFIX\":null,\"locationValues\":null,\"locationCharsets\":null,\"urlPathHelper\":null,\"embeddedValueResolver\":null,\"contentLengthLongAvailable\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\",\"<init>.11\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List locations> = $r6\"],\"<init>.14\":[\"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceResolvers> = $r7\", \"$r8 = new java.util.ArrayList\", \"specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(4)\", \"r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List resourceTransformers> = $r8\"],\"setLocationValues\":null,\"setUrlPathHelper\":null,\"getUrlPathHelper\":null,\"setEmbeddedValueResolver\":null,\"afterPropertiesSet.1\":null,\"resolveResourceLocations\":null,\"initAllowedLocations.7\":[\"i2 = $i0 - 1\", \"if i2 < 0 goto return\"],\"initAllowedLocations.10\":[\"$r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.12\":[\"if $z1 == 0 goto i2 = i2 + -1\"],\"initAllowedLocations.14\":[\"$r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i2)\"],\"initAllowedLocations.18\":[\"if $z2 == 0 goto return\", \"$r9 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$r10 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"$i1 = interfaceinvoke $r10.<java.util.List: int size()>()\", \"$r11 = newarray (org.springframework.core.io.Resource)[$i1]\", \"$r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)\", \"$r13 = (org.springframework.core.io.Resource[]) $r12\", \"virtualinvoke r1.<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])>($r13)\"],\"initAllowedLocations.31\":[\"i2 = i2 + -1\"],\"handleRequest.4\":[\"if r3 != null goto $r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r39 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r39.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"No matching resource found - returning 404\")\"],\"handleRequest.9\":[\"$r8 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod OPTIONS>\", \"$r9 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z0 = virtualinvoke $r8.<org.springframework.http.HttpMethod: boolean matches(java.lang.String)>($r9)\"],\"handleRequest.13\":[\"$r38 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String getAllowHeader()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Allow\", $r38)\"],\"handleRequest.17\":[\"$r10 = new org.springframework.web.context.request.ServletWebRequest\", \"specialinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2)\"],\"handleRequest.20\":[\"$z1 = virtualinvoke $r10.<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>($l0)\"],\"handleRequest.22\":[\"$r37 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r37.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"Resource not modified - returning 304\")\"],\"handleRequest.27\":[\"if r4 == null goto $r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\"],\"handleRequest.32\":[\"$z3 = interfaceinvoke $r29.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z3 == 0 goto $r45 = \"HEAD\"\", \"$r31 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r30 = new java.lang.StringBuilder\", \"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()\", \"$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Determined media type \\'\")\", \"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)\", \"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for \")\", \"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r31.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r36)\", \"goto [?= $r45 = \"HEAD\"]\", \"$r11 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z2 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z2 == 0 goto $r45 = \"HEAD\"\", \"$r24 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r23 = new java.lang.StringBuilder\", \"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No media type found for \")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - not sending a content-type header\")\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r24.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r28)\", \"$r45 = \"HEAD\"\", \"$r46 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()\", \"$z4 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r46)\", \"if $z4 == 0 goto $r12 = new org.springframework.http.server.ServletServerHttpResponse\"],\"handleRequest.57\":[\"$r22 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(\"HEAD request - skipping content\")\"],\"handleRequest.60\":[\"$r12 = new org.springframework.http.server.ServletServerHttpResponse\", \"specialinvoke $r12.<org.springframework.http.server.ServletServerHttpResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r2)\", \"$r13 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(\"Range\")\", \"if $r13 != null goto interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Accept-Ranges\", \"bytes\")\"],\"handleRequest.71\":[\"$r21 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter resourceHttpMessageConverter>\", \"virtualinvoke $r21.<org.springframework.http.converter.ResourceHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r3, r4, $r12)\"],\"handleRequest.74\":null,\"handleRequest.84\":[\"r47 = virtualinvoke $r15.<org.springframework.http.HttpHeaders: java.util.List getRange()>()\"],\"handleRequest.86\":[\"$i1 = interfaceinvoke r47.<java.util.List: int size()>()\", \"if $i1 != 1 goto $r16 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"$r18 = interfaceinvoke r47.<java.util.List: java.lang.Object get(int)>(0)\", \"$r19 = (org.springframework.http.HttpRange) $r18\", \"r7 = virtualinvoke $r19.<org.springframework.http.HttpRange: org.springframework.core.io.support.ResourceRegion toResourceRegion(org.springframework.core.io.Resource)>(r3)\", \"$r20 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter resourceRegionHttpMessageConverter>\", \"virtualinvoke $r20.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>(r7, r4, $r12)\", \"goto [?= (branch)]\"],\"handleRequest.87\":[\"$r17 = staticinvoke <org.springframework.http.HttpRange: java.util.List toResourceRegions(java.util.List,org.springframework.core.io.Resource)>(r47, r3)\", \"virtualinvoke $r16.<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)>($r17, r4, $r12)\"],\"handleRequest.90\":[\"$r40 := @caughtexception\", \"$r41 = new java.lang.StringBuilder\", \"specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bytes */\")\", \"$l2 = interfaceinvoke r3.<org.springframework.core.io.Resource: long contentLength()>()\", \"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2)\", \"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Range\", $r44)\"],\"getResource.4\":[\"r31 = (java.lang.String) $r4\", \"if r31 != null goto r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$r23 = new java.lang.IllegalStateException\", \"$r24 = new java.lang.StringBuilder\", \"specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Required request attribute \\'\")\", \"$r26 = <org.springframework.web.servlet.HandlerMapping: java.lang.String PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE>\", \"$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)\", \"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is not set\")\", \"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29)\", \"throw $r23\", \"r32 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String processPath(java.lang.String)>(r31)\", \"$z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r32)\"],\"getResource.19\":[\"$z2 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>(r32)\", \"if $z2 == 0 goto $z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\"],\"getResource.28\":[\"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\"],\"getResource.33\":[\"$z3 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"%\")\", \"if $z3 == 0 goto $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r15 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r32, \"UTF-8\")\", \"$z5 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean isInvalidPath(java.lang.String)>($r15)\", \"if $z5 == 0 goto (branch)\", \"$r16 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z6 = interfaceinvoke $r16.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z6 == 0 goto return null\", \"$r18 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r17 = new java.lang.StringBuilder\", \"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()\", \"$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Ignoring invalid resource path with escape sequences [\")\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32)\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"].\")\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r18.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r22)\"],\"getResource.50\":[\"goto [?= $r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain]\", \"$r30 := @caughtexception\", \"$r33 = new org.springframework.web.servlet.resource.DefaultResourceResolverChain\", \"$r34 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()>()\", \"specialinvoke $r33.<org.springframework.web.servlet.resource.DefaultResourceResolverChain: void <init>(java.util.List)>($r34)\", \"$r36 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()>()\", \"r37 = interfaceinvoke $r33.<org.springframework.web.servlet.resource.ResourceResolverChain: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List)>(r1, r32, $r36)\", \"if r37 == null goto return r37\"],\"getResource.76\":[\"return r37\"],\"getResource.79\":[\"specialinvoke $r13.<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: void <init>(org.springframework.web.servlet.resource.ResourceResolverChain,java.util.List)>($r33, $r14)\", \"r38 = interfaceinvoke $r13.<org.springframework.web.servlet.resource.ResourceTransformerChain: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)>(r1, r37)\", \"return r38\"],\"processPath.1\":[\"r11 := @parameter0: java.lang.String\", \"z1 = 0\", \"i4 = 0\", \"$i0 = virtualinvoke r11.<java.lang.String: int length()>()\", \"if i4 >= $i0 goto (branch)\", \"$c1 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c1 != 47 goto $c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"z1 = 1\", \"goto [?= i4 = i4 + 1]\", \"$c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c2 <= 32 goto i4 = i4 + 1\", \"$c3 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c3 == 127 goto i4 = i4 + 1\", \"if i4 == 0 goto return r11\", \"if i4 != 1 goto (branch)\", \"if z1 == 0 goto (branch)\", \"return r11\", \"if z1 == 0 goto $r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"$r7 = new java.lang.StringBuilder\", \"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r9 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= r13 = $r12]\", \"$r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"r13 = $r12\", \"$r1 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z0 == 0 goto return r13\", \"$r3 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r2 = new java.lang.StringBuilder\", \"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Path after trimming leading \\'/\\' and control characters: \")\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)\", \"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r6)\", \"return r13\", \"i4 = i4 + 1\", \"goto [?= $i0 = virtualinvoke r11.<java.lang.String: int length()>()]\", \"if z1 == 0 goto $r14 = \"\"\", \"$r14 = \"/\"\", \"goto [?= return $r14]\", \"$r14 = \"\"\", \"return $r14\"],\"cleanDuplicateSlashes\":null,\"cleanLeadingSlash\":null,\"getMediaType.3\":[\"r3 = virtualinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>(r2)\", \"if r3 == null goto $r4 = r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.PathExtensionContentNegotiationStrategy contentNegotiationStrategy>\", \"return r3\"],\"getMediaType.7\":null,\"setHeaders.7\":[\"$z2 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable>\", \"if $z2 == 0 goto $r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\"],\"setHeaders.9\":[\"$r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Length\", $r14)\", \"goto [?= (branch)]\"],\"setHeaders.11\":[\"if r3 == null goto $z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"$r13 = virtualinvoke r3.<org.springframework.http.MediaType: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r13)\", \"$z0 = r2 instanceof org.springframework.web.servlet.resource.EncodedResource\", \"if $z0 == 0 goto $z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\", \"$r11 = (org.springframework.web.servlet.resource.EncodedResource) r2\", \"$r12 = interfaceinvoke $r11.<org.springframework.web.servlet.resource.EncodedResource: java.lang.String getContentEncoding()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"Content-Encoding\", $r12)\", \"$z1 = r2 instanceof org.springframework.web.servlet.resource.VersionedResource\"],\"setHeaders.22\":[\"$r4 = new java.lang.StringBuilder\", \"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r6 = (org.springframework.web.servlet.resource.VersionedResource) r2\", \"$r7 = interfaceinvoke $r6.<org.springframework.web.servlet.resource.VersionedResource: java.lang.String getVersion()>()\", \"$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)\", \"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")\", \"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>(\"ETag\", $r10)\"],\"<clinit>.0\":[\"$r0 = newarray (java.lang.Class)[1]\", \"$r1 = <java.lang.Long: java.lang.Class TYPE>\", \"$r0[0] = $r1\", \"$z0 = staticinvoke <org.springframework.util.ClassUtils: boolean hasMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class \"Ljavax/servlet/ServletResponse;\", \"setContentLengthLong\", $r0)\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: boolean contentLengthLongAvailable> = $z0\", \"$r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class \"Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;\")\", \"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger> = $r2\"],\"getMediaType\":\"<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)>\"}}",
            "contained": true,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.isInvalidPath(String)",
            "diff": "",
            "contained": true,
            "commit": "91b803a2310344d925e5d4b1709bbcea9037554",
            "ref_file": "/data4/test_compare_script/91b803a2310344d925e5d4b1709bbcea9037554/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.isInvalidPath(String)",
            "diff": "",
            "contained": true,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.processPath(String)",
            "diff": "",
            "contained": true,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.processPath(String)",
            "diff": "{\"lhs\" : {\"1\":[\"r2 := @parameter0: java.lang.String\", \"r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r2, \"\\\\\", \"/\")\", \"r4 = specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanDuplicateSlashes(java.lang.String)>(r3)\", \"$r1 = specialinvoke r0.<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String cleanLeadingSlash(java.lang.String)>(r4)\", \"return $r1\"]},\"rhs\" : {\"1\":[\"r11 := @parameter0: java.lang.String\", \"z1 = 0\", \"i4 = 0\", \"$i0 = virtualinvoke r11.<java.lang.String: int length()>()\", \"if i4 >= $i0 goto (branch)\", \"$c1 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c1 != 47 goto $c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"z1 = 1\", \"goto [?= i4 = i4 + 1]\", \"$c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c2 <= 32 goto i4 = i4 + 1\", \"$c3 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4)\", \"if $c3 == 127 goto i4 = i4 + 1\", \"if i4 == 0 goto return r11\", \"if i4 != 1 goto (branch)\", \"if z1 == 0 goto (branch)\", \"return r11\", \"if z1 == 0 goto $r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"$r7 = new java.lang.StringBuilder\", \"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")\", \"$r9 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)\", \"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= r13 = $r12]\", \"$r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i4)\", \"r13 = $r12\", \"$r1 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isTraceEnabled()>()\", \"if $z0 == 0 goto return r13\", \"$r3 = <org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.apache.commons.logging.Log logger>\", \"$r2 = new java.lang.StringBuilder\", \"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()\", \"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Path after trimming leading \\'/\\' and control characters: \")\", \"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)\", \"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()\", \"interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r6)\", \"return r13\", \"i4 = i4 + 1\", \"goto [?= $i0 = virtualinvoke r11.<java.lang.String: int length()>()]\", \"if z1 == 0 goto $r14 = \"\"\", \"$r14 = \"/\"\", \"goto [?= return $r14]\", \"$r14 = \"\"\", \"return $r14\"]}}",
            "contained": true,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests",
            "diff": null,
            "contained": false,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.initAllowedLocations()",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.invalidPath()",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.invalidPath()",
            "diff": null,
            "contained": false,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.processPath()",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.resolvePathWithTraversal()",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.resolvePathWithTraversal()",
            "diff": null,
            "contained": false,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testInvalidPath()",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testInvalidPath()",
            "diff": null,
            "contained": false,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testInvalidPath(HttpMethod)",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testInvalidPath(HttpMethod)",
            "diff": null,
            "contained": false,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testInvalidPath(Resource,String)",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testInvalidPath(Resource,String)",
            "diff": null,
            "contained": false,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testInvalidPath(String,ResourceHttpRequestHandler)",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testInvalidPath(String,ResourceHttpRequestHandler)",
            "diff": null,
            "contained": false,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testResolvePathWithTraversal(HttpMethod)",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testResolvePathWithTraversal(HttpMethod)",
            "diff": null,
            "contained": false,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testResolvePathWithTraversal(Resource,String)",
            "diff": null,
            "contained": false,
            "commit": "0e28bee0f155b9bf240b4bafc4646e4810cb23f",
            "ref_file": "/data4/test_compare_script/0e28bee0f155b9bf240b4bafc4646e4810cb23f/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        },
        {
            "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testResolvePathWithTraversal(Resource,String)",
            "diff": null,
            "contained": false,
            "commit": "b9ebdaaf3710db473a2e1fec8641c316483a22a",
            "ref_file": "/data4/test_compare_script/b9ebdaaf3710db473a2e1fec8641c316483a22a/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
            "affectedFile": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class"
        }
    ],
    "cve": "CVE-2018-1271",
    "gav": {
        "groupId": "org.springframework",
        "artifactId": "spring-webmvc",
        "version": "4.3.5.RELEASE"
    },
    "vulnerable": true,
    "comment": "{\"artifacts\": [\"spring-webmvc\", \"spring-webflux\"], \"references\": [\"https://github.com/spring-projects/spring-framework/commit/91b803a2310344d925e5d4b1709bbcea9037554\", \"0e28bee0f155b9bf240b4bafc4646e4810cb23f\"]}",
    "timestamp": "2018-11-30"
}