{
    "details": [
        {
            "qname": "org.springframework.expression.spel.CodeFlow",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/CodeFlow.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/CodeFlow.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.CodeFlow",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/CodeFlow.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/CodeFlow.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.CodeFlow.toBoxedDescriptor(String)",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/CodeFlow.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/CodeFlow.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.CodeFlow.toBoxedDescriptor(String)",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/CodeFlow.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/CodeFlow.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests$FooObjectHolder",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests$FooObjectHolder",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests$FooObjectHolder.getFoo()",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests$FooObjectHolder.getFoo()",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests.compilationOfBasicNullSafeMethodReference()",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests.compilationOfBasicNullSafeMethodReference()",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests.failsWhenSettingContextForExpression_SPR12326()",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests.failsWhenSettingContextForExpression_SPR12326()",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests.nullsafeFieldPropertyDereferencing_SPR16489()",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests.nullsafeFieldPropertyDereferencing_SPR16489()",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests.nullsafeMethodChaining_SPR16489()",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests.nullsafeMethodChaining_SPR16489()",
            "contained": false,
            "affectedFile": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "diff": null,
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.ast.MethodReference",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/MethodReference.class",
            "diff": "{\"lhs\" : {\"getValueRef.8\":\"$r7 = <org.springframework.expression.spel.ast.ValueRef$NullValueRef: org.springframework.expression.spel.ast.ValueRef$NullValueRef INSTANCE>\",\"getValueInternal.3\":null,\"getValueInternal.4\":[\"r3 = virtualinvoke $r7.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r8 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"r4 = virtualinvoke $r8.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\"],\"getValueInternal.8\":[\"r6 = specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.EvaluationContext,java.lang.Object,org.springframework.core.convert.TypeDescriptor,java.lang.Object[])>(r2, r3, r4, r5)\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void updateExitTypeDescriptor()>()\", \"return r6\"],\"getValueInternal.15\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, $r13)\"],\"getValueInternal.19\":[\"$r7 = new org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor\"],\"getValueInternal.23\":[\"goto [?= specialinvoke $r7.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)]\"],\"getValueInternal.25\":[\"specialinvoke $r7.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)\", \"r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor cachedExecutor> = $r7\"],\"getValueInternal.30\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, $r14)\", \"$r15 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.40\":[\"$r21 = virtualinvoke $r14.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\"],\"getValueInternal.42\":[\"specialinvoke $r15.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r14, $r18, $r16)\", \"throw $r15\"],\"throwIfNotNullSafe.4\":[\"$r2 = new org.springframework.expression.spel.SpelEvaluationException\"],\"throwIfNotNullSafe.11\":[\"specialinvoke $r2.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r5, $r3)\", \"throw $r2\"],\"getArguments.7\":\"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getScopeRootContextObject()>()\",\"getCachedExecutor.6\":null,\"findAccessorForMethod.6\":null,\"findAccessorForMethod.7\":[\"$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto $r8 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.16\":[\"$r15 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.23\":[\"specialinvoke $r15.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r14, $r17, $r16)\", \"throw $r15\", \"goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\", \"$r8 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.32\":[\"$z1 = r3 instanceof java.lang.Class\", \"if $z1 == 0 goto $r21 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()\"],\"findAccessorForMethod.39\":[\"specialinvoke $r8.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r10, $r9)\", \"throw $r8\"],\"throwSimpleExceptionIfPossible.9\":[\"if $z1 == 0 goto $r6 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.12\":[\"$r6 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.14\":[\"$r7 = new java.lang.StringBuilder\", \"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"A problem occurred when trying to execute method \\'\")\"],\"throwSimpleExceptionIfPossible.25\":[\"specialinvoke $r6.<org.springframework.expression.ExpressionInvocationTargetException: void <init>(int,java.lang.String,java.lang.Throwable)>($i0, $r16, r3)\", \"throw $r6\"],\"updateExitTypeDescriptor\":\"<org.springframework.expression.spel.ast.MethodReference: void updateExitTypeDescriptor()>\",\"toStringAST.2\":null,\"toStringAST.3\":[\"specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3)\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")\"],\"toStringAST.8\":[\"if i1 <= 0 goto $r7 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\"],\"toStringAST.10\":[\"$r7 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\", \"$r8 = interfaceinvoke $r7.<org.springframework.expression.spel.SpelNode: java.lang.String toStringAST()>()\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)\"],\"toStringAST.16\":[\"$r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()\", \"return $r6\"],\"isCompilable\":\"<org.springframework.expression.spel.ast.MethodReference: boolean isCompilable()>\",\"generateCode\":\"<org.springframework.expression.spel.ast.MethodReference: void generateCode(org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>\",\"access$100\":\"<org.springframework.expression.spel.ast.MethodReference: void access$100(org.springframework.expression.spel.ast.MethodReference)>\"},\"rhs\" : {\"getValueRef.8\":\"$r7 = <org.springframework.expression.spel.ast.ValueRef$NullValueRef: org.springframework.expression.spel.ast.ValueRef$NullValueRef instance>\",\"getValueInternal.3\":[\"$r6 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"r3 = virtualinvoke $r6.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"getValueInternal.4\":[\"r4 = virtualinvoke $r7.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\"],\"getValueInternal.8\":[\"$r8 = specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.EvaluationContext,java.lang.Object,org.springframework.core.convert.TypeDescriptor,java.lang.Object[])>(r2, r3, r4, r5)\", \"return $r8\"],\"getValueInternal.15\":[\"r29 = (org.springframework.expression.AccessException) $r13\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, r29)\"],\"getValueInternal.19\":[\"r27 = new org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor\"],\"getValueInternal.23\":[\"goto [?= specialinvoke r27.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)]\"],\"getValueInternal.25\":[\"specialinvoke r27.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)\", \"r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor cachedExecutor> = r27\"],\"getValueInternal.30\":[\"r30 = (org.springframework.expression.AccessException) $r14\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, r30)\", \"r28 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.40\":[\"r31 = (org.springframework.expression.AccessException) $r14\", \"$r21 = virtualinvoke r31.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\"],\"getValueInternal.42\":[\"specialinvoke r28.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r14, $r18, $r16)\", \"r32 = (java.lang.Throwable) r28\", \"throw r32\"],\"throwIfNotNullSafe.4\":[\"r7 = new org.springframework.expression.spel.SpelEvaluationException\"],\"throwIfNotNullSafe.11\":[\"specialinvoke r7.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r5, $r3)\", \"r8 = (java.lang.Throwable) r7\", \"throw r8\"],\"getArguments.7\":\"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getRootContextObject()>()\",\"getCachedExecutor.6\":[\"if r5 == null goto return null\"],\"findAccessorForMethod.6\":[\"if r5 == null goto r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.7\":[\"$z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\", \"if $z1 == 0 goto r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.16\":[\"r22 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.23\":[\"specialinvoke r22.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r14, $r17, $r16)\", \"r24 = (java.lang.Throwable) r22\", \"throw r24\", \"goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\", \"r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.32\":[\"$z0 = r3 instanceof java.lang.Class\", \"if $z0 == 0 goto $r21 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()\"],\"findAccessorForMethod.39\":[\"specialinvoke r23.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r10, $r9)\", \"r25 = (java.lang.Throwable) r23\", \"throw r25\"],\"throwSimpleExceptionIfPossible.9\":[\"if $z1 == 0 goto r19 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.12\":[\"r19 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.14\":[\"r18 = new java.lang.StringBuilder\", \"specialinvoke r18.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"A problem occurred when trying to execute method \\'\")\"],\"throwSimpleExceptionIfPossible.25\":[\"specialinvoke r19.<org.springframework.expression.ExpressionInvocationTargetException: void <init>(int,java.lang.String,java.lang.Throwable)>($i0, $r16, r3)\", \"r20 = (java.lang.Throwable) r19\", \"throw r20\"],\"updateExitTypeDescriptor\":null,\"toStringAST.2\":[\"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()\"],\"toStringAST.3\":[\"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)\", \"virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")\"],\"toStringAST.8\":[\"if i1 <= 0 goto $r8 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\"],\"toStringAST.10\":[\"$r8 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\", \"$r9 = interfaceinvoke $r8.<org.springframework.expression.spel.SpelNode: java.lang.String toStringAST()>()\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)\"],\"toStringAST.16\":[\"$r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()\", \"return $r7\"],\"isCompilable\":null,\"generateCode\":null,\"access$100\":null}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/ast/MethodReference.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.ast.MethodReference",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/MethodReference.class",
            "diff": "{\"lhs\" : {\"getValueRef.8\":\"$r7 = <org.springframework.expression.spel.ast.ValueRef$NullValueRef: org.springframework.expression.spel.ast.ValueRef$NullValueRef INSTANCE>\",\"getValueInternal.3\":null,\"getValueInternal.4\":[\"r3 = virtualinvoke $r7.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r8 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"r4 = virtualinvoke $r8.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\"],\"getValueInternal.8\":[\"r6 = specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.EvaluationContext,java.lang.Object,org.springframework.core.convert.TypeDescriptor,java.lang.Object[])>(r2, r3, r4, r5)\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void updateExitTypeDescriptor()>()\", \"return r6\"],\"getValueInternal.15\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, $r21)\"],\"getValueInternal.19\":[\"$r7 = new org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor\"],\"getValueInternal.23\":[\"goto [?= specialinvoke $r7.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)]\"],\"getValueInternal.25\":[\"specialinvoke $r7.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)\", \"r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor cachedExecutor> = $r7\"],\"getValueInternal.30\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, $r13)\", \"$r14 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.40\":[\"$r20 = virtualinvoke $r13.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\"],\"getValueInternal.42\":[\"specialinvoke $r14.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r13, $r17, $r15)\", \"throw $r14\"],\"throwIfNotNullSafe.4\":[\"$r2 = new org.springframework.expression.spel.SpelEvaluationException\"],\"throwIfNotNullSafe.11\":[\"specialinvoke $r2.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r5, $r3)\", \"throw $r2\"],\"getArguments.7\":\"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getScopeRootContextObject()>()\",\"getCachedExecutor.6\":null,\"findAccessorForMethod.6\":null,\"findAccessorForMethod.7\":[\"$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto $r8 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.16\":[\"$r15 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.23\":[\"specialinvoke $r15.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r14, $r17, $r16)\", \"throw $r15\", \"goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\", \"$r8 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.32\":[\"$z1 = r3 instanceof java.lang.Class\", \"if $z1 == 0 goto $r21 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()\"],\"findAccessorForMethod.39\":[\"specialinvoke $r8.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r10, $r9)\", \"throw $r8\"],\"throwSimpleExceptionIfPossible.9\":[\"if $z1 == 0 goto $r6 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.12\":[\"$r6 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.14\":[\"$r7 = new java.lang.StringBuilder\", \"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"A problem occurred when trying to execute method \\'\")\"],\"throwSimpleExceptionIfPossible.25\":[\"specialinvoke $r6.<org.springframework.expression.ExpressionInvocationTargetException: void <init>(int,java.lang.String,java.lang.Throwable)>($i0, $r16, r3)\", \"throw $r6\"],\"updateExitTypeDescriptor\":\"<org.springframework.expression.spel.ast.MethodReference: void updateExitTypeDescriptor()>\",\"toStringAST.2\":null,\"toStringAST.3\":[\"specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3)\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")\"],\"toStringAST.8\":[\"if i1 <= 0 goto $r7 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\"],\"toStringAST.10\":[\"$r7 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\", \"$r8 = interfaceinvoke $r7.<org.springframework.expression.spel.SpelNode: java.lang.String toStringAST()>()\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)\"],\"toStringAST.16\":[\"$r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()\", \"return $r6\"],\"isCompilable\":\"<org.springframework.expression.spel.ast.MethodReference: boolean isCompilable()>\",\"generateCode\":\"<org.springframework.expression.spel.ast.MethodReference: void generateCode(org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>\",\"access$100\":\"<org.springframework.expression.spel.ast.MethodReference: void access$100(org.springframework.expression.spel.ast.MethodReference)>\"},\"rhs\" : {\"getValueRef.8\":\"$r7 = <org.springframework.expression.spel.ast.ValueRef$NullValueRef: org.springframework.expression.spel.ast.ValueRef$NullValueRef instance>\",\"getValueInternal.3\":[\"$r6 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"r3 = virtualinvoke $r6.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"getValueInternal.4\":[\"r4 = virtualinvoke $r7.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\"],\"getValueInternal.8\":[\"$r8 = specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.EvaluationContext,java.lang.Object,org.springframework.core.convert.TypeDescriptor,java.lang.Object[])>(r2, r3, r4, r5)\", \"return $r8\"],\"getValueInternal.15\":[\"r29 = (org.springframework.expression.AccessException) $r21\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, r29)\"],\"getValueInternal.19\":[\"r27 = new org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor\"],\"getValueInternal.23\":[\"goto [?= specialinvoke r27.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)]\"],\"getValueInternal.25\":[\"specialinvoke r27.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)\", \"r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor cachedExecutor> = r27\"],\"getValueInternal.30\":[\"r30 = (org.springframework.expression.AccessException) $r13\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, r30)\", \"r28 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.40\":[\"r31 = (org.springframework.expression.AccessException) $r13\", \"$r20 = virtualinvoke r31.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\"],\"getValueInternal.42\":[\"specialinvoke r28.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r13, $r17, $r15)\", \"r32 = (java.lang.Throwable) r28\", \"throw r32\"],\"throwIfNotNullSafe.4\":[\"r7 = new org.springframework.expression.spel.SpelEvaluationException\"],\"throwIfNotNullSafe.11\":[\"specialinvoke r7.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r5, $r3)\", \"r8 = (java.lang.Throwable) r7\", \"throw r8\"],\"getArguments.7\":\"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getRootContextObject()>()\",\"getCachedExecutor.6\":[\"if r5 == null goto return null\"],\"findAccessorForMethod.6\":[\"if r5 == null goto r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.7\":[\"$z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\", \"if $z1 == 0 goto r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.16\":[\"r22 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.23\":[\"specialinvoke r22.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r14, $r17, $r16)\", \"r24 = (java.lang.Throwable) r22\", \"throw r24\", \"goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\", \"r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.32\":[\"$z0 = r3 instanceof java.lang.Class\", \"if $z0 == 0 goto $r21 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()\"],\"findAccessorForMethod.39\":[\"specialinvoke r23.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r10, $r9)\", \"r25 = (java.lang.Throwable) r23\", \"throw r25\"],\"throwSimpleExceptionIfPossible.9\":[\"if $z1 == 0 goto r19 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.12\":[\"r19 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.14\":[\"r18 = new java.lang.StringBuilder\", \"specialinvoke r18.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"A problem occurred when trying to execute method \\'\")\"],\"throwSimpleExceptionIfPossible.25\":[\"specialinvoke r19.<org.springframework.expression.ExpressionInvocationTargetException: void <init>(int,java.lang.String,java.lang.Throwable)>($i0, $r16, r3)\", \"r20 = (java.lang.Throwable) r19\", \"throw r20\"],\"updateExitTypeDescriptor\":null,\"toStringAST.2\":[\"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()\"],\"toStringAST.3\":[\"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)\", \"virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")\"],\"toStringAST.8\":[\"if i1 <= 0 goto $r8 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\"],\"toStringAST.10\":[\"$r8 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\", \"$r9 = interfaceinvoke $r8.<org.springframework.expression.spel.SpelNode: java.lang.String toStringAST()>()\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)\"],\"toStringAST.16\":[\"$r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()\", \"return $r7\"],\"isCompilable\":null,\"generateCode\":null,\"access$100\":null}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/ast/MethodReference.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.ast.MethodReference.generateCode(MethodVisitor,CodeFlow)",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/MethodReference.class",
            "diff": "{\"lhs\" : {\"getValueRef.8\":\"$r7 = <org.springframework.expression.spel.ast.ValueRef$NullValueRef: org.springframework.expression.spel.ast.ValueRef$NullValueRef INSTANCE>\",\"getValueInternal.3\":null,\"getValueInternal.4\":[\"r3 = virtualinvoke $r7.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r8 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"r4 = virtualinvoke $r8.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\"],\"getValueInternal.8\":[\"r6 = specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.EvaluationContext,java.lang.Object,org.springframework.core.convert.TypeDescriptor,java.lang.Object[])>(r2, r3, r4, r5)\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void updateExitTypeDescriptor()>()\", \"return r6\"],\"getValueInternal.15\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, $r13)\"],\"getValueInternal.19\":[\"$r7 = new org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor\"],\"getValueInternal.23\":[\"goto [?= specialinvoke $r7.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)]\"],\"getValueInternal.25\":[\"specialinvoke $r7.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)\", \"r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor cachedExecutor> = $r7\"],\"getValueInternal.30\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, $r14)\", \"$r15 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.40\":[\"$r21 = virtualinvoke $r14.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\"],\"getValueInternal.42\":[\"specialinvoke $r15.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r14, $r18, $r16)\", \"throw $r15\"],\"throwIfNotNullSafe.4\":[\"$r2 = new org.springframework.expression.spel.SpelEvaluationException\"],\"throwIfNotNullSafe.11\":[\"specialinvoke $r2.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r5, $r3)\", \"throw $r2\"],\"getArguments.7\":\"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getScopeRootContextObject()>()\",\"getCachedExecutor.6\":null,\"findAccessorForMethod.6\":null,\"findAccessorForMethod.7\":[\"$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto $r8 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.16\":[\"$r15 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.23\":[\"specialinvoke $r15.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r14, $r17, $r16)\", \"throw $r15\", \"goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\", \"$r8 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.32\":[\"$z1 = r3 instanceof java.lang.Class\", \"if $z1 == 0 goto $r21 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()\"],\"findAccessorForMethod.39\":[\"specialinvoke $r8.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r10, $r9)\", \"throw $r8\"],\"throwSimpleExceptionIfPossible.9\":[\"if $z1 == 0 goto $r6 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.12\":[\"$r6 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.14\":[\"$r7 = new java.lang.StringBuilder\", \"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"A problem occurred when trying to execute method \\'\")\"],\"throwSimpleExceptionIfPossible.25\":[\"specialinvoke $r6.<org.springframework.expression.ExpressionInvocationTargetException: void <init>(int,java.lang.String,java.lang.Throwable)>($i0, $r16, r3)\", \"throw $r6\"],\"updateExitTypeDescriptor\":\"<org.springframework.expression.spel.ast.MethodReference: void updateExitTypeDescriptor()>\",\"toStringAST.2\":null,\"toStringAST.3\":[\"specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3)\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")\"],\"toStringAST.8\":[\"if i1 <= 0 goto $r7 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\"],\"toStringAST.10\":[\"$r7 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\", \"$r8 = interfaceinvoke $r7.<org.springframework.expression.spel.SpelNode: java.lang.String toStringAST()>()\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)\"],\"toStringAST.16\":[\"$r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()\", \"return $r6\"],\"isCompilable\":\"<org.springframework.expression.spel.ast.MethodReference: boolean isCompilable()>\",\"generateCode\":\"<org.springframework.expression.spel.ast.MethodReference: void generateCode(org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>\",\"access$100\":\"<org.springframework.expression.spel.ast.MethodReference: void access$100(org.springframework.expression.spel.ast.MethodReference)>\"},\"rhs\" : {\"getValueRef.8\":\"$r7 = <org.springframework.expression.spel.ast.ValueRef$NullValueRef: org.springframework.expression.spel.ast.ValueRef$NullValueRef instance>\",\"getValueInternal.3\":[\"$r6 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"r3 = virtualinvoke $r6.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"getValueInternal.4\":[\"r4 = virtualinvoke $r7.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\"],\"getValueInternal.8\":[\"$r8 = specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.EvaluationContext,java.lang.Object,org.springframework.core.convert.TypeDescriptor,java.lang.Object[])>(r2, r3, r4, r5)\", \"return $r8\"],\"getValueInternal.15\":[\"r29 = (org.springframework.expression.AccessException) $r13\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, r29)\"],\"getValueInternal.19\":[\"r27 = new org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor\"],\"getValueInternal.23\":[\"goto [?= specialinvoke r27.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)]\"],\"getValueInternal.25\":[\"specialinvoke r27.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)\", \"r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor cachedExecutor> = r27\"],\"getValueInternal.30\":[\"r30 = (org.springframework.expression.AccessException) $r14\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, r30)\", \"r28 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.40\":[\"r31 = (org.springframework.expression.AccessException) $r14\", \"$r21 = virtualinvoke r31.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\"],\"getValueInternal.42\":[\"specialinvoke r28.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r14, $r18, $r16)\", \"r32 = (java.lang.Throwable) r28\", \"throw r32\"],\"throwIfNotNullSafe.4\":[\"r7 = new org.springframework.expression.spel.SpelEvaluationException\"],\"throwIfNotNullSafe.11\":[\"specialinvoke r7.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r5, $r3)\", \"r8 = (java.lang.Throwable) r7\", \"throw r8\"],\"getArguments.7\":\"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getRootContextObject()>()\",\"getCachedExecutor.6\":[\"if r5 == null goto return null\"],\"findAccessorForMethod.6\":[\"if r5 == null goto r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.7\":[\"$z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\", \"if $z1 == 0 goto r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.16\":[\"r22 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.23\":[\"specialinvoke r22.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r14, $r17, $r16)\", \"r24 = (java.lang.Throwable) r22\", \"throw r24\", \"goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\", \"r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.32\":[\"$z0 = r3 instanceof java.lang.Class\", \"if $z0 == 0 goto $r21 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()\"],\"findAccessorForMethod.39\":[\"specialinvoke r23.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r10, $r9)\", \"r25 = (java.lang.Throwable) r23\", \"throw r25\"],\"throwSimpleExceptionIfPossible.9\":[\"if $z1 == 0 goto r19 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.12\":[\"r19 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.14\":[\"r18 = new java.lang.StringBuilder\", \"specialinvoke r18.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"A problem occurred when trying to execute method \\'\")\"],\"throwSimpleExceptionIfPossible.25\":[\"specialinvoke r19.<org.springframework.expression.ExpressionInvocationTargetException: void <init>(int,java.lang.String,java.lang.Throwable)>($i0, $r16, r3)\", \"r20 = (java.lang.Throwable) r19\", \"throw r20\"],\"updateExitTypeDescriptor\":null,\"toStringAST.2\":[\"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()\"],\"toStringAST.3\":[\"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)\", \"virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")\"],\"toStringAST.8\":[\"if i1 <= 0 goto $r8 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\"],\"toStringAST.10\":[\"$r8 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\", \"$r9 = interfaceinvoke $r8.<org.springframework.expression.spel.SpelNode: java.lang.String toStringAST()>()\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)\"],\"toStringAST.16\":[\"$r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()\", \"return $r7\"],\"isCompilable\":null,\"generateCode\":null,\"access$100\":null}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/ast/MethodReference.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.ast.MethodReference.generateCode(MethodVisitor,CodeFlow)",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/MethodReference.class",
            "diff": "{\"lhs\" : {\"getValueRef.8\":\"$r7 = <org.springframework.expression.spel.ast.ValueRef$NullValueRef: org.springframework.expression.spel.ast.ValueRef$NullValueRef INSTANCE>\",\"getValueInternal.3\":null,\"getValueInternal.4\":[\"r3 = virtualinvoke $r7.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r8 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"r4 = virtualinvoke $r8.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\"],\"getValueInternal.8\":[\"r6 = specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.EvaluationContext,java.lang.Object,org.springframework.core.convert.TypeDescriptor,java.lang.Object[])>(r2, r3, r4, r5)\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void updateExitTypeDescriptor()>()\", \"return r6\"],\"getValueInternal.15\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, $r21)\"],\"getValueInternal.19\":[\"$r7 = new org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor\"],\"getValueInternal.23\":[\"goto [?= specialinvoke $r7.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)]\"],\"getValueInternal.25\":[\"specialinvoke $r7.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)\", \"r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor cachedExecutor> = $r7\"],\"getValueInternal.30\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, $r13)\", \"$r14 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.40\":[\"$r20 = virtualinvoke $r13.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\"],\"getValueInternal.42\":[\"specialinvoke $r14.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r13, $r17, $r15)\", \"throw $r14\"],\"throwIfNotNullSafe.4\":[\"$r2 = new org.springframework.expression.spel.SpelEvaluationException\"],\"throwIfNotNullSafe.11\":[\"specialinvoke $r2.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r5, $r3)\", \"throw $r2\"],\"getArguments.7\":\"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getScopeRootContextObject()>()\",\"getCachedExecutor.6\":null,\"findAccessorForMethod.6\":null,\"findAccessorForMethod.7\":[\"$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto $r8 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.16\":[\"$r15 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.23\":[\"specialinvoke $r15.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r14, $r17, $r16)\", \"throw $r15\", \"goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\", \"$r8 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.32\":[\"$z1 = r3 instanceof java.lang.Class\", \"if $z1 == 0 goto $r21 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()\"],\"findAccessorForMethod.39\":[\"specialinvoke $r8.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r10, $r9)\", \"throw $r8\"],\"throwSimpleExceptionIfPossible.9\":[\"if $z1 == 0 goto $r6 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.12\":[\"$r6 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.14\":[\"$r7 = new java.lang.StringBuilder\", \"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"A problem occurred when trying to execute method \\'\")\"],\"throwSimpleExceptionIfPossible.25\":[\"specialinvoke $r6.<org.springframework.expression.ExpressionInvocationTargetException: void <init>(int,java.lang.String,java.lang.Throwable)>($i0, $r16, r3)\", \"throw $r6\"],\"updateExitTypeDescriptor\":\"<org.springframework.expression.spel.ast.MethodReference: void updateExitTypeDescriptor()>\",\"toStringAST.2\":null,\"toStringAST.3\":[\"specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3)\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")\"],\"toStringAST.8\":[\"if i1 <= 0 goto $r7 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\"],\"toStringAST.10\":[\"$r7 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\", \"$r8 = interfaceinvoke $r7.<org.springframework.expression.spel.SpelNode: java.lang.String toStringAST()>()\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)\"],\"toStringAST.16\":[\"$r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()\", \"return $r6\"],\"isCompilable\":\"<org.springframework.expression.spel.ast.MethodReference: boolean isCompilable()>\",\"generateCode\":\"<org.springframework.expression.spel.ast.MethodReference: void generateCode(org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>\",\"access$100\":\"<org.springframework.expression.spel.ast.MethodReference: void access$100(org.springframework.expression.spel.ast.MethodReference)>\"},\"rhs\" : {\"getValueRef.8\":\"$r7 = <org.springframework.expression.spel.ast.ValueRef$NullValueRef: org.springframework.expression.spel.ast.ValueRef$NullValueRef instance>\",\"getValueInternal.3\":[\"$r6 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"r3 = virtualinvoke $r6.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"getValueInternal.4\":[\"r4 = virtualinvoke $r7.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\"],\"getValueInternal.8\":[\"$r8 = specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.EvaluationContext,java.lang.Object,org.springframework.core.convert.TypeDescriptor,java.lang.Object[])>(r2, r3, r4, r5)\", \"return $r8\"],\"getValueInternal.15\":[\"r29 = (org.springframework.expression.AccessException) $r21\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, r29)\"],\"getValueInternal.19\":[\"r27 = new org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor\"],\"getValueInternal.23\":[\"goto [?= specialinvoke r27.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)]\"],\"getValueInternal.25\":[\"specialinvoke r27.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)\", \"r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor cachedExecutor> = r27\"],\"getValueInternal.30\":[\"r30 = (org.springframework.expression.AccessException) $r13\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, r30)\", \"r28 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.40\":[\"r31 = (org.springframework.expression.AccessException) $r13\", \"$r20 = virtualinvoke r31.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\"],\"getValueInternal.42\":[\"specialinvoke r28.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r13, $r17, $r15)\", \"r32 = (java.lang.Throwable) r28\", \"throw r32\"],\"throwIfNotNullSafe.4\":[\"r7 = new org.springframework.expression.spel.SpelEvaluationException\"],\"throwIfNotNullSafe.11\":[\"specialinvoke r7.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r5, $r3)\", \"r8 = (java.lang.Throwable) r7\", \"throw r8\"],\"getArguments.7\":\"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getRootContextObject()>()\",\"getCachedExecutor.6\":[\"if r5 == null goto return null\"],\"findAccessorForMethod.6\":[\"if r5 == null goto r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.7\":[\"$z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\", \"if $z1 == 0 goto r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.16\":[\"r22 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.23\":[\"specialinvoke r22.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r14, $r17, $r16)\", \"r24 = (java.lang.Throwable) r22\", \"throw r24\", \"goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\", \"r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.32\":[\"$z0 = r3 instanceof java.lang.Class\", \"if $z0 == 0 goto $r21 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()\"],\"findAccessorForMethod.39\":[\"specialinvoke r23.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r10, $r9)\", \"r25 = (java.lang.Throwable) r23\", \"throw r25\"],\"throwSimpleExceptionIfPossible.9\":[\"if $z1 == 0 goto r19 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.12\":[\"r19 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.14\":[\"r18 = new java.lang.StringBuilder\", \"specialinvoke r18.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"A problem occurred when trying to execute method \\'\")\"],\"throwSimpleExceptionIfPossible.25\":[\"specialinvoke r19.<org.springframework.expression.ExpressionInvocationTargetException: void <init>(int,java.lang.String,java.lang.Throwable)>($i0, $r16, r3)\", \"r20 = (java.lang.Throwable) r19\", \"throw r20\"],\"updateExitTypeDescriptor\":null,\"toStringAST.2\":[\"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()\"],\"toStringAST.3\":[\"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)\", \"virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")\"],\"toStringAST.8\":[\"if i1 <= 0 goto $r8 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\"],\"toStringAST.10\":[\"$r8 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\", \"$r9 = interfaceinvoke $r8.<org.springframework.expression.spel.SpelNode: java.lang.String toStringAST()>()\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)\"],\"toStringAST.16\":[\"$r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()\", \"return $r7\"],\"isCompilable\":null,\"generateCode\":null,\"access$100\":null}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/ast/MethodReference.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.ast.MethodReference.updateExitTypeDescriptor()",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/MethodReference.class",
            "diff": "{\"lhs\" : {\"getValueRef.8\":\"$r7 = <org.springframework.expression.spel.ast.ValueRef$NullValueRef: org.springframework.expression.spel.ast.ValueRef$NullValueRef INSTANCE>\",\"getValueInternal.3\":null,\"getValueInternal.4\":[\"r3 = virtualinvoke $r7.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r8 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"r4 = virtualinvoke $r8.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\"],\"getValueInternal.8\":[\"r6 = specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.EvaluationContext,java.lang.Object,org.springframework.core.convert.TypeDescriptor,java.lang.Object[])>(r2, r3, r4, r5)\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void updateExitTypeDescriptor()>()\", \"return r6\"],\"getValueInternal.15\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, $r13)\"],\"getValueInternal.19\":[\"$r7 = new org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor\"],\"getValueInternal.23\":[\"goto [?= specialinvoke $r7.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)]\"],\"getValueInternal.25\":[\"specialinvoke $r7.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)\", \"r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor cachedExecutor> = $r7\"],\"getValueInternal.30\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, $r14)\", \"$r15 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.40\":[\"$r21 = virtualinvoke $r14.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\"],\"getValueInternal.42\":[\"specialinvoke $r15.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r14, $r18, $r16)\", \"throw $r15\"],\"throwIfNotNullSafe.4\":[\"$r2 = new org.springframework.expression.spel.SpelEvaluationException\"],\"throwIfNotNullSafe.11\":[\"specialinvoke $r2.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r5, $r3)\", \"throw $r2\"],\"getArguments.7\":\"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getScopeRootContextObject()>()\",\"getCachedExecutor.6\":null,\"findAccessorForMethod.6\":null,\"findAccessorForMethod.7\":[\"$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto $r8 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.16\":[\"$r15 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.23\":[\"specialinvoke $r15.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r14, $r17, $r16)\", \"throw $r15\", \"goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\", \"$r8 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.32\":[\"$z1 = r3 instanceof java.lang.Class\", \"if $z1 == 0 goto $r21 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()\"],\"findAccessorForMethod.39\":[\"specialinvoke $r8.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r10, $r9)\", \"throw $r8\"],\"throwSimpleExceptionIfPossible.9\":[\"if $z1 == 0 goto $r6 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.12\":[\"$r6 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.14\":[\"$r7 = new java.lang.StringBuilder\", \"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"A problem occurred when trying to execute method \\'\")\"],\"throwSimpleExceptionIfPossible.25\":[\"specialinvoke $r6.<org.springframework.expression.ExpressionInvocationTargetException: void <init>(int,java.lang.String,java.lang.Throwable)>($i0, $r16, r3)\", \"throw $r6\"],\"updateExitTypeDescriptor\":\"<org.springframework.expression.spel.ast.MethodReference: void updateExitTypeDescriptor()>\",\"toStringAST.2\":null,\"toStringAST.3\":[\"specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3)\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")\"],\"toStringAST.8\":[\"if i1 <= 0 goto $r7 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\"],\"toStringAST.10\":[\"$r7 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\", \"$r8 = interfaceinvoke $r7.<org.springframework.expression.spel.SpelNode: java.lang.String toStringAST()>()\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)\"],\"toStringAST.16\":[\"$r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()\", \"return $r6\"],\"isCompilable\":\"<org.springframework.expression.spel.ast.MethodReference: boolean isCompilable()>\",\"generateCode\":\"<org.springframework.expression.spel.ast.MethodReference: void generateCode(org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>\",\"access$100\":\"<org.springframework.expression.spel.ast.MethodReference: void access$100(org.springframework.expression.spel.ast.MethodReference)>\"},\"rhs\" : {\"getValueRef.8\":\"$r7 = <org.springframework.expression.spel.ast.ValueRef$NullValueRef: org.springframework.expression.spel.ast.ValueRef$NullValueRef instance>\",\"getValueInternal.3\":[\"$r6 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"r3 = virtualinvoke $r6.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"getValueInternal.4\":[\"r4 = virtualinvoke $r7.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\"],\"getValueInternal.8\":[\"$r8 = specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.EvaluationContext,java.lang.Object,org.springframework.core.convert.TypeDescriptor,java.lang.Object[])>(r2, r3, r4, r5)\", \"return $r8\"],\"getValueInternal.15\":[\"r29 = (org.springframework.expression.AccessException) $r13\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, r29)\"],\"getValueInternal.19\":[\"r27 = new org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor\"],\"getValueInternal.23\":[\"goto [?= specialinvoke r27.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)]\"],\"getValueInternal.25\":[\"specialinvoke r27.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)\", \"r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor cachedExecutor> = r27\"],\"getValueInternal.30\":[\"r30 = (org.springframework.expression.AccessException) $r14\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, r30)\", \"r28 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.40\":[\"r31 = (org.springframework.expression.AccessException) $r14\", \"$r21 = virtualinvoke r31.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\"],\"getValueInternal.42\":[\"specialinvoke r28.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r14, $r18, $r16)\", \"r32 = (java.lang.Throwable) r28\", \"throw r32\"],\"throwIfNotNullSafe.4\":[\"r7 = new org.springframework.expression.spel.SpelEvaluationException\"],\"throwIfNotNullSafe.11\":[\"specialinvoke r7.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r5, $r3)\", \"r8 = (java.lang.Throwable) r7\", \"throw r8\"],\"getArguments.7\":\"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getRootContextObject()>()\",\"getCachedExecutor.6\":[\"if r5 == null goto return null\"],\"findAccessorForMethod.6\":[\"if r5 == null goto r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.7\":[\"$z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\", \"if $z1 == 0 goto r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.16\":[\"r22 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.23\":[\"specialinvoke r22.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r14, $r17, $r16)\", \"r24 = (java.lang.Throwable) r22\", \"throw r24\", \"goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\", \"r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.32\":[\"$z0 = r3 instanceof java.lang.Class\", \"if $z0 == 0 goto $r21 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()\"],\"findAccessorForMethod.39\":[\"specialinvoke r23.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r10, $r9)\", \"r25 = (java.lang.Throwable) r23\", \"throw r25\"],\"throwSimpleExceptionIfPossible.9\":[\"if $z1 == 0 goto r19 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.12\":[\"r19 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.14\":[\"r18 = new java.lang.StringBuilder\", \"specialinvoke r18.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"A problem occurred when trying to execute method \\'\")\"],\"throwSimpleExceptionIfPossible.25\":[\"specialinvoke r19.<org.springframework.expression.ExpressionInvocationTargetException: void <init>(int,java.lang.String,java.lang.Throwable)>($i0, $r16, r3)\", \"r20 = (java.lang.Throwable) r19\", \"throw r20\"],\"updateExitTypeDescriptor\":null,\"toStringAST.2\":[\"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()\"],\"toStringAST.3\":[\"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)\", \"virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")\"],\"toStringAST.8\":[\"if i1 <= 0 goto $r8 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\"],\"toStringAST.10\":[\"$r8 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\", \"$r9 = interfaceinvoke $r8.<org.springframework.expression.spel.SpelNode: java.lang.String toStringAST()>()\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)\"],\"toStringAST.16\":[\"$r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()\", \"return $r7\"],\"isCompilable\":null,\"generateCode\":null,\"access$100\":null}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/ast/MethodReference.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.ast.MethodReference.updateExitTypeDescriptor()",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/MethodReference.class",
            "diff": "{\"lhs\" : {\"getValueRef.8\":\"$r7 = <org.springframework.expression.spel.ast.ValueRef$NullValueRef: org.springframework.expression.spel.ast.ValueRef$NullValueRef INSTANCE>\",\"getValueInternal.3\":null,\"getValueInternal.4\":[\"r3 = virtualinvoke $r7.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r8 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"r4 = virtualinvoke $r8.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\"],\"getValueInternal.8\":[\"r6 = specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.EvaluationContext,java.lang.Object,org.springframework.core.convert.TypeDescriptor,java.lang.Object[])>(r2, r3, r4, r5)\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void updateExitTypeDescriptor()>()\", \"return r6\"],\"getValueInternal.15\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, $r21)\"],\"getValueInternal.19\":[\"$r7 = new org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor\"],\"getValueInternal.23\":[\"goto [?= specialinvoke $r7.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)]\"],\"getValueInternal.25\":[\"specialinvoke $r7.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)\", \"r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor cachedExecutor> = $r7\"],\"getValueInternal.30\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, $r13)\", \"$r14 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.40\":[\"$r20 = virtualinvoke $r13.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\"],\"getValueInternal.42\":[\"specialinvoke $r14.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r13, $r17, $r15)\", \"throw $r14\"],\"throwIfNotNullSafe.4\":[\"$r2 = new org.springframework.expression.spel.SpelEvaluationException\"],\"throwIfNotNullSafe.11\":[\"specialinvoke $r2.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r5, $r3)\", \"throw $r2\"],\"getArguments.7\":\"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getScopeRootContextObject()>()\",\"getCachedExecutor.6\":null,\"findAccessorForMethod.6\":null,\"findAccessorForMethod.7\":[\"$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto $r8 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.16\":[\"$r15 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.23\":[\"specialinvoke $r15.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r14, $r17, $r16)\", \"throw $r15\", \"goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\", \"$r8 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.32\":[\"$z1 = r3 instanceof java.lang.Class\", \"if $z1 == 0 goto $r21 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()\"],\"findAccessorForMethod.39\":[\"specialinvoke $r8.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r10, $r9)\", \"throw $r8\"],\"throwSimpleExceptionIfPossible.9\":[\"if $z1 == 0 goto $r6 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.12\":[\"$r6 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.14\":[\"$r7 = new java.lang.StringBuilder\", \"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"A problem occurred when trying to execute method \\'\")\"],\"throwSimpleExceptionIfPossible.25\":[\"specialinvoke $r6.<org.springframework.expression.ExpressionInvocationTargetException: void <init>(int,java.lang.String,java.lang.Throwable)>($i0, $r16, r3)\", \"throw $r6\"],\"updateExitTypeDescriptor\":\"<org.springframework.expression.spel.ast.MethodReference: void updateExitTypeDescriptor()>\",\"toStringAST.2\":null,\"toStringAST.3\":[\"specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3)\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")\"],\"toStringAST.8\":[\"if i1 <= 0 goto $r7 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\"],\"toStringAST.10\":[\"$r7 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\", \"$r8 = interfaceinvoke $r7.<org.springframework.expression.spel.SpelNode: java.lang.String toStringAST()>()\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)\"],\"toStringAST.16\":[\"$r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()\", \"return $r6\"],\"isCompilable\":\"<org.springframework.expression.spel.ast.MethodReference: boolean isCompilable()>\",\"generateCode\":\"<org.springframework.expression.spel.ast.MethodReference: void generateCode(org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>\",\"access$100\":\"<org.springframework.expression.spel.ast.MethodReference: void access$100(org.springframework.expression.spel.ast.MethodReference)>\"},\"rhs\" : {\"getValueRef.8\":\"$r7 = <org.springframework.expression.spel.ast.ValueRef$NullValueRef: org.springframework.expression.spel.ast.ValueRef$NullValueRef instance>\",\"getValueInternal.3\":[\"$r6 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"r3 = virtualinvoke $r6.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"getValueInternal.4\":[\"r4 = virtualinvoke $r7.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\"],\"getValueInternal.8\":[\"$r8 = specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.EvaluationContext,java.lang.Object,org.springframework.core.convert.TypeDescriptor,java.lang.Object[])>(r2, r3, r4, r5)\", \"return $r8\"],\"getValueInternal.15\":[\"r29 = (org.springframework.expression.AccessException) $r21\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, r29)\"],\"getValueInternal.19\":[\"r27 = new org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor\"],\"getValueInternal.23\":[\"goto [?= specialinvoke r27.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)]\"],\"getValueInternal.25\":[\"specialinvoke r27.<org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor: void <init>(org.springframework.expression.MethodExecutor,java.lang.Class,org.springframework.core.convert.TypeDescriptor,java.util.List)>(r24, $r25, r3, r5)\", \"r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor cachedExecutor> = r27\"],\"getValueInternal.30\":[\"r30 = (org.springframework.expression.AccessException) $r13\", \"specialinvoke r0.<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(java.lang.Object,org.springframework.expression.AccessException)>(r2, r30)\", \"r28 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.40\":[\"r31 = (org.springframework.expression.AccessException) $r13\", \"$r20 = virtualinvoke r31.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\"],\"getValueInternal.42\":[\"specialinvoke r28.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r13, $r17, $r15)\", \"r32 = (java.lang.Throwable) r28\", \"throw r32\"],\"throwIfNotNullSafe.4\":[\"r7 = new org.springframework.expression.spel.SpelEvaluationException\"],\"throwIfNotNullSafe.11\":[\"specialinvoke r7.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r5, $r3)\", \"r8 = (java.lang.Throwable) r7\", \"throw r8\"],\"getArguments.7\":\"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getRootContextObject()>()\",\"getCachedExecutor.6\":[\"if r5 == null goto return null\"],\"findAccessorForMethod.6\":[\"if r5 == null goto r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.7\":[\"$z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\", \"if $z1 == 0 goto r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.16\":[\"r22 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.23\":[\"specialinvoke r22.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r14, $r17, $r16)\", \"r24 = (java.lang.Throwable) r22\", \"throw r24\", \"goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\", \"r23 = new org.springframework.expression.spel.SpelEvaluationException\"],\"findAccessorForMethod.32\":[\"$z0 = r3 instanceof java.lang.Class\", \"if $z0 == 0 goto $r21 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()\"],\"findAccessorForMethod.39\":[\"specialinvoke r23.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r10, $r9)\", \"r25 = (java.lang.Throwable) r23\", \"throw r25\"],\"throwSimpleExceptionIfPossible.9\":[\"if $z1 == 0 goto r19 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.12\":[\"r19 = new org.springframework.expression.ExpressionInvocationTargetException\"],\"throwSimpleExceptionIfPossible.14\":[\"r18 = new java.lang.StringBuilder\", \"specialinvoke r18.<java.lang.StringBuilder: void <init>()>()\", \"$r8 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"A problem occurred when trying to execute method \\'\")\"],\"throwSimpleExceptionIfPossible.25\":[\"specialinvoke r19.<org.springframework.expression.ExpressionInvocationTargetException: void <init>(int,java.lang.String,java.lang.Throwable)>($i0, $r16, r3)\", \"r20 = (java.lang.Throwable) r19\", \"throw r20\"],\"updateExitTypeDescriptor\":null,\"toStringAST.2\":[\"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()\"],\"toStringAST.3\":[\"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)\", \"virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")\"],\"toStringAST.8\":[\"if i1 <= 0 goto $r8 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\"],\"toStringAST.10\":[\"$r8 = virtualinvoke r0.<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.SpelNode getChild(int)>(i1)\", \"$r9 = interfaceinvoke $r8.<org.springframework.expression.spel.SpelNode: java.lang.String toStringAST()>()\", \"virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)\"],\"toStringAST.16\":[\"$r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()\", \"return $r7\"],\"isCompilable\":null,\"generateCode\":null,\"access$100\":null}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/ast/MethodReference.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "diff": "{\"lhs\" : {\"getValueInternal.2\":[\"$r5 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"$r6 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()>()\", \"$r7 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.expression.spel.SpelParserConfiguration: boolean isAutoGrowNullReferences()>()\", \"r2 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r5, $r6, $z0)\", \"r3 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor>\", \"$z1 = r3 instanceof org.springframework.expression.spel.CompilablePropertyAccessor\", \"if $z1 == 0 goto return r2\", \"r4 = (org.springframework.expression.spel.CompilablePropertyAccessor) r3\", \"$r8 = interfaceinvoke r4.<org.springframework.expression.spel.CompilablePropertyAccessor: java.lang.Class getPropertyType()>()\", \"$r9 = staticinvoke <org.springframework.expression.spel.CodeFlow: java.lang.String toDescriptor(java.lang.Class)>($r8)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String exitTypeDescriptor> = $r9\", \"return r2\"],\"getValueInternal.4\":[\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r5)\", \"$r6 = virtualinvoke r38.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r6 != null goto return r38\", \"if z0 == 0 goto return r38\", \"$r7 = newarray (java.lang.Class)[2]\", \"$r7[0] = class \"Lorg/springframework/expression/spel/ast/Indexer;\"\", \"$r7[1] = class \"Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;\"\", \"$z1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean nextChildIs(java.lang.Class[])>($r7)\", \"if $z1 == 0 goto return r38\", \"r3 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"if r3 == null goto $z5 = 0\", \"$z5 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"No result type\")]\", \"$z5 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"No result type\")\"],\"getValueInternal.21\":[\"if class \"Ljava/util/List;\" != $r8 goto $r9 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r21 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r21, r1, r2)\", \"if $z4 == 0 goto return r38\", \"$r22 = new java.util.ArrayList\", \"specialinvoke $r22.<java.util.ArrayList: void <init>()>()\", \"$r23 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r23, $r22)\", \"$r24 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r24)\", \"goto [?= return r38]\", \"$r9 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"if class \"Ljava/util/Map;\" != $r9 goto $r10 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\"],\"getValueInternal.35\":[\"$z3 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r17, r1, r2)\", \"if $z3 == 0 goto return r38\", \"$r18 = new java.util.HashMap\", \"specialinvoke $r18.<java.util.HashMap: void <init>()>()\", \"$r19 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r19, $r18)\", \"$r20 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r20)\", \"goto [?= return r38]\", \"$r10 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z2 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r10, r1, r2)\", \"if $z2 == 0 goto (branch)\", \"$r11 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"r41 = virtualinvoke $r11.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r12 = newarray (java.lang.Class)[0]\", \"$r13 = staticinvoke <org.springframework.util.ReflectionUtils: java.lang.reflect.Constructor accessibleConstructor(java.lang.Class,java.lang.Class[])>(r41, $r12)\", \"$r14 = newarray (java.lang.Object)[0]\", \"r4 = virtualinvoke $r13.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r14)\", \"$r15 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r15, r4)\", \"$r16 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r16)\", \"goto [?= return r38]\", \"$r31 := @caughtexception\", \"$r32 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.61\":[\"$r33 = virtualinvoke $r31.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>()\", \"$r35 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r34 = newarray (java.lang.Object)[1]\", \"$r36 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r37 = virtualinvoke $r36.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r34[0] = $r37\", \"specialinvoke $r32.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r33, $r35, $r34)\", \"throw $r32\"],\"getValueInternal.70\":[\"$r26 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.72\":[\"$r28 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r27 = newarray (java.lang.Object)[1]\", \"$r29 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r30 = virtualinvoke $r29.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r27[0] = $r30\", \"specialinvoke $r26.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r25, $r28, $r27)\", \"throw $r26\", \"return r38\"],\"readProperty.8\":[\"$r25 = <org.springframework.expression.TypedValue: org.springframework.expression.TypedValue NULL>\", \"return $r25\"],\"readProperty.11\":[\"if r5 == null goto $r33 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r22 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"$z2 = interfaceinvoke $r22.<java.util.List: boolean contains(java.lang.Object)>(r5)\", \"if $z2 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = null\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r24 = interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r23, r3)\", \"return $r24\", \"$r26 := @caughtexception\"],\"readProperty.20\":[\"$r33 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r34 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r35 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r33, $r34)\", \"r36 = interfaceinvoke r35.<java.util.List: java.util.Iterator iterator()>()\", \"$z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()\", \"if $z4 == 0 goto (branch)\", \"$r16 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>()\", \"r37 = (org.springframework.expression.PropertyAccessor) $r16\", \"$r17 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z0 = interfaceinvoke r37.<org.springframework.expression.PropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r17, r3)\"],\"readProperty.31\":[\"$z1 = r37 instanceof org.springframework.expression.spel.support.ReflectivePropertyAccessor\", \"if $z1 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r37\", \"$r20 = (org.springframework.expression.spel.support.ReflectivePropertyAccessor) r37\", \"$r21 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r37 = virtualinvoke $r20.<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r21, r3)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r37\", \"$r18 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r19 = interfaceinvoke r37.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r18, r3)\", \"return $r19\", \"goto [?= $z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\"],\"readProperty.43\":[\"$r28 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.47\":[\"$r31 = virtualinvoke $r27.<java.lang.Exception: java.lang.String getMessage()>()\"],\"readProperty.49\":[\"specialinvoke $r28.<org.springframework.expression.spel.SpelEvaluationException: void <init>(java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r27, $r30, $r29)\", \"throw $r28\", \"$r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r6 != null goto $r7 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r13 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r15 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL>\", \"$r14 = newarray (java.lang.Object)[1]\", \"$r14[0] = r3\", \"specialinvoke $r13.<org.springframework.expression.spel.SpelEvaluationException: void <init>(org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r15, $r14)\", \"throw $r13\", \"$r7 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.61\":[\"$r9 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE>\", \"$r8 = newarray (java.lang.Object)[2]\", \"$r8[0] = r3\", \"$r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r11 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r10)\", \"$r12 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r11)\", \"$r8[1] = $r12\", \"specialinvoke $r7.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r9, $r8)\", \"throw $r7\"],\"writeProperty.6\":[\"if $r7 != null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"writeProperty.8\":[\"if $z2 == 0 goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"writeProperty.10\":[\"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r8 != null goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\", \"$r20 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r22 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL>\", \"$r21 = newarray (java.lang.Object)[1]\", \"$r21[0] = r3\", \"specialinvoke $r20.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r22, $r21)\", \"throw $r20\"],\"writeProperty.20\":[\"if r5 == null goto $r30 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r18 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"$z1 = interfaceinvoke $r18.<java.util.List: boolean contains(java.lang.Object)>(r5)\", \"if $z1 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor> = null\", \"$r19 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r19, r3, r4)\"],\"writeProperty.27\":[\"$r28 := @caughtexception\"],\"writeProperty.29\":[\"$r30 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r31 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r32 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r30, $r31)\", \"r33 = interfaceinvoke r32.<java.util.List: java.util.Iterator iterator()>()\", \"$z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()\", \"if $z3 == 0 goto (branch)\", \"$r15 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (org.springframework.expression.PropertyAccessor) $r15\", \"$r16 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z0 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r16, r3)\"],\"writeProperty.40\":null,\"writeProperty.41\":[\"$r17 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r17, r3, r4)\"],\"writeProperty.44\":[\"goto [?= $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r9 = new org.springframework.expression.spel.SpelEvaluationException]\", \"$r23 := @caughtexception\", \"$r24 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.49\":[\"$r26 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_WRITE>\", \"$r25 = newarray (java.lang.Object)[2]\", \"$r25[0] = r3\", \"$r27 = virtualinvoke $r23.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\", \"$r25[1] = $r27\", \"specialinvoke $r24.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r23, $r26, $r25)\", \"throw $r24\", \"$r9 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.58\":[\"$r11 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE>\", \"$r10 = newarray (java.lang.Object)[2]\", \"$r10[0] = r3\", \"$r12 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r13 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r12)\", \"$r14 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r13)\", \"$r10[1] = $r14\", \"specialinvoke $r9.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r11, $r10)\", \"throw $r9\"],\"isWritableProperty.4\":\"r4 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.5\":\"if r4 == null goto return 0\",\"isWritableProperty.6\":\"$r9 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.7\":\"$r10 = interfaceinvoke r3.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\",\"isWritableProperty.8\":\"r5 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r9, $r10)\",\"isWritableProperty.9\":\"r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>()\",\"isWritableProperty.10\":\"$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\",\"isWritableProperty.11\":\"if $z0 == 0 goto return 0\",\"isWritableProperty.12\":\"$r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()\",\"isWritableProperty.13\":\"r7 = (org.springframework.expression.PropertyAccessor) $r11\",\"isWritableProperty.14\":\"$z1 = interfaceinvoke r7.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r3, r4, r1)\",\"isWritableProperty.19\":\"goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\",\"isCompilable\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isCompilable()>\",\"generateCode\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void generateCode(org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>\",\"access$100\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$200\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$300\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$300(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>\",\"access$100\":null,\"access$200\":null},\"rhs\" : {\"getValueInternal.2\":[\"$r2 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"$r3 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()>()\", \"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()>()\", \"$z0 = virtualinvoke $r4.<org.springframework.expression.spel.SpelParserConfiguration: boolean isAutoGrowNullReferences()>()\", \"$r5 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r2, $r3, $z0)\", \"return $r5\"],\"getValueInternal.4\":[\"$r4 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r4)\", \"$r5 = virtualinvoke r53.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r5 != null goto return r53\", \"if z0 == 0 goto return r53\", \"$r6 = newarray (java.lang.Class)[2]\", \"$r6[0] = class \"Lorg/springframework/expression/spel/ast/Indexer;\"\", \"$r6[1] = class \"Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;\"\", \"$z1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean nextChildIs(java.lang.Class[])>($r6)\", \"if $z1 == 0 goto return r53\", \"r3 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r7 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$z2 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/List;\")\", \"if $z2 != 0 goto $r8 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r19 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$z6 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/Map;\")\", \"if $z6 == 0 goto $r20 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\"],\"getValueInternal.21\":[\"$z3 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/List;\")\", \"if $z3 == 0 goto $r9 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$r14 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z5 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r14, r1, r2)\", \"if $z5 == 0 goto (branch)\", \"$r15 = class \"Ljava/util/ArrayList;\"\", \"$r16 = virtualinvoke $r15.<java.lang.Class: java.lang.Object newInstance()>()\", \"r54 = (java.util.List) $r16\"],\"getValueInternal.35\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r17, r54)\", \"$r18 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r18)\", \"goto [?= return r53]\", \"$r33 := @caughtexception\", \"r63 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i2 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r36 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_LIST_FOR_INDEXING>\", \"$r35 = newarray (java.lang.Object)[0]\", \"specialinvoke r63.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r33, $r36, $r35)\", \"r69 = (java.lang.Throwable) r63\", \"throw r69\", \"$r29 := @caughtexception\", \"r64 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.61\":[\"$r32 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_LIST_FOR_INDEXING>\", \"$r31 = newarray (java.lang.Object)[0]\", \"specialinvoke r64.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r29, $r32, $r31)\", \"r70 = (java.lang.Throwable) r64\", \"throw r70\", \"$r9 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r9, r1, r2)\", \"if $z4 == 0 goto (branch)\", \"$r10 = class \"Ljava/util/HashMap;\"\", \"$r11 = virtualinvoke $r10.<java.lang.Class: java.lang.Object newInstance()>()\", \"r57 = (java.util.Map) $r11\", \"$r12 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r12, r57)\", \"$r13 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r13)\", \"goto [?= return r53]\", \"$r37 := @caughtexception\", \"r65 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i3 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r40 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_MAP_FOR_INDEXING>\", \"$r39 = newarray (java.lang.Object)[0]\", \"specialinvoke r65.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i3, $r37, $r40, $r39)\", \"r71 = (java.lang.Throwable) r65\", \"throw r71\"],\"getValueInternal.70\":[\"r66 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.72\":[\"$r28 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_MAP_FOR_INDEXING>\", \"$r27 = newarray (java.lang.Object)[0]\", \"specialinvoke r66.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r25, $r28, $r27)\", \"r72 = (java.lang.Throwable) r66\", \"throw r72\", \"$r20 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z7 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r20, r1, r2)\", \"if $z7 == 0 goto (branch)\", \"$r21 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r22 = virtualinvoke $r21.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"r60 = virtualinvoke $r22.<java.lang.Class: java.lang.Object newInstance()>()\", \"$r23 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r23, r60)\", \"$r24 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r24)\", \"goto [?= return r53]\", \"$r41 := @caughtexception\", \"r67 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r44 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r43 = newarray (java.lang.Object)[1]\", \"$r45 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r46 = virtualinvoke $r45.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r43[0] = $r46\", \"specialinvoke r67.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i4, $r41, $r44, $r43)\", \"r73 = (java.lang.Throwable) r67\", \"throw r73\", \"$r47 := @caughtexception\", \"r68 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i5 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r50 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r49 = newarray (java.lang.Object)[1]\", \"$r51 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r52 = virtualinvoke $r51.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r49[0] = $r52\", \"specialinvoke r68.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i5, $r47, $r50, $r49)\", \"r74 = (java.lang.Throwable) r68\", \"throw r74\", \"return r53\"],\"readProperty.8\":[\"$r26 = <org.springframework.expression.TypedValue: org.springframework.expression.TypedValue NULL>\", \"return $r26\"],\"readProperty.11\":[\"if r5 == null goto $r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r24 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r25 = interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r24, r3)\", \"return $r25\", \"$r32 := @caughtexception\"],\"readProperty.20\":[\"$r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r7 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r34 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r6, $r7)\", \"if r34 == null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r35 = interfaceinvoke r34.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()\"],\"readProperty.31\":[\"$r18 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>()\", \"r36 = (org.springframework.expression.PropertyAccessor) $r18\", \"$r19 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z1 = interfaceinvoke r36.<org.springframework.expression.PropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r19, r3)\", \"if $z1 == 0 goto (branch)\", \"$z2 = r36 instanceof org.springframework.expression.spel.support.ReflectivePropertyAccessor\", \"if $z2 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r36\", \"$r22 = (org.springframework.expression.spel.support.ReflectivePropertyAccessor) r36\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r36 = virtualinvoke $r22.<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r23, r3)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r36\", \"$r20 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r21 = interfaceinvoke r36.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r20, r3)\", \"return $r21\", \"goto [?= $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\"],\"readProperty.43\":[\"r38 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.47\":[\"r41 = (org.springframework.expression.AccessException) $r27\", \"$r31 = virtualinvoke r41.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\"],\"readProperty.49\":[\"specialinvoke r38.<org.springframework.expression.spel.SpelEvaluationException: void <init>(java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r27, $r30, $r29)\", \"r42 = (java.lang.Throwable) r38\", \"throw r42\", \"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r8 != null goto r40 = new org.springframework.expression.spel.SpelEvaluationException\", \"r39 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r17 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL>\", \"$r16 = newarray (java.lang.Object)[1]\", \"$r16[0] = r3\", \"specialinvoke r39.<org.springframework.expression.spel.SpelEvaluationException: void <init>(org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r17, $r16)\", \"r43 = (java.lang.Throwable) r39\", \"throw r43\", \"r40 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.61\":[\"$r11 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE>\", \"$r10 = newarray (java.lang.Object)[2]\", \"$r10[0] = r3\", \"$r12 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r13 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r12)\", \"$r14 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r13)\", \"$r10[1] = $r14\", \"specialinvoke r40.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r11, $r10)\", \"r44 = (java.lang.Throwable) r40\", \"throw r44\"],\"writeProperty.6\":[\"if $r7 != null goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\"],\"writeProperty.8\":[\"if $z2 == 0 goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\"],\"writeProperty.10\":null,\"writeProperty.20\":[\"if r5 == null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r23, r3, r4)\"],\"writeProperty.27\":[\"$r24 := @caughtexception\"],\"writeProperty.29\":[\"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r9 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r31 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r8, $r9)\", \"if r31 == null goto $r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r32 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()\"],\"writeProperty.40\":[\"$r20 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (org.springframework.expression.PropertyAccessor) $r20\", \"$r21 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z1 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r21, r3)\", \"if $z1 == 0 goto (branch)\"],\"writeProperty.41\":[\"$r22 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r22, r3, r4)\"],\"writeProperty.44\":[\"goto [?= $z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\", \"$r25 := @caughtexception\", \"r34 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.49\":[\"$r28 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_WRITE>\", \"$r27 = newarray (java.lang.Object)[2]\", \"$r27[0] = r3\", \"r37 = (org.springframework.expression.AccessException) $r25\", \"$r29 = virtualinvoke r37.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\", \"$r27[1] = $r29\", \"specialinvoke r34.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r25, $r28, $r27)\", \"r38 = (java.lang.Throwable) r34\", \"throw r38\", \"$r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r10 != null goto r36 = new org.springframework.expression.spel.SpelEvaluationException\", \"r35 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r19 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL>\", \"$r18 = newarray (java.lang.Object)[1]\", \"$r18[0] = r3\", \"specialinvoke r35.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r19, $r18)\", \"r39 = (java.lang.Throwable) r35\", \"throw r39\", \"r36 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.58\":[\"$r13 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE>\", \"$r12 = newarray (java.lang.Object)[2]\", \"$r12[0] = r3\", \"$r14 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r15 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r14)\", \"$r16 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r15)\", \"$r12[1] = $r16\", \"specialinvoke r36.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r13, $r12)\", \"r40 = (java.lang.Throwable) r36\", \"throw r40\"],\"isWritableProperty.4\":\"$r8 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.5\":\"$r9 = interfaceinvoke r3.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\",\"isWritableProperty.6\":\"r4 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r8, $r9)\",\"isWritableProperty.7\":\"if r4 == null goto return 0\",\"isWritableProperty.8\":\"r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()\",\"isWritableProperty.9\":\"$z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\",\"isWritableProperty.10\":\"if $z0 == 0 goto return 0\",\"isWritableProperty.11\":\"$r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\",\"isWritableProperty.12\":\"r6 = (org.springframework.expression.PropertyAccessor) $r10\",\"isWritableProperty.13\":\"$r11 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.14\":\"$z1 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r3, $r11, r1)\",\"isWritableProperty.19\":\"goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\",\"isCompilable\":null,\"generateCode\":null,\"access$100\":null,\"access$200\":null,\"access$300\":null,\"access$100\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$200\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>\"}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "diff": "{\"lhs\" : {\"getValueInternal.2\":[\"$r5 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"$r6 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()>()\", \"$r7 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.expression.spel.SpelParserConfiguration: boolean isAutoGrowNullReferences()>()\", \"r2 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r5, $r6, $z0)\", \"r3 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor>\", \"$z1 = r3 instanceof org.springframework.expression.spel.CompilablePropertyAccessor\", \"if $z1 == 0 goto return r2\", \"r4 = (org.springframework.expression.spel.CompilablePropertyAccessor) r3\", \"$r8 = interfaceinvoke r4.<org.springframework.expression.spel.CompilablePropertyAccessor: java.lang.Class getPropertyType()>()\", \"$r9 = staticinvoke <org.springframework.expression.spel.CodeFlow: java.lang.String toDescriptor(java.lang.Class)>($r8)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String exitTypeDescriptor> = $r9\", \"return r2\"],\"getValueInternal.4\":[\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r5)\", \"$r6 = virtualinvoke r38.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r6 != null goto return r38\", \"if z0 == 0 goto return r38\", \"$r7 = newarray (java.lang.Class)[2]\", \"$r7[0] = class \"Lorg/springframework/expression/spel/ast/Indexer;\"\", \"$r7[1] = class \"Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;\"\", \"$z1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean nextChildIs(java.lang.Class[])>($r7)\", \"if $z1 == 0 goto return r38\", \"r3 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"if r3 == null goto $z5 = 0\", \"$z5 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"No result type\")]\", \"$z5 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"No result type\")\"],\"getValueInternal.21\":[\"if class \"Ljava/util/List;\" != $r8 goto $r9 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r21 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r21, r1, r2)\", \"if $z4 == 0 goto return r38\", \"$r22 = new java.util.ArrayList\", \"specialinvoke $r22.<java.util.ArrayList: void <init>()>()\", \"$r23 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r23, $r22)\", \"$r24 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r24)\", \"goto [?= return r38]\", \"$r9 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"if class \"Ljava/util/Map;\" != $r9 goto $r10 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\"],\"getValueInternal.35\":[\"$z3 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r17, r1, r2)\", \"if $z3 == 0 goto return r38\", \"$r18 = new java.util.HashMap\", \"specialinvoke $r18.<java.util.HashMap: void <init>()>()\", \"$r19 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r19, $r18)\"],\"getValueInternal.42\":[\"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r20)\", \"goto [?= return r38]\", \"$r10 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z2 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r10, r1, r2)\", \"if $z2 == 0 goto (branch)\", \"$r11 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"r41 = virtualinvoke $r11.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r12 = newarray (java.lang.Class)[0]\", \"$r13 = staticinvoke <org.springframework.util.ReflectionUtils: java.lang.reflect.Constructor accessibleConstructor(java.lang.Class,java.lang.Class[])>(r41, $r12)\", \"$r14 = newarray (java.lang.Object)[0]\", \"r4 = virtualinvoke $r13.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r14)\", \"$r15 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r15, r4)\", \"$r16 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r16)\", \"goto [?= return r38]\"],\"getValueInternal.59\":[\"$r32 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.61\":[\"$r33 = virtualinvoke $r31.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>()\", \"$r35 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r34 = newarray (java.lang.Object)[1]\", \"$r36 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r37 = virtualinvoke $r36.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r34[0] = $r37\", \"specialinvoke $r32.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r33, $r35, $r34)\", \"throw $r32\"],\"getValueInternal.70\":[\"$r26 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.74\":[\"$r29 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\"],\"getValueInternal.77\":[\"specialinvoke $r26.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r25, $r28, $r27)\", \"throw $r26\", \"return r38\"],\"readProperty.8\":[\"$r25 = <org.springframework.expression.TypedValue: org.springframework.expression.TypedValue NULL>\", \"return $r25\"],\"readProperty.11\":[\"if r5 == null goto $r33 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r22 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"$z2 = interfaceinvoke $r22.<java.util.List: boolean contains(java.lang.Object)>(r5)\", \"if $z2 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = null\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r24 = interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r23, r3)\", \"return $r24\", \"$r31 := @caughtexception\"],\"readProperty.20\":[\"$r33 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r34 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r35 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r33, $r34)\", \"r36 = interfaceinvoke r35.<java.util.List: java.util.Iterator iterator()>()\", \"$z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()\", \"if $z4 == 0 goto (branch)\", \"$r16 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>()\", \"r37 = (org.springframework.expression.PropertyAccessor) $r16\", \"$r17 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z0 = interfaceinvoke r37.<org.springframework.expression.PropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r17, r3)\", \"if $z0 == 0 goto (branch)\", \"$z1 = r37 instanceof org.springframework.expression.spel.support.ReflectivePropertyAccessor\", \"if $z1 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r37\", \"$r20 = (org.springframework.expression.spel.support.ReflectivePropertyAccessor) r37\", \"$r21 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r37 = virtualinvoke $r20.<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r21, r3)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r37\", \"$r18 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r19 = interfaceinvoke r37.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r18, r3)\", \"return $r19\", \"goto [?= $z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\", \"$r26 := @caughtexception\", \"$r27 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r29 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_READ>\", \"$r28 = newarray (java.lang.Object)[2]\", \"$r28[0] = r3\", \"$r30 = virtualinvoke $r26.<java.lang.Exception: java.lang.String getMessage()>()\", \"$r28[1] = $r30\", \"specialinvoke $r27.<org.springframework.expression.spel.SpelEvaluationException: void <init>(java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r26, $r29, $r28)\", \"throw $r27\"],\"readProperty.52\":[\"if $r6 != null goto $r7 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r13 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r15 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL>\", \"$r14 = newarray (java.lang.Object)[1]\", \"$r14[0] = r3\", \"specialinvoke $r13.<org.springframework.expression.spel.SpelEvaluationException: void <init>(org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r15, $r14)\", \"throw $r13\", \"$r7 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.61\":[\"$r9 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE>\", \"$r8 = newarray (java.lang.Object)[2]\", \"$r8[0] = r3\", \"$r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r11 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r10)\", \"$r12 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r11)\", \"$r8[1] = $r12\", \"specialinvoke $r7.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r9, $r8)\", \"throw $r7\"],\"writeProperty.6\":[\"if $r7 != null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"writeProperty.8\":[\"if $z2 == 0 goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"writeProperty.10\":[\"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r8 != null goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\", \"$r20 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r22 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL>\", \"$r21 = newarray (java.lang.Object)[1]\", \"$r21[0] = r3\", \"specialinvoke $r20.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r22, $r21)\", \"throw $r20\"],\"writeProperty.20\":[\"if r5 == null goto $r30 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r18 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"$z1 = interfaceinvoke $r18.<java.util.List: boolean contains(java.lang.Object)>(r5)\", \"if $z1 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor> = null\", \"$r19 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r19, r3, r4)\"],\"writeProperty.27\":[\"$r28 := @caughtexception\"],\"writeProperty.29\":[\"$r30 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r31 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r32 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r30, $r31)\", \"r33 = interfaceinvoke r32.<java.util.List: java.util.Iterator iterator()>()\", \"$z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()\", \"if $z3 == 0 goto (branch)\", \"$r15 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (org.springframework.expression.PropertyAccessor) $r15\", \"$r16 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z0 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r16, r3)\"],\"writeProperty.40\":null,\"writeProperty.41\":[\"$r17 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r17, r3, r4)\"],\"writeProperty.44\":[\"goto [?= $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r9 = new org.springframework.expression.spel.SpelEvaluationException]\", \"$r23 := @caughtexception\", \"$r24 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.49\":[\"$r26 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_WRITE>\", \"$r25 = newarray (java.lang.Object)[2]\", \"$r25[0] = r3\", \"$r27 = virtualinvoke $r23.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\", \"$r25[1] = $r27\", \"specialinvoke $r24.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r23, $r26, $r25)\", \"throw $r24\", \"$r9 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.58\":[\"$r11 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE>\", \"$r10 = newarray (java.lang.Object)[2]\", \"$r10[0] = r3\", \"$r12 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r13 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r12)\", \"$r14 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r13)\", \"$r10[1] = $r14\", \"specialinvoke $r9.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r11, $r10)\", \"throw $r9\"],\"isWritableProperty.4\":\"r4 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.5\":\"if r4 == null goto return 0\",\"isWritableProperty.6\":\"$r9 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.7\":\"$r10 = interfaceinvoke r3.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\",\"isWritableProperty.8\":\"r5 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r9, $r10)\",\"isWritableProperty.9\":\"r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>()\",\"isWritableProperty.10\":\"$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\",\"isWritableProperty.11\":\"if $z0 == 0 goto return 0\",\"isWritableProperty.12\":\"$r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()\",\"isWritableProperty.13\":\"r7 = (org.springframework.expression.PropertyAccessor) $r11\",\"isWritableProperty.14\":\"$z1 = interfaceinvoke r7.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r3, r4, r1)\",\"isWritableProperty.19\":\"goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\",\"isCompilable\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isCompilable()>\",\"generateCode\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void generateCode(org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>\",\"access$100\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$200\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$300\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$300(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>\",\"access$100\":null,\"access$200\":null},\"rhs\" : {\"getValueInternal.2\":[\"$r2 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"$r3 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()>()\", \"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()>()\", \"$z0 = virtualinvoke $r4.<org.springframework.expression.spel.SpelParserConfiguration: boolean isAutoGrowNullReferences()>()\", \"$r5 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r2, $r3, $z0)\", \"return $r5\"],\"getValueInternal.4\":[\"$r4 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r4)\", \"$r5 = virtualinvoke r53.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r5 != null goto return r53\", \"if z0 == 0 goto return r53\", \"$r6 = newarray (java.lang.Class)[2]\", \"$r6[0] = class \"Lorg/springframework/expression/spel/ast/Indexer;\"\", \"$r6[1] = class \"Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;\"\", \"$z1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean nextChildIs(java.lang.Class[])>($r6)\", \"if $z1 == 0 goto return r53\", \"r3 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r7 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$z2 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/List;\")\", \"if $z2 != 0 goto $r8 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r19 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$z6 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/Map;\")\", \"if $z6 == 0 goto $r20 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\"],\"getValueInternal.21\":[\"$z3 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/List;\")\", \"if $z3 == 0 goto $r9 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$r14 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z5 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r14, r1, r2)\", \"if $z5 == 0 goto (branch)\", \"$r15 = class \"Ljava/util/ArrayList;\"\", \"$r16 = virtualinvoke $r15.<java.lang.Class: java.lang.Object newInstance()>()\", \"r54 = (java.util.List) $r16\"],\"getValueInternal.35\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r17, r54)\", \"$r18 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r18)\", \"goto [?= return r53]\", \"$r45 := @caughtexception\", \"r63 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r48 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_LIST_FOR_INDEXING>\", \"$r47 = newarray (java.lang.Object)[0]\", \"specialinvoke r63.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i4, $r45, $r48, $r47)\", \"r69 = (java.lang.Throwable) r63\", \"throw r69\", \"$r41 := @caughtexception\", \"r64 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i3 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r44 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_LIST_FOR_INDEXING>\", \"$r43 = newarray (java.lang.Object)[0]\", \"specialinvoke r64.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i3, $r41, $r44, $r43)\", \"r70 = (java.lang.Throwable) r64\", \"throw r70\", \"$r9 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r9, r1, r2)\", \"if $z4 == 0 goto (branch)\", \"$r10 = class \"Ljava/util/HashMap;\"\", \"$r11 = virtualinvoke $r10.<java.lang.Class: java.lang.Object newInstance()>()\", \"r57 = (java.util.Map) $r11\", \"$r12 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r12, r57)\", \"$r13 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r13)\", \"goto [?= return r53]\", \"$r37 := @caughtexception\", \"r65 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i2 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r40 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_MAP_FOR_INDEXING>\", \"$r39 = newarray (java.lang.Object)[0]\", \"specialinvoke r65.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r37, $r40, $r39)\", \"r71 = (java.lang.Throwable) r65\", \"throw r71\", \"$r49 := @caughtexception\", \"r66 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i5 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r52 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_MAP_FOR_INDEXING>\", \"$r51 = newarray (java.lang.Object)[0]\", \"specialinvoke r66.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i5, $r49, $r52, $r51)\", \"r72 = (java.lang.Throwable) r66\", \"throw r72\"],\"getValueInternal.42\":[\"$z7 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r20, r1, r2)\", \"if $z7 == 0 goto (branch)\", \"$r21 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r22 = virtualinvoke $r21.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"r60 = virtualinvoke $r22.<java.lang.Class: java.lang.Object newInstance()>()\", \"$r23 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r23, r60)\", \"$r24 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r24)\", \"goto [?= return r53]\"],\"getValueInternal.59\":[\"r67 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.61\":[\"$r34 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r33 = newarray (java.lang.Object)[1]\", \"$r35 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r36 = virtualinvoke $r35.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r33[0] = $r36\", \"specialinvoke r67.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r31, $r34, $r33)\", \"r73 = (java.lang.Throwable) r67\", \"throw r73\"],\"getValueInternal.70\":[\"r68 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.74\":[\"$r29 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\"],\"getValueInternal.77\":[\"specialinvoke r68.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r25, $r28, $r27)\", \"r74 = (java.lang.Throwable) r68\", \"throw r74\", \"return r53\"],\"readProperty.8\":[\"$r26 = <org.springframework.expression.TypedValue: org.springframework.expression.TypedValue NULL>\", \"return $r26\"],\"readProperty.11\":[\"if r5 == null goto $r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r24 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r25 = interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r24, r3)\", \"return $r25\", \"$r32 := @caughtexception\"],\"readProperty.20\":null,\"readProperty.52\":[\"$r7 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r34 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r6, $r7)\", \"if r34 == null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r35 = interfaceinvoke r34.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto (branch)\", \"$r18 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>()\", \"r36 = (org.springframework.expression.PropertyAccessor) $r18\", \"$r19 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z1 = interfaceinvoke r36.<org.springframework.expression.PropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r19, r3)\", \"if $z1 == 0 goto (branch)\", \"$z2 = r36 instanceof org.springframework.expression.spel.support.ReflectivePropertyAccessor\", \"if $z2 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r36\", \"$r22 = (org.springframework.expression.spel.support.ReflectivePropertyAccessor) r36\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r36 = virtualinvoke $r22.<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r23, r3)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r36\", \"$r20 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r21 = interfaceinvoke r36.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r20, r3)\", \"return $r21\", \"goto [?= $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\", \"$r27 := @caughtexception\", \"r38 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r30 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_READ>\", \"$r29 = newarray (java.lang.Object)[2]\", \"$r29[0] = r3\", \"r41 = (org.springframework.expression.AccessException) $r27\", \"$r31 = virtualinvoke r41.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\", \"$r29[1] = $r31\", \"specialinvoke r38.<org.springframework.expression.spel.SpelEvaluationException: void <init>(java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r27, $r30, $r29)\", \"r42 = (java.lang.Throwable) r38\", \"throw r42\", \"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r8 != null goto r40 = new org.springframework.expression.spel.SpelEvaluationException\", \"r39 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r17 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL>\", \"$r16 = newarray (java.lang.Object)[1]\", \"$r16[0] = r3\", \"specialinvoke r39.<org.springframework.expression.spel.SpelEvaluationException: void <init>(org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r17, $r16)\", \"r43 = (java.lang.Throwable) r39\", \"throw r43\", \"r40 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.61\":[\"$r11 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE>\", \"$r10 = newarray (java.lang.Object)[2]\", \"$r10[0] = r3\", \"$r12 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r13 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r12)\", \"$r14 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r13)\", \"$r10[1] = $r14\", \"specialinvoke r40.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r11, $r10)\", \"r44 = (java.lang.Throwable) r40\", \"throw r44\"],\"writeProperty.6\":[\"if $r7 != null goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\"],\"writeProperty.8\":[\"if $z2 == 0 goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\"],\"writeProperty.10\":null,\"writeProperty.20\":[\"if r5 == null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r23, r3, r4)\"],\"writeProperty.27\":[\"$r29 := @caughtexception\"],\"writeProperty.29\":[\"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r9 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r31 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r8, $r9)\", \"if r31 == null goto $r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r32 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()\"],\"writeProperty.40\":[\"$r20 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (org.springframework.expression.PropertyAccessor) $r20\", \"$r21 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z1 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r21, r3)\", \"if $z1 == 0 goto (branch)\"],\"writeProperty.41\":[\"$r22 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r22, r3, r4)\"],\"writeProperty.44\":[\"goto [?= $z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\", \"$r24 := @caughtexception\", \"r34 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.49\":[\"$r27 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_WRITE>\", \"$r26 = newarray (java.lang.Object)[2]\", \"$r26[0] = r3\", \"r37 = (org.springframework.expression.AccessException) $r24\", \"$r28 = virtualinvoke r37.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\", \"$r26[1] = $r28\", \"specialinvoke r34.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r24, $r27, $r26)\", \"r38 = (java.lang.Throwable) r34\", \"throw r38\", \"$r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r10 != null goto r36 = new org.springframework.expression.spel.SpelEvaluationException\", \"r35 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r19 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL>\", \"$r18 = newarray (java.lang.Object)[1]\", \"$r18[0] = r3\", \"specialinvoke r35.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r19, $r18)\", \"r39 = (java.lang.Throwable) r35\", \"throw r39\", \"r36 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.58\":[\"$r13 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE>\", \"$r12 = newarray (java.lang.Object)[2]\", \"$r12[0] = r3\", \"$r14 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r15 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r14)\", \"$r16 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r15)\", \"$r12[1] = $r16\", \"specialinvoke r36.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r13, $r12)\", \"r40 = (java.lang.Throwable) r36\", \"throw r40\"],\"isWritableProperty.4\":\"$r8 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.5\":\"$r9 = interfaceinvoke r3.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\",\"isWritableProperty.6\":\"r4 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r8, $r9)\",\"isWritableProperty.7\":\"if r4 == null goto return 0\",\"isWritableProperty.8\":\"r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()\",\"isWritableProperty.9\":\"$z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\",\"isWritableProperty.10\":\"if $z0 == 0 goto return 0\",\"isWritableProperty.11\":\"$r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\",\"isWritableProperty.12\":\"r6 = (org.springframework.expression.PropertyAccessor) $r10\",\"isWritableProperty.13\":\"$r11 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.14\":\"$z1 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r3, $r11, r1)\",\"isWritableProperty.19\":\"goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\",\"isCompilable\":null,\"generateCode\":null,\"access$100\":null,\"access$200\":null,\"access$300\":null,\"access$100\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$200\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>\"}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "diff": "{\"lhs\" : {\"evalContext\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext>\",\"eContext\":null,\"<init>.8\":\"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext> = r3\",\"getValue.1\":[\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r4 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.TypedValue contextObject>\", \"$r3 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext>\"],\"getValue.5\":[\"r1 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue access$000(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r5, $r4, $r3, $z0)\", \"$r6 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"r2 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>($r6)\", \"$z1 = r2 instanceof org.springframework.expression.spel.CompilablePropertyAccessor\", \"if $z1 == 0 goto return r1\", \"$r8 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r7 = (org.springframework.expression.spel.CompilablePropertyAccessor) r2\", \"$r9 = interfaceinvoke $r7.<org.springframework.expression.spel.CompilablePropertyAccessor: java.lang.Class getPropertyType()>()\", \"$r10 = staticinvoke <org.springframework.expression.spel.CodeFlow: java.lang.String toDescriptor(java.lang.Class)>($r9)\", \"$r8.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String exitTypeDescriptor> = $r10\", \"return r1\"],\"setValue.4\":\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext>\",\"setValue.6\":\"$r6 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference)>($r2)\",\"setValue.7\":\"staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$300(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>($r3, $r4, $r5, $r6, r1)\",\"isWritable.1\":[\"$r2 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r1 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r3 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference)>($r1)\", \"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.TypedValue contextObject>\", \"$r4 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext>\", \"$z0 = virtualinvoke $r2.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r3, $r5, $r4)\", \"return $z0\"]},\"rhs\" : {\"evalContext\":null,\"eContext\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext eContext>\",\"<init>.8\":\"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext eContext> = r3\",\"getValue.1\":[\"$r3 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r2 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.TypedValue contextObject>\", \"$r1 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext eContext>\"],\"getValue.5\":[\"$r4 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue access$000(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r3, $r2, $r1, $z0)\", \"return $r4\"],\"setValue.4\":\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext eContext>\",\"setValue.6\":\"$r6 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>($r2)\",\"setValue.7\":\"staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>($r3, $r4, $r5, $r6, r1)\",\"isWritable.1\":[\"return 1\"]}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "diff": "{\"lhs\" : {\"evalContext\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext>\",\"eContext\":null,\"<init>.8\":\"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext> = r3\",\"getValue.1\":[\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r4 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.TypedValue contextObject>\", \"$r3 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext>\"],\"getValue.5\":[\"r1 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue access$000(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r5, $r4, $r3, $z0)\", \"$r6 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"r2 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>($r6)\", \"$z1 = r2 instanceof org.springframework.expression.spel.CompilablePropertyAccessor\", \"if $z1 == 0 goto return r1\", \"$r8 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r7 = (org.springframework.expression.spel.CompilablePropertyAccessor) r2\", \"$r9 = interfaceinvoke $r7.<org.springframework.expression.spel.CompilablePropertyAccessor: java.lang.Class getPropertyType()>()\", \"$r10 = staticinvoke <org.springframework.expression.spel.CodeFlow: java.lang.String toDescriptor(java.lang.Class)>($r9)\", \"$r8.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String exitTypeDescriptor> = $r10\", \"return r1\"],\"setValue.4\":\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext>\",\"setValue.6\":\"$r6 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference)>($r2)\",\"setValue.7\":\"staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$300(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>($r3, $r4, $r5, $r6, r1)\",\"isWritable.1\":[\"$r2 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r1 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r3 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference)>($r1)\", \"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.TypedValue contextObject>\", \"$r4 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext>\", \"$z0 = virtualinvoke $r2.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r3, $r5, $r4)\", \"return $z0\"]},\"rhs\" : {\"evalContext\":null,\"eContext\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext eContext>\",\"<init>.8\":\"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext eContext> = r3\",\"getValue.1\":[\"$r3 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r2 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.TypedValue contextObject>\", \"$r1 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext eContext>\"],\"getValue.5\":[\"$r4 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue access$000(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r3, $r2, $r1, $z0)\", \"return $r4\"],\"setValue.4\":\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext eContext>\",\"setValue.6\":\"$r6 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>($r2)\",\"setValue.7\":\"staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>($r3, $r4, $r5, $r6, r1)\",\"isWritable.1\":[\"return 1\"]}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue()",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "diff": "{\"lhs\" : {\"evalContext\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext>\",\"eContext\":null,\"<init>.8\":\"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext> = r3\",\"getValue.1\":[\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r4 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.TypedValue contextObject>\", \"$r3 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext>\"],\"getValue.5\":[\"r1 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue access$000(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r5, $r4, $r3, $z0)\", \"$r6 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"r2 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>($r6)\", \"$z1 = r2 instanceof org.springframework.expression.spel.CompilablePropertyAccessor\", \"if $z1 == 0 goto return r1\", \"$r8 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r7 = (org.springframework.expression.spel.CompilablePropertyAccessor) r2\", \"$r9 = interfaceinvoke $r7.<org.springframework.expression.spel.CompilablePropertyAccessor: java.lang.Class getPropertyType()>()\", \"$r10 = staticinvoke <org.springframework.expression.spel.CodeFlow: java.lang.String toDescriptor(java.lang.Class)>($r9)\", \"$r8.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String exitTypeDescriptor> = $r10\", \"return r1\"],\"setValue.4\":\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext>\",\"setValue.6\":\"$r6 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference)>($r2)\",\"setValue.7\":\"staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$300(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>($r3, $r4, $r5, $r6, r1)\",\"isWritable.1\":[\"$r2 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r1 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r3 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference)>($r1)\", \"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.TypedValue contextObject>\", \"$r4 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext>\", \"$z0 = virtualinvoke $r2.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r3, $r5, $r4)\", \"return $z0\"]},\"rhs\" : {\"evalContext\":null,\"eContext\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext eContext>\",\"<init>.8\":\"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext eContext> = r3\",\"getValue.1\":[\"$r3 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r2 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.TypedValue contextObject>\", \"$r1 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext eContext>\"],\"getValue.5\":[\"$r4 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue access$000(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r3, $r2, $r1, $z0)\", \"return $r4\"],\"setValue.4\":\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext eContext>\",\"setValue.6\":\"$r6 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>($r2)\",\"setValue.7\":\"staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>($r3, $r4, $r5, $r6, r1)\",\"isWritable.1\":[\"return 1\"]}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue()",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "diff": "{\"lhs\" : {\"evalContext\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext>\",\"eContext\":null,\"<init>.8\":\"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext> = r3\",\"getValue.1\":[\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r4 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.TypedValue contextObject>\", \"$r3 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext>\"],\"getValue.5\":[\"r1 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue access$000(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r5, $r4, $r3, $z0)\", \"$r6 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"r2 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>($r6)\", \"$z1 = r2 instanceof org.springframework.expression.spel.CompilablePropertyAccessor\", \"if $z1 == 0 goto return r1\", \"$r8 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r7 = (org.springframework.expression.spel.CompilablePropertyAccessor) r2\", \"$r9 = interfaceinvoke $r7.<org.springframework.expression.spel.CompilablePropertyAccessor: java.lang.Class getPropertyType()>()\", \"$r10 = staticinvoke <org.springframework.expression.spel.CodeFlow: java.lang.String toDescriptor(java.lang.Class)>($r9)\", \"$r8.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String exitTypeDescriptor> = $r10\", \"return r1\"],\"setValue.4\":\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext>\",\"setValue.6\":\"$r6 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference)>($r2)\",\"setValue.7\":\"staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$300(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>($r3, $r4, $r5, $r6, r1)\",\"isWritable.1\":[\"$r2 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r1 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r3 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference)>($r1)\", \"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.TypedValue contextObject>\", \"$r4 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext evalContext>\", \"$z0 = virtualinvoke $r2.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r3, $r5, $r4)\", \"return $z0\"]},\"rhs\" : {\"evalContext\":null,\"eContext\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext eContext>\",\"<init>.8\":\"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext eContext> = r3\",\"getValue.1\":[\"$r3 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.spel.ast.PropertyOrFieldReference ref>\", \"$r2 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.TypedValue contextObject>\", \"$r1 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext eContext>\"],\"getValue.5\":[\"$r4 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue access$000(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r3, $r2, $r1, $z0)\", \"return $r4\"],\"setValue.4\":\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue: org.springframework.expression.EvaluationContext eContext>\",\"setValue.6\":\"$r6 = staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>($r2)\",\"setValue.7\":\"staticinvoke <org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>($r3, $r4, $r5, $r6, r1)\",\"isWritable.1\":[\"return 1\"]}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference.generateCode(MethodVisitor,CodeFlow)",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "diff": "{\"lhs\" : {\"getValueInternal.2\":[\"$r5 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"$r6 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()>()\", \"$r7 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.expression.spel.SpelParserConfiguration: boolean isAutoGrowNullReferences()>()\", \"r2 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r5, $r6, $z0)\", \"r3 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor>\", \"$z1 = r3 instanceof org.springframework.expression.spel.CompilablePropertyAccessor\", \"if $z1 == 0 goto return r2\", \"r4 = (org.springframework.expression.spel.CompilablePropertyAccessor) r3\", \"$r8 = interfaceinvoke r4.<org.springframework.expression.spel.CompilablePropertyAccessor: java.lang.Class getPropertyType()>()\", \"$r9 = staticinvoke <org.springframework.expression.spel.CodeFlow: java.lang.String toDescriptor(java.lang.Class)>($r8)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String exitTypeDescriptor> = $r9\", \"return r2\"],\"getValueInternal.4\":[\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r5)\", \"$r6 = virtualinvoke r38.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r6 != null goto return r38\", \"if z0 == 0 goto return r38\", \"$r7 = newarray (java.lang.Class)[2]\", \"$r7[0] = class \"Lorg/springframework/expression/spel/ast/Indexer;\"\", \"$r7[1] = class \"Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;\"\", \"$z1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean nextChildIs(java.lang.Class[])>($r7)\", \"if $z1 == 0 goto return r38\", \"r3 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"if r3 == null goto $z5 = 0\", \"$z5 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"No result type\")]\", \"$z5 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"No result type\")\"],\"getValueInternal.21\":[\"if class \"Ljava/util/List;\" != $r8 goto $r9 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r21 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r21, r1, r2)\", \"if $z4 == 0 goto return r38\", \"$r22 = new java.util.ArrayList\", \"specialinvoke $r22.<java.util.ArrayList: void <init>()>()\", \"$r23 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r23, $r22)\", \"$r24 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r24)\", \"goto [?= return r38]\", \"$r9 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"if class \"Ljava/util/Map;\" != $r9 goto $r10 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\"],\"getValueInternal.35\":[\"$z3 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r17, r1, r2)\", \"if $z3 == 0 goto return r38\", \"$r18 = new java.util.HashMap\", \"specialinvoke $r18.<java.util.HashMap: void <init>()>()\", \"$r19 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r19, $r18)\", \"$r20 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r20)\", \"goto [?= return r38]\", \"$r10 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z2 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r10, r1, r2)\", \"if $z2 == 0 goto (branch)\", \"$r11 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"r41 = virtualinvoke $r11.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r12 = newarray (java.lang.Class)[0]\", \"$r13 = staticinvoke <org.springframework.util.ReflectionUtils: java.lang.reflect.Constructor accessibleConstructor(java.lang.Class,java.lang.Class[])>(r41, $r12)\", \"$r14 = newarray (java.lang.Object)[0]\", \"r4 = virtualinvoke $r13.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r14)\", \"$r15 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r15, r4)\", \"$r16 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r16)\", \"goto [?= return r38]\", \"$r31 := @caughtexception\", \"$r32 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.61\":[\"$r33 = virtualinvoke $r31.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>()\", \"$r35 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r34 = newarray (java.lang.Object)[1]\", \"$r36 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r37 = virtualinvoke $r36.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r34[0] = $r37\", \"specialinvoke $r32.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r33, $r35, $r34)\", \"throw $r32\"],\"getValueInternal.70\":[\"$r26 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.72\":[\"$r28 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r27 = newarray (java.lang.Object)[1]\", \"$r29 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r30 = virtualinvoke $r29.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r27[0] = $r30\", \"specialinvoke $r26.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r25, $r28, $r27)\", \"throw $r26\", \"return r38\"],\"readProperty.8\":[\"$r25 = <org.springframework.expression.TypedValue: org.springframework.expression.TypedValue NULL>\", \"return $r25\"],\"readProperty.11\":[\"if r5 == null goto $r33 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r22 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"$z2 = interfaceinvoke $r22.<java.util.List: boolean contains(java.lang.Object)>(r5)\", \"if $z2 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = null\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r24 = interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r23, r3)\", \"return $r24\", \"$r26 := @caughtexception\"],\"readProperty.20\":[\"$r33 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r34 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r35 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r33, $r34)\", \"r36 = interfaceinvoke r35.<java.util.List: java.util.Iterator iterator()>()\", \"$z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()\", \"if $z4 == 0 goto (branch)\", \"$r16 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>()\", \"r37 = (org.springframework.expression.PropertyAccessor) $r16\", \"$r17 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z0 = interfaceinvoke r37.<org.springframework.expression.PropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r17, r3)\"],\"readProperty.31\":[\"$z1 = r37 instanceof org.springframework.expression.spel.support.ReflectivePropertyAccessor\", \"if $z1 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r37\", \"$r20 = (org.springframework.expression.spel.support.ReflectivePropertyAccessor) r37\", \"$r21 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r37 = virtualinvoke $r20.<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r21, r3)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r37\", \"$r18 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r19 = interfaceinvoke r37.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r18, r3)\", \"return $r19\", \"goto [?= $z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\"],\"readProperty.43\":[\"$r28 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.47\":[\"$r31 = virtualinvoke $r27.<java.lang.Exception: java.lang.String getMessage()>()\"],\"readProperty.49\":[\"specialinvoke $r28.<org.springframework.expression.spel.SpelEvaluationException: void <init>(java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r27, $r30, $r29)\", \"throw $r28\", \"$r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r6 != null goto $r7 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r13 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r15 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL>\", \"$r14 = newarray (java.lang.Object)[1]\", \"$r14[0] = r3\", \"specialinvoke $r13.<org.springframework.expression.spel.SpelEvaluationException: void <init>(org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r15, $r14)\", \"throw $r13\", \"$r7 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.61\":[\"$r9 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE>\", \"$r8 = newarray (java.lang.Object)[2]\", \"$r8[0] = r3\", \"$r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r11 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r10)\", \"$r12 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r11)\", \"$r8[1] = $r12\", \"specialinvoke $r7.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r9, $r8)\", \"throw $r7\"],\"writeProperty.6\":[\"if $r7 != null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"writeProperty.8\":[\"if $z2 == 0 goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"writeProperty.10\":[\"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r8 != null goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\", \"$r20 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r22 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL>\", \"$r21 = newarray (java.lang.Object)[1]\", \"$r21[0] = r3\", \"specialinvoke $r20.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r22, $r21)\", \"throw $r20\"],\"writeProperty.20\":[\"if r5 == null goto $r30 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r18 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"$z1 = interfaceinvoke $r18.<java.util.List: boolean contains(java.lang.Object)>(r5)\", \"if $z1 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor> = null\", \"$r19 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r19, r3, r4)\"],\"writeProperty.27\":[\"$r28 := @caughtexception\"],\"writeProperty.29\":[\"$r30 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r31 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r32 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r30, $r31)\", \"r33 = interfaceinvoke r32.<java.util.List: java.util.Iterator iterator()>()\", \"$z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()\", \"if $z3 == 0 goto (branch)\", \"$r15 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (org.springframework.expression.PropertyAccessor) $r15\", \"$r16 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z0 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r16, r3)\"],\"writeProperty.40\":null,\"writeProperty.41\":[\"$r17 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r17, r3, r4)\"],\"writeProperty.44\":[\"goto [?= $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r9 = new org.springframework.expression.spel.SpelEvaluationException]\", \"$r23 := @caughtexception\", \"$r24 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.49\":[\"$r26 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_WRITE>\", \"$r25 = newarray (java.lang.Object)[2]\", \"$r25[0] = r3\", \"$r27 = virtualinvoke $r23.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\", \"$r25[1] = $r27\", \"specialinvoke $r24.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r23, $r26, $r25)\", \"throw $r24\", \"$r9 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.58\":[\"$r11 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE>\", \"$r10 = newarray (java.lang.Object)[2]\", \"$r10[0] = r3\", \"$r12 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r13 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r12)\", \"$r14 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r13)\", \"$r10[1] = $r14\", \"specialinvoke $r9.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r11, $r10)\", \"throw $r9\"],\"isWritableProperty.4\":\"r4 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.5\":\"if r4 == null goto return 0\",\"isWritableProperty.6\":\"$r9 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.7\":\"$r10 = interfaceinvoke r3.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\",\"isWritableProperty.8\":\"r5 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r9, $r10)\",\"isWritableProperty.9\":\"r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>()\",\"isWritableProperty.10\":\"$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\",\"isWritableProperty.11\":\"if $z0 == 0 goto return 0\",\"isWritableProperty.12\":\"$r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()\",\"isWritableProperty.13\":\"r7 = (org.springframework.expression.PropertyAccessor) $r11\",\"isWritableProperty.14\":\"$z1 = interfaceinvoke r7.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r3, r4, r1)\",\"isWritableProperty.19\":\"goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\",\"isCompilable\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isCompilable()>\",\"generateCode\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void generateCode(org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>\",\"access$100\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$200\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$300\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$300(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>\",\"access$100\":null,\"access$200\":null},\"rhs\" : {\"getValueInternal.2\":[\"$r2 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"$r3 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()>()\", \"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()>()\", \"$z0 = virtualinvoke $r4.<org.springframework.expression.spel.SpelParserConfiguration: boolean isAutoGrowNullReferences()>()\", \"$r5 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r2, $r3, $z0)\", \"return $r5\"],\"getValueInternal.4\":[\"$r4 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r4)\", \"$r5 = virtualinvoke r53.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r5 != null goto return r53\", \"if z0 == 0 goto return r53\", \"$r6 = newarray (java.lang.Class)[2]\", \"$r6[0] = class \"Lorg/springframework/expression/spel/ast/Indexer;\"\", \"$r6[1] = class \"Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;\"\", \"$z1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean nextChildIs(java.lang.Class[])>($r6)\", \"if $z1 == 0 goto return r53\", \"r3 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r7 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$z2 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/List;\")\", \"if $z2 != 0 goto $r8 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r19 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$z6 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/Map;\")\", \"if $z6 == 0 goto $r20 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\"],\"getValueInternal.21\":[\"$z3 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/List;\")\", \"if $z3 == 0 goto $r9 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$r14 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z5 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r14, r1, r2)\", \"if $z5 == 0 goto (branch)\", \"$r15 = class \"Ljava/util/ArrayList;\"\", \"$r16 = virtualinvoke $r15.<java.lang.Class: java.lang.Object newInstance()>()\", \"r54 = (java.util.List) $r16\"],\"getValueInternal.35\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r17, r54)\", \"$r18 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r18)\", \"goto [?= return r53]\", \"$r33 := @caughtexception\", \"r63 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i2 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r36 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_LIST_FOR_INDEXING>\", \"$r35 = newarray (java.lang.Object)[0]\", \"specialinvoke r63.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r33, $r36, $r35)\", \"r69 = (java.lang.Throwable) r63\", \"throw r69\", \"$r29 := @caughtexception\", \"r64 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.61\":[\"$r32 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_LIST_FOR_INDEXING>\", \"$r31 = newarray (java.lang.Object)[0]\", \"specialinvoke r64.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r29, $r32, $r31)\", \"r70 = (java.lang.Throwable) r64\", \"throw r70\", \"$r9 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r9, r1, r2)\", \"if $z4 == 0 goto (branch)\", \"$r10 = class \"Ljava/util/HashMap;\"\", \"$r11 = virtualinvoke $r10.<java.lang.Class: java.lang.Object newInstance()>()\", \"r57 = (java.util.Map) $r11\", \"$r12 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r12, r57)\", \"$r13 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r13)\", \"goto [?= return r53]\", \"$r37 := @caughtexception\", \"r65 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i3 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r40 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_MAP_FOR_INDEXING>\", \"$r39 = newarray (java.lang.Object)[0]\", \"specialinvoke r65.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i3, $r37, $r40, $r39)\", \"r71 = (java.lang.Throwable) r65\", \"throw r71\"],\"getValueInternal.70\":[\"r66 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.72\":[\"$r28 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_MAP_FOR_INDEXING>\", \"$r27 = newarray (java.lang.Object)[0]\", \"specialinvoke r66.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r25, $r28, $r27)\", \"r72 = (java.lang.Throwable) r66\", \"throw r72\", \"$r20 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z7 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r20, r1, r2)\", \"if $z7 == 0 goto (branch)\", \"$r21 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r22 = virtualinvoke $r21.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"r60 = virtualinvoke $r22.<java.lang.Class: java.lang.Object newInstance()>()\", \"$r23 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r23, r60)\", \"$r24 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r24)\", \"goto [?= return r53]\", \"$r41 := @caughtexception\", \"r67 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r44 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r43 = newarray (java.lang.Object)[1]\", \"$r45 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r46 = virtualinvoke $r45.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r43[0] = $r46\", \"specialinvoke r67.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i4, $r41, $r44, $r43)\", \"r73 = (java.lang.Throwable) r67\", \"throw r73\", \"$r47 := @caughtexception\", \"r68 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i5 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r50 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r49 = newarray (java.lang.Object)[1]\", \"$r51 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r52 = virtualinvoke $r51.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r49[0] = $r52\", \"specialinvoke r68.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i5, $r47, $r50, $r49)\", \"r74 = (java.lang.Throwable) r68\", \"throw r74\", \"return r53\"],\"readProperty.8\":[\"$r26 = <org.springframework.expression.TypedValue: org.springframework.expression.TypedValue NULL>\", \"return $r26\"],\"readProperty.11\":[\"if r5 == null goto $r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r24 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r25 = interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r24, r3)\", \"return $r25\", \"$r32 := @caughtexception\"],\"readProperty.20\":[\"$r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r7 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r34 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r6, $r7)\", \"if r34 == null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r35 = interfaceinvoke r34.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()\"],\"readProperty.31\":[\"$r18 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>()\", \"r36 = (org.springframework.expression.PropertyAccessor) $r18\", \"$r19 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z1 = interfaceinvoke r36.<org.springframework.expression.PropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r19, r3)\", \"if $z1 == 0 goto (branch)\", \"$z2 = r36 instanceof org.springframework.expression.spel.support.ReflectivePropertyAccessor\", \"if $z2 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r36\", \"$r22 = (org.springframework.expression.spel.support.ReflectivePropertyAccessor) r36\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r36 = virtualinvoke $r22.<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r23, r3)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r36\", \"$r20 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r21 = interfaceinvoke r36.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r20, r3)\", \"return $r21\", \"goto [?= $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\"],\"readProperty.43\":[\"r38 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.47\":[\"r41 = (org.springframework.expression.AccessException) $r27\", \"$r31 = virtualinvoke r41.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\"],\"readProperty.49\":[\"specialinvoke r38.<org.springframework.expression.spel.SpelEvaluationException: void <init>(java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r27, $r30, $r29)\", \"r42 = (java.lang.Throwable) r38\", \"throw r42\", \"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r8 != null goto r40 = new org.springframework.expression.spel.SpelEvaluationException\", \"r39 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r17 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL>\", \"$r16 = newarray (java.lang.Object)[1]\", \"$r16[0] = r3\", \"specialinvoke r39.<org.springframework.expression.spel.SpelEvaluationException: void <init>(org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r17, $r16)\", \"r43 = (java.lang.Throwable) r39\", \"throw r43\", \"r40 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.61\":[\"$r11 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE>\", \"$r10 = newarray (java.lang.Object)[2]\", \"$r10[0] = r3\", \"$r12 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r13 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r12)\", \"$r14 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r13)\", \"$r10[1] = $r14\", \"specialinvoke r40.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r11, $r10)\", \"r44 = (java.lang.Throwable) r40\", \"throw r44\"],\"writeProperty.6\":[\"if $r7 != null goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\"],\"writeProperty.8\":[\"if $z2 == 0 goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\"],\"writeProperty.10\":null,\"writeProperty.20\":[\"if r5 == null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r23, r3, r4)\"],\"writeProperty.27\":[\"$r24 := @caughtexception\"],\"writeProperty.29\":[\"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r9 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r31 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r8, $r9)\", \"if r31 == null goto $r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r32 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()\"],\"writeProperty.40\":[\"$r20 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (org.springframework.expression.PropertyAccessor) $r20\", \"$r21 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z1 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r21, r3)\", \"if $z1 == 0 goto (branch)\"],\"writeProperty.41\":[\"$r22 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r22, r3, r4)\"],\"writeProperty.44\":[\"goto [?= $z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\", \"$r25 := @caughtexception\", \"r34 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.49\":[\"$r28 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_WRITE>\", \"$r27 = newarray (java.lang.Object)[2]\", \"$r27[0] = r3\", \"r37 = (org.springframework.expression.AccessException) $r25\", \"$r29 = virtualinvoke r37.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\", \"$r27[1] = $r29\", \"specialinvoke r34.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r25, $r28, $r27)\", \"r38 = (java.lang.Throwable) r34\", \"throw r38\", \"$r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r10 != null goto r36 = new org.springframework.expression.spel.SpelEvaluationException\", \"r35 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r19 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL>\", \"$r18 = newarray (java.lang.Object)[1]\", \"$r18[0] = r3\", \"specialinvoke r35.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r19, $r18)\", \"r39 = (java.lang.Throwable) r35\", \"throw r39\", \"r36 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.58\":[\"$r13 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE>\", \"$r12 = newarray (java.lang.Object)[2]\", \"$r12[0] = r3\", \"$r14 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r15 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r14)\", \"$r16 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r15)\", \"$r12[1] = $r16\", \"specialinvoke r36.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r13, $r12)\", \"r40 = (java.lang.Throwable) r36\", \"throw r40\"],\"isWritableProperty.4\":\"$r8 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.5\":\"$r9 = interfaceinvoke r3.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\",\"isWritableProperty.6\":\"r4 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r8, $r9)\",\"isWritableProperty.7\":\"if r4 == null goto return 0\",\"isWritableProperty.8\":\"r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()\",\"isWritableProperty.9\":\"$z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\",\"isWritableProperty.10\":\"if $z0 == 0 goto return 0\",\"isWritableProperty.11\":\"$r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\",\"isWritableProperty.12\":\"r6 = (org.springframework.expression.PropertyAccessor) $r10\",\"isWritableProperty.13\":\"$r11 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.14\":\"$z1 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r3, $r11, r1)\",\"isWritableProperty.19\":\"goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\",\"isCompilable\":null,\"generateCode\":null,\"access$100\":null,\"access$200\":null,\"access$300\":null,\"access$100\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$200\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>\"}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference.generateCode(MethodVisitor,CodeFlow)",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "diff": "{\"lhs\" : {\"getValueInternal.2\":[\"$r5 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"$r6 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()>()\", \"$r7 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.expression.spel.SpelParserConfiguration: boolean isAutoGrowNullReferences()>()\", \"r2 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r5, $r6, $z0)\", \"r3 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor>\", \"$z1 = r3 instanceof org.springframework.expression.spel.CompilablePropertyAccessor\", \"if $z1 == 0 goto return r2\", \"r4 = (org.springframework.expression.spel.CompilablePropertyAccessor) r3\", \"$r8 = interfaceinvoke r4.<org.springframework.expression.spel.CompilablePropertyAccessor: java.lang.Class getPropertyType()>()\", \"$r9 = staticinvoke <org.springframework.expression.spel.CodeFlow: java.lang.String toDescriptor(java.lang.Class)>($r8)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String exitTypeDescriptor> = $r9\", \"return r2\"],\"getValueInternal.4\":[\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r5)\", \"$r6 = virtualinvoke r38.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r6 != null goto return r38\", \"if z0 == 0 goto return r38\", \"$r7 = newarray (java.lang.Class)[2]\", \"$r7[0] = class \"Lorg/springframework/expression/spel/ast/Indexer;\"\", \"$r7[1] = class \"Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;\"\", \"$z1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean nextChildIs(java.lang.Class[])>($r7)\", \"if $z1 == 0 goto return r38\", \"r3 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"if r3 == null goto $z5 = 0\", \"$z5 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"No result type\")]\", \"$z5 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"No result type\")\"],\"getValueInternal.21\":[\"if class \"Ljava/util/List;\" != $r8 goto $r9 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r21 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r21, r1, r2)\", \"if $z4 == 0 goto return r38\", \"$r22 = new java.util.ArrayList\", \"specialinvoke $r22.<java.util.ArrayList: void <init>()>()\", \"$r23 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r23, $r22)\", \"$r24 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r24)\", \"goto [?= return r38]\", \"$r9 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"if class \"Ljava/util/Map;\" != $r9 goto $r10 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\"],\"getValueInternal.35\":[\"$z3 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r17, r1, r2)\", \"if $z3 == 0 goto return r38\", \"$r18 = new java.util.HashMap\", \"specialinvoke $r18.<java.util.HashMap: void <init>()>()\", \"$r19 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r19, $r18)\", \"$r20 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r20)\", \"goto [?= return r38]\", \"$r10 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z2 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r10, r1, r2)\", \"if $z2 == 0 goto (branch)\", \"$r11 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"r41 = virtualinvoke $r11.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r12 = newarray (java.lang.Class)[0]\", \"$r13 = staticinvoke <org.springframework.util.ReflectionUtils: java.lang.reflect.Constructor accessibleConstructor(java.lang.Class,java.lang.Class[])>(r41, $r12)\", \"$r14 = newarray (java.lang.Object)[0]\", \"r4 = virtualinvoke $r13.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r14)\", \"$r15 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r15, r4)\", \"$r16 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r16)\", \"goto [?= return r38]\", \"$r31 := @caughtexception\", \"$r32 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.61\":[\"$r33 = virtualinvoke $r31.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>()\", \"$r35 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r34 = newarray (java.lang.Object)[1]\", \"$r36 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r37 = virtualinvoke $r36.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r34[0] = $r37\", \"specialinvoke $r32.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r33, $r35, $r34)\", \"throw $r32\"],\"getValueInternal.70\":[\"$r26 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.72\":[\"$r28 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r27 = newarray (java.lang.Object)[1]\", \"$r29 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r30 = virtualinvoke $r29.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r27[0] = $r30\", \"specialinvoke $r26.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r25, $r28, $r27)\", \"throw $r26\", \"return r38\"],\"readProperty.8\":[\"$r25 = <org.springframework.expression.TypedValue: org.springframework.expression.TypedValue NULL>\", \"return $r25\"],\"readProperty.11\":[\"if r5 == null goto $r33 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r22 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"$z2 = interfaceinvoke $r22.<java.util.List: boolean contains(java.lang.Object)>(r5)\", \"if $z2 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = null\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r24 = interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r23, r3)\", \"return $r24\", \"$r31 := @caughtexception\"],\"readProperty.20\":[\"$r33 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r34 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r35 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r33, $r34)\", \"r36 = interfaceinvoke r35.<java.util.List: java.util.Iterator iterator()>()\", \"$z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()\", \"if $z4 == 0 goto (branch)\", \"$r16 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>()\", \"r37 = (org.springframework.expression.PropertyAccessor) $r16\", \"$r17 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z0 = interfaceinvoke r37.<org.springframework.expression.PropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r17, r3)\", \"if $z0 == 0 goto (branch)\", \"$z1 = r37 instanceof org.springframework.expression.spel.support.ReflectivePropertyAccessor\", \"if $z1 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r37\", \"$r20 = (org.springframework.expression.spel.support.ReflectivePropertyAccessor) r37\", \"$r21 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r37 = virtualinvoke $r20.<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r21, r3)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r37\", \"$r18 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r19 = interfaceinvoke r37.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r18, r3)\", \"return $r19\", \"goto [?= $z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\", \"$r26 := @caughtexception\", \"$r27 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r29 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_READ>\", \"$r28 = newarray (java.lang.Object)[2]\", \"$r28[0] = r3\", \"$r30 = virtualinvoke $r26.<java.lang.Exception: java.lang.String getMessage()>()\", \"$r28[1] = $r30\", \"specialinvoke $r27.<org.springframework.expression.spel.SpelEvaluationException: void <init>(java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r26, $r29, $r28)\", \"throw $r27\"],\"readProperty.52\":[\"if $r6 != null goto $r7 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r13 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r15 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL>\", \"$r14 = newarray (java.lang.Object)[1]\", \"$r14[0] = r3\", \"specialinvoke $r13.<org.springframework.expression.spel.SpelEvaluationException: void <init>(org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r15, $r14)\", \"throw $r13\", \"$r7 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.61\":[\"$r9 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE>\", \"$r8 = newarray (java.lang.Object)[2]\", \"$r8[0] = r3\", \"$r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r11 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r10)\", \"$r12 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r11)\", \"$r8[1] = $r12\", \"specialinvoke $r7.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r9, $r8)\", \"throw $r7\"],\"writeProperty.6\":[\"if $r7 != null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"writeProperty.8\":[\"if $z2 == 0 goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"writeProperty.10\":[\"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r8 != null goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\", \"$r20 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r22 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL>\", \"$r21 = newarray (java.lang.Object)[1]\", \"$r21[0] = r3\", \"specialinvoke $r20.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r22, $r21)\", \"throw $r20\"],\"writeProperty.20\":[\"if r5 == null goto $r30 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r18 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"$z1 = interfaceinvoke $r18.<java.util.List: boolean contains(java.lang.Object)>(r5)\", \"if $z1 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor> = null\", \"$r19 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r19, r3, r4)\"],\"writeProperty.27\":[\"$r28 := @caughtexception\"],\"writeProperty.29\":[\"$r30 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r31 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r32 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r30, $r31)\", \"r33 = interfaceinvoke r32.<java.util.List: java.util.Iterator iterator()>()\", \"$z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()\", \"if $z3 == 0 goto (branch)\", \"$r15 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (org.springframework.expression.PropertyAccessor) $r15\", \"$r16 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z0 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r16, r3)\"],\"writeProperty.40\":null,\"writeProperty.41\":[\"$r17 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r17, r3, r4)\"],\"writeProperty.44\":[\"goto [?= $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r9 = new org.springframework.expression.spel.SpelEvaluationException]\", \"$r23 := @caughtexception\", \"$r24 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.49\":[\"$r26 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_WRITE>\", \"$r25 = newarray (java.lang.Object)[2]\", \"$r25[0] = r3\", \"$r27 = virtualinvoke $r23.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\", \"$r25[1] = $r27\", \"specialinvoke $r24.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r23, $r26, $r25)\", \"throw $r24\", \"$r9 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.58\":[\"$r11 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE>\", \"$r10 = newarray (java.lang.Object)[2]\", \"$r10[0] = r3\", \"$r12 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r13 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r12)\", \"$r14 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r13)\", \"$r10[1] = $r14\", \"specialinvoke $r9.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r11, $r10)\", \"throw $r9\"],\"isWritableProperty.4\":\"r4 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.5\":\"if r4 == null goto return 0\",\"isWritableProperty.6\":\"$r9 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.7\":\"$r10 = interfaceinvoke r3.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\",\"isWritableProperty.8\":\"r5 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r9, $r10)\",\"isWritableProperty.9\":\"r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>()\",\"isWritableProperty.10\":\"$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\",\"isWritableProperty.11\":\"if $z0 == 0 goto return 0\",\"isWritableProperty.12\":\"$r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()\",\"isWritableProperty.13\":\"r7 = (org.springframework.expression.PropertyAccessor) $r11\",\"isWritableProperty.14\":\"$z1 = interfaceinvoke r7.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r3, r4, r1)\",\"isWritableProperty.19\":\"goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\",\"isCompilable\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isCompilable()>\",\"generateCode\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void generateCode(org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>\",\"access$100\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$200\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$300\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$300(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>\",\"access$100\":null,\"access$200\":null},\"rhs\" : {\"getValueInternal.2\":[\"$r2 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"$r3 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()>()\", \"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()>()\", \"$z0 = virtualinvoke $r4.<org.springframework.expression.spel.SpelParserConfiguration: boolean isAutoGrowNullReferences()>()\", \"$r5 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r2, $r3, $z0)\", \"return $r5\"],\"getValueInternal.4\":[\"$r4 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r4)\", \"$r5 = virtualinvoke r53.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r5 != null goto return r53\", \"if z0 == 0 goto return r53\", \"$r6 = newarray (java.lang.Class)[2]\", \"$r6[0] = class \"Lorg/springframework/expression/spel/ast/Indexer;\"\", \"$r6[1] = class \"Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;\"\", \"$z1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean nextChildIs(java.lang.Class[])>($r6)\", \"if $z1 == 0 goto return r53\", \"r3 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r7 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$z2 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/List;\")\", \"if $z2 != 0 goto $r8 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r19 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$z6 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/Map;\")\", \"if $z6 == 0 goto $r20 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\"],\"getValueInternal.21\":[\"$z3 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/List;\")\", \"if $z3 == 0 goto $r9 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$r14 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z5 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r14, r1, r2)\", \"if $z5 == 0 goto (branch)\", \"$r15 = class \"Ljava/util/ArrayList;\"\", \"$r16 = virtualinvoke $r15.<java.lang.Class: java.lang.Object newInstance()>()\", \"r54 = (java.util.List) $r16\"],\"getValueInternal.35\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r17, r54)\", \"$r18 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r18)\", \"goto [?= return r53]\", \"$r29 := @caughtexception\", \"r63 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.61\":[\"$r32 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_LIST_FOR_INDEXING>\", \"$r31 = newarray (java.lang.Object)[0]\", \"specialinvoke r63.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r29, $r32, $r31)\", \"r69 = (java.lang.Throwable) r63\", \"throw r69\", \"$r33 := @caughtexception\", \"r64 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i2 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r36 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_LIST_FOR_INDEXING>\", \"$r35 = newarray (java.lang.Object)[0]\", \"specialinvoke r64.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r33, $r36, $r35)\", \"r70 = (java.lang.Throwable) r64\", \"throw r70\", \"$r9 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r9, r1, r2)\", \"if $z4 == 0 goto (branch)\", \"$r10 = class \"Ljava/util/HashMap;\"\", \"$r11 = virtualinvoke $r10.<java.lang.Class: java.lang.Object newInstance()>()\", \"r57 = (java.util.Map) $r11\", \"$r12 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r12, r57)\", \"$r13 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r13)\", \"goto [?= return r53]\", \"$r43 := @caughtexception\", \"r65 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r46 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_MAP_FOR_INDEXING>\", \"$r45 = newarray (java.lang.Object)[0]\", \"specialinvoke r65.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i4, $r43, $r46, $r45)\", \"r71 = (java.lang.Throwable) r65\", \"throw r71\"],\"getValueInternal.70\":[\"r66 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.72\":[\"$r28 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_MAP_FOR_INDEXING>\", \"$r27 = newarray (java.lang.Object)[0]\", \"specialinvoke r66.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r25, $r28, $r27)\", \"r72 = (java.lang.Throwable) r66\", \"throw r72\", \"$r20 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z7 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r20, r1, r2)\", \"if $z7 == 0 goto (branch)\", \"$r21 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r22 = virtualinvoke $r21.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"r60 = virtualinvoke $r22.<java.lang.Class: java.lang.Object newInstance()>()\", \"$r23 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r23, r60)\", \"$r24 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r24)\", \"goto [?= return r53]\", \"$r37 := @caughtexception\", \"r67 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i3 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r40 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r39 = newarray (java.lang.Object)[1]\", \"$r41 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r42 = virtualinvoke $r41.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r39[0] = $r42\", \"specialinvoke r67.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i3, $r37, $r40, $r39)\", \"r73 = (java.lang.Throwable) r67\", \"throw r73\", \"$r47 := @caughtexception\", \"r68 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i5 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r50 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r49 = newarray (java.lang.Object)[1]\", \"$r51 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r52 = virtualinvoke $r51.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r49[0] = $r52\", \"specialinvoke r68.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i5, $r47, $r50, $r49)\", \"r74 = (java.lang.Throwable) r68\", \"throw r74\", \"return r53\"],\"readProperty.8\":[\"$r26 = <org.springframework.expression.TypedValue: org.springframework.expression.TypedValue NULL>\", \"return $r26\"],\"readProperty.11\":[\"if r5 == null goto $r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r24 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r25 = interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r24, r3)\", \"return $r25\", \"$r27 := @caughtexception\"],\"readProperty.20\":null,\"readProperty.52\":[\"$r7 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r34 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r6, $r7)\", \"if r34 == null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r35 = interfaceinvoke r34.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto (branch)\", \"$r18 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>()\", \"r36 = (org.springframework.expression.PropertyAccessor) $r18\", \"$r19 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z1 = interfaceinvoke r36.<org.springframework.expression.PropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r19, r3)\", \"if $z1 == 0 goto (branch)\", \"$z2 = r36 instanceof org.springframework.expression.spel.support.ReflectivePropertyAccessor\", \"if $z2 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r36\", \"$r22 = (org.springframework.expression.spel.support.ReflectivePropertyAccessor) r36\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r36 = virtualinvoke $r22.<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r23, r3)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r36\", \"$r20 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r21 = interfaceinvoke r36.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r20, r3)\", \"return $r21\", \"goto [?= $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\", \"$r28 := @caughtexception\", \"r38 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r31 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_READ>\", \"$r30 = newarray (java.lang.Object)[2]\", \"$r30[0] = r3\", \"r41 = (org.springframework.expression.AccessException) $r28\", \"$r32 = virtualinvoke r41.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\", \"$r30[1] = $r32\", \"specialinvoke r38.<org.springframework.expression.spel.SpelEvaluationException: void <init>(java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r28, $r31, $r30)\", \"r42 = (java.lang.Throwable) r38\", \"throw r42\", \"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r8 != null goto r40 = new org.springframework.expression.spel.SpelEvaluationException\", \"r39 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r17 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL>\", \"$r16 = newarray (java.lang.Object)[1]\", \"$r16[0] = r3\", \"specialinvoke r39.<org.springframework.expression.spel.SpelEvaluationException: void <init>(org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r17, $r16)\", \"r43 = (java.lang.Throwable) r39\", \"throw r43\", \"r40 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.61\":[\"$r11 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE>\", \"$r10 = newarray (java.lang.Object)[2]\", \"$r10[0] = r3\", \"$r12 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r13 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r12)\", \"$r14 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r13)\", \"$r10[1] = $r14\", \"specialinvoke r40.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r11, $r10)\", \"r44 = (java.lang.Throwable) r40\", \"throw r44\"],\"writeProperty.6\":[\"if $r7 != null goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\"],\"writeProperty.8\":[\"if $z2 == 0 goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\"],\"writeProperty.10\":null,\"writeProperty.20\":[\"if r5 == null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r23, r3, r4)\"],\"writeProperty.27\":[\"$r29 := @caughtexception\"],\"writeProperty.29\":[\"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r9 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r31 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r8, $r9)\", \"if r31 == null goto $r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r32 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()\"],\"writeProperty.40\":[\"$r20 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (org.springframework.expression.PropertyAccessor) $r20\", \"$r21 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z1 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r21, r3)\", \"if $z1 == 0 goto (branch)\"],\"writeProperty.41\":[\"$r22 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r22, r3, r4)\"],\"writeProperty.44\":[\"goto [?= $z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\", \"$r24 := @caughtexception\", \"r34 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.49\":[\"$r27 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_WRITE>\", \"$r26 = newarray (java.lang.Object)[2]\", \"$r26[0] = r3\", \"r37 = (org.springframework.expression.AccessException) $r24\", \"$r28 = virtualinvoke r37.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\", \"$r26[1] = $r28\", \"specialinvoke r34.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r24, $r27, $r26)\", \"r38 = (java.lang.Throwable) r34\", \"throw r38\", \"$r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r10 != null goto r36 = new org.springframework.expression.spel.SpelEvaluationException\", \"r35 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r19 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL>\", \"$r18 = newarray (java.lang.Object)[1]\", \"$r18[0] = r3\", \"specialinvoke r35.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r19, $r18)\", \"r39 = (java.lang.Throwable) r35\", \"throw r39\", \"r36 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.58\":[\"$r13 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE>\", \"$r12 = newarray (java.lang.Object)[2]\", \"$r12[0] = r3\", \"$r14 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r15 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r14)\", \"$r16 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r15)\", \"$r12[1] = $r16\", \"specialinvoke r36.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r13, $r12)\", \"r40 = (java.lang.Throwable) r36\", \"throw r40\"],\"isWritableProperty.4\":\"$r8 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.5\":\"$r9 = interfaceinvoke r3.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\",\"isWritableProperty.6\":\"r4 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r8, $r9)\",\"isWritableProperty.7\":\"if r4 == null goto return 0\",\"isWritableProperty.8\":\"r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()\",\"isWritableProperty.9\":\"$z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\",\"isWritableProperty.10\":\"if $z0 == 0 goto return 0\",\"isWritableProperty.11\":\"$r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\",\"isWritableProperty.12\":\"r6 = (org.springframework.expression.PropertyAccessor) $r10\",\"isWritableProperty.13\":\"$r11 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.14\":\"$z1 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r3, $r11, r1)\",\"isWritableProperty.19\":\"goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\",\"isCompilable\":null,\"generateCode\":null,\"access$100\":null,\"access$200\":null,\"access$300\":null,\"access$100\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$200\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>\"}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(ExpressionState)",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "diff": "{\"lhs\" : {\"2\":[\"$r5 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"$r6 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()>()\", \"$r7 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.expression.spel.SpelParserConfiguration: boolean isAutoGrowNullReferences()>()\", \"r2 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r5, $r6, $z0)\", \"r3 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor>\", \"$z1 = r3 instanceof org.springframework.expression.spel.CompilablePropertyAccessor\", \"if $z1 == 0 goto return r2\", \"r4 = (org.springframework.expression.spel.CompilablePropertyAccessor) r3\", \"$r8 = interfaceinvoke r4.<org.springframework.expression.spel.CompilablePropertyAccessor: java.lang.Class getPropertyType()>()\", \"$r9 = staticinvoke <org.springframework.expression.spel.CodeFlow: java.lang.String toDescriptor(java.lang.Class)>($r8)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String exitTypeDescriptor> = $r9\", \"return r2\"]},\"rhs\" : {\"2\":[\"$r2 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"$r3 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()>()\", \"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()>()\", \"$z0 = virtualinvoke $r4.<org.springframework.expression.spel.SpelParserConfiguration: boolean isAutoGrowNullReferences()>()\", \"$r5 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r2, $r3, $z0)\", \"return $r5\"]}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(ExpressionState)",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "diff": "{\"lhs\" : {\"2\":[\"$r5 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"$r6 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()>()\", \"$r7 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.expression.spel.SpelParserConfiguration: boolean isAutoGrowNullReferences()>()\", \"r2 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r5, $r6, $z0)\", \"r3 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor>\", \"$z1 = r3 instanceof org.springframework.expression.spel.CompilablePropertyAccessor\", \"if $z1 == 0 goto return r2\", \"r4 = (org.springframework.expression.spel.CompilablePropertyAccessor) r3\", \"$r8 = interfaceinvoke r4.<org.springframework.expression.spel.CompilablePropertyAccessor: java.lang.Class getPropertyType()>()\", \"$r9 = staticinvoke <org.springframework.expression.spel.CodeFlow: java.lang.String toDescriptor(java.lang.Class)>($r8)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String exitTypeDescriptor> = $r9\", \"return r2\"]},\"rhs\" : {\"2\":[\"$r2 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"$r3 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()>()\", \"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()>()\", \"$z0 = virtualinvoke $r4.<org.springframework.expression.spel.SpelParserConfiguration: boolean isAutoGrowNullReferences()>()\", \"$r5 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r2, $r3, $z0)\", \"return $r5\"]}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        },
        {
            "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference.setExitTypeDescriptor(String)",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "diff": "{\"lhs\" : {\"getValueInternal.2\":[\"$r5 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"$r6 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()>()\", \"$r7 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.expression.spel.SpelParserConfiguration: boolean isAutoGrowNullReferences()>()\", \"r2 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r5, $r6, $z0)\", \"r3 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor>\", \"$z1 = r3 instanceof org.springframework.expression.spel.CompilablePropertyAccessor\", \"if $z1 == 0 goto return r2\", \"r4 = (org.springframework.expression.spel.CompilablePropertyAccessor) r3\", \"$r8 = interfaceinvoke r4.<org.springframework.expression.spel.CompilablePropertyAccessor: java.lang.Class getPropertyType()>()\", \"$r9 = staticinvoke <org.springframework.expression.spel.CodeFlow: java.lang.String toDescriptor(java.lang.Class)>($r8)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String exitTypeDescriptor> = $r9\", \"return r2\"],\"getValueInternal.4\":[\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r5)\", \"$r6 = virtualinvoke r38.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r6 != null goto return r38\", \"if z0 == 0 goto return r38\", \"$r7 = newarray (java.lang.Class)[2]\", \"$r7[0] = class \"Lorg/springframework/expression/spel/ast/Indexer;\"\", \"$r7[1] = class \"Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;\"\", \"$z1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean nextChildIs(java.lang.Class[])>($r7)\", \"if $z1 == 0 goto return r38\", \"r3 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"if r3 == null goto $z5 = 0\", \"$z5 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"No result type\")]\", \"$z5 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"No result type\")\"],\"getValueInternal.21\":[\"if class \"Ljava/util/List;\" != $r8 goto $r9 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r21 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r21, r1, r2)\", \"if $z4 == 0 goto return r38\", \"$r22 = new java.util.ArrayList\", \"specialinvoke $r22.<java.util.ArrayList: void <init>()>()\", \"$r23 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r23, $r22)\", \"$r24 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r24)\", \"goto [?= return r38]\", \"$r9 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"if class \"Ljava/util/Map;\" != $r9 goto $r10 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\"],\"getValueInternal.35\":[\"$z3 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r17, r1, r2)\", \"if $z3 == 0 goto return r38\", \"$r18 = new java.util.HashMap\", \"specialinvoke $r18.<java.util.HashMap: void <init>()>()\", \"$r19 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r19, $r18)\", \"$r20 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r20)\", \"goto [?= return r38]\", \"$r10 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z2 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r10, r1, r2)\", \"if $z2 == 0 goto (branch)\", \"$r11 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"r41 = virtualinvoke $r11.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r12 = newarray (java.lang.Class)[0]\", \"$r13 = staticinvoke <org.springframework.util.ReflectionUtils: java.lang.reflect.Constructor accessibleConstructor(java.lang.Class,java.lang.Class[])>(r41, $r12)\", \"$r14 = newarray (java.lang.Object)[0]\", \"r4 = virtualinvoke $r13.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r14)\", \"$r15 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r15, r4)\", \"$r16 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r16)\", \"goto [?= return r38]\", \"$r31 := @caughtexception\", \"$r32 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.61\":[\"$r33 = virtualinvoke $r31.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>()\", \"$r35 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r34 = newarray (java.lang.Object)[1]\", \"$r36 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r37 = virtualinvoke $r36.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r34[0] = $r37\", \"specialinvoke $r32.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r33, $r35, $r34)\", \"throw $r32\"],\"getValueInternal.70\":[\"$r26 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.72\":[\"$r28 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r27 = newarray (java.lang.Object)[1]\", \"$r29 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r30 = virtualinvoke $r29.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r27[0] = $r30\", \"specialinvoke $r26.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r25, $r28, $r27)\", \"throw $r26\", \"return r38\"],\"readProperty.8\":[\"$r25 = <org.springframework.expression.TypedValue: org.springframework.expression.TypedValue NULL>\", \"return $r25\"],\"readProperty.11\":[\"if r5 == null goto $r33 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r22 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"$z2 = interfaceinvoke $r22.<java.util.List: boolean contains(java.lang.Object)>(r5)\", \"if $z2 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = null\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r24 = interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r23, r3)\", \"return $r24\", \"$r26 := @caughtexception\"],\"readProperty.20\":[\"$r33 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r34 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r35 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r33, $r34)\", \"r36 = interfaceinvoke r35.<java.util.List: java.util.Iterator iterator()>()\", \"$z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()\", \"if $z4 == 0 goto (branch)\", \"$r16 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>()\", \"r37 = (org.springframework.expression.PropertyAccessor) $r16\", \"$r17 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z0 = interfaceinvoke r37.<org.springframework.expression.PropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r17, r3)\"],\"readProperty.31\":[\"$z1 = r37 instanceof org.springframework.expression.spel.support.ReflectivePropertyAccessor\", \"if $z1 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r37\", \"$r20 = (org.springframework.expression.spel.support.ReflectivePropertyAccessor) r37\", \"$r21 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r37 = virtualinvoke $r20.<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r21, r3)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r37\", \"$r18 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r19 = interfaceinvoke r37.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r18, r3)\", \"return $r19\", \"goto [?= $z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\"],\"readProperty.43\":[\"$r28 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.47\":[\"$r31 = virtualinvoke $r27.<java.lang.Exception: java.lang.String getMessage()>()\"],\"readProperty.49\":[\"specialinvoke $r28.<org.springframework.expression.spel.SpelEvaluationException: void <init>(java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r27, $r30, $r29)\", \"throw $r28\", \"$r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r6 != null goto $r7 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r13 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r15 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL>\", \"$r14 = newarray (java.lang.Object)[1]\", \"$r14[0] = r3\", \"specialinvoke $r13.<org.springframework.expression.spel.SpelEvaluationException: void <init>(org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r15, $r14)\", \"throw $r13\", \"$r7 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.61\":[\"$r9 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE>\", \"$r8 = newarray (java.lang.Object)[2]\", \"$r8[0] = r3\", \"$r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r11 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r10)\", \"$r12 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r11)\", \"$r8[1] = $r12\", \"specialinvoke $r7.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r9, $r8)\", \"throw $r7\"],\"writeProperty.6\":[\"if $r7 != null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"writeProperty.8\":[\"if $z2 == 0 goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"writeProperty.10\":[\"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r8 != null goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\", \"$r20 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r22 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL>\", \"$r21 = newarray (java.lang.Object)[1]\", \"$r21[0] = r3\", \"specialinvoke $r20.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r22, $r21)\", \"throw $r20\"],\"writeProperty.20\":[\"if r5 == null goto $r30 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r18 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"$z1 = interfaceinvoke $r18.<java.util.List: boolean contains(java.lang.Object)>(r5)\", \"if $z1 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor> = null\", \"$r19 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r19, r3, r4)\"],\"writeProperty.27\":[\"$r28 := @caughtexception\"],\"writeProperty.29\":[\"$r30 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r31 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r32 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r30, $r31)\", \"r33 = interfaceinvoke r32.<java.util.List: java.util.Iterator iterator()>()\", \"$z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()\", \"if $z3 == 0 goto (branch)\", \"$r15 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (org.springframework.expression.PropertyAccessor) $r15\", \"$r16 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z0 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r16, r3)\"],\"writeProperty.40\":null,\"writeProperty.41\":[\"$r17 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r17, r3, r4)\"],\"writeProperty.44\":[\"goto [?= $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r9 = new org.springframework.expression.spel.SpelEvaluationException]\", \"$r23 := @caughtexception\", \"$r24 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.49\":[\"$r26 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_WRITE>\", \"$r25 = newarray (java.lang.Object)[2]\", \"$r25[0] = r3\", \"$r27 = virtualinvoke $r23.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\", \"$r25[1] = $r27\", \"specialinvoke $r24.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r23, $r26, $r25)\", \"throw $r24\", \"$r9 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.58\":[\"$r11 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE>\", \"$r10 = newarray (java.lang.Object)[2]\", \"$r10[0] = r3\", \"$r12 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r13 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r12)\", \"$r14 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r13)\", \"$r10[1] = $r14\", \"specialinvoke $r9.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r11, $r10)\", \"throw $r9\"],\"isWritableProperty.4\":\"r4 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.5\":\"if r4 == null goto return 0\",\"isWritableProperty.6\":\"$r9 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.7\":\"$r10 = interfaceinvoke r3.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\",\"isWritableProperty.8\":\"r5 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r9, $r10)\",\"isWritableProperty.9\":\"r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>()\",\"isWritableProperty.10\":\"$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\",\"isWritableProperty.11\":\"if $z0 == 0 goto return 0\",\"isWritableProperty.12\":\"$r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()\",\"isWritableProperty.13\":\"r7 = (org.springframework.expression.PropertyAccessor) $r11\",\"isWritableProperty.14\":\"$z1 = interfaceinvoke r7.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r3, r4, r1)\",\"isWritableProperty.19\":\"goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\",\"isCompilable\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isCompilable()>\",\"generateCode\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void generateCode(org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>\",\"access$100\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$200\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$300\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$300(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>\",\"access$100\":null,\"access$200\":null},\"rhs\" : {\"getValueInternal.2\":[\"$r2 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"$r3 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()>()\", \"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()>()\", \"$z0 = virtualinvoke $r4.<org.springframework.expression.spel.SpelParserConfiguration: boolean isAutoGrowNullReferences()>()\", \"$r5 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r2, $r3, $z0)\", \"return $r5\"],\"getValueInternal.4\":[\"$r4 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r4)\", \"$r5 = virtualinvoke r53.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r5 != null goto return r53\", \"if z0 == 0 goto return r53\", \"$r6 = newarray (java.lang.Class)[2]\", \"$r6[0] = class \"Lorg/springframework/expression/spel/ast/Indexer;\"\", \"$r6[1] = class \"Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;\"\", \"$z1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean nextChildIs(java.lang.Class[])>($r6)\", \"if $z1 == 0 goto return r53\", \"r3 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r7 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$z2 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/List;\")\", \"if $z2 != 0 goto $r8 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r19 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$z6 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/Map;\")\", \"if $z6 == 0 goto $r20 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\"],\"getValueInternal.21\":[\"$z3 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/List;\")\", \"if $z3 == 0 goto $r9 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$r14 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z5 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r14, r1, r2)\", \"if $z5 == 0 goto (branch)\", \"$r15 = class \"Ljava/util/ArrayList;\"\", \"$r16 = virtualinvoke $r15.<java.lang.Class: java.lang.Object newInstance()>()\", \"r54 = (java.util.List) $r16\"],\"getValueInternal.35\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r17, r54)\", \"$r18 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r18)\", \"goto [?= return r53]\", \"$r33 := @caughtexception\", \"r63 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i2 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r36 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_LIST_FOR_INDEXING>\", \"$r35 = newarray (java.lang.Object)[0]\", \"specialinvoke r63.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r33, $r36, $r35)\", \"r69 = (java.lang.Throwable) r63\", \"throw r69\", \"$r29 := @caughtexception\", \"r64 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.61\":[\"$r32 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_LIST_FOR_INDEXING>\", \"$r31 = newarray (java.lang.Object)[0]\", \"specialinvoke r64.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r29, $r32, $r31)\", \"r70 = (java.lang.Throwable) r64\", \"throw r70\", \"$r9 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r9, r1, r2)\", \"if $z4 == 0 goto (branch)\", \"$r10 = class \"Ljava/util/HashMap;\"\", \"$r11 = virtualinvoke $r10.<java.lang.Class: java.lang.Object newInstance()>()\", \"r57 = (java.util.Map) $r11\", \"$r12 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r12, r57)\", \"$r13 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r13)\", \"goto [?= return r53]\", \"$r37 := @caughtexception\", \"r65 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i3 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r40 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_MAP_FOR_INDEXING>\", \"$r39 = newarray (java.lang.Object)[0]\", \"specialinvoke r65.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i3, $r37, $r40, $r39)\", \"r71 = (java.lang.Throwable) r65\", \"throw r71\"],\"getValueInternal.70\":[\"r66 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.72\":[\"$r28 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_MAP_FOR_INDEXING>\", \"$r27 = newarray (java.lang.Object)[0]\", \"specialinvoke r66.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r25, $r28, $r27)\", \"r72 = (java.lang.Throwable) r66\", \"throw r72\", \"$r20 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z7 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r20, r1, r2)\", \"if $z7 == 0 goto (branch)\", \"$r21 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r22 = virtualinvoke $r21.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"r60 = virtualinvoke $r22.<java.lang.Class: java.lang.Object newInstance()>()\", \"$r23 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r23, r60)\", \"$r24 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r24)\", \"goto [?= return r53]\", \"$r41 := @caughtexception\", \"r67 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r44 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r43 = newarray (java.lang.Object)[1]\", \"$r45 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r46 = virtualinvoke $r45.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r43[0] = $r46\", \"specialinvoke r67.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i4, $r41, $r44, $r43)\", \"r73 = (java.lang.Throwable) r67\", \"throw r73\", \"$r47 := @caughtexception\", \"r68 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i5 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r50 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r49 = newarray (java.lang.Object)[1]\", \"$r51 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r52 = virtualinvoke $r51.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r49[0] = $r52\", \"specialinvoke r68.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i5, $r47, $r50, $r49)\", \"r74 = (java.lang.Throwable) r68\", \"throw r74\", \"return r53\"],\"readProperty.8\":[\"$r26 = <org.springframework.expression.TypedValue: org.springframework.expression.TypedValue NULL>\", \"return $r26\"],\"readProperty.11\":[\"if r5 == null goto $r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r24 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r25 = interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r24, r3)\", \"return $r25\", \"$r32 := @caughtexception\"],\"readProperty.20\":[\"$r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r7 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r34 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r6, $r7)\", \"if r34 == null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r35 = interfaceinvoke r34.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()\"],\"readProperty.31\":[\"$r18 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>()\", \"r36 = (org.springframework.expression.PropertyAccessor) $r18\", \"$r19 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z1 = interfaceinvoke r36.<org.springframework.expression.PropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r19, r3)\", \"if $z1 == 0 goto (branch)\", \"$z2 = r36 instanceof org.springframework.expression.spel.support.ReflectivePropertyAccessor\", \"if $z2 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r36\", \"$r22 = (org.springframework.expression.spel.support.ReflectivePropertyAccessor) r36\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r36 = virtualinvoke $r22.<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r23, r3)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r36\", \"$r20 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r21 = interfaceinvoke r36.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r20, r3)\", \"return $r21\", \"goto [?= $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\"],\"readProperty.43\":[\"r38 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.47\":[\"r41 = (org.springframework.expression.AccessException) $r27\", \"$r31 = virtualinvoke r41.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\"],\"readProperty.49\":[\"specialinvoke r38.<org.springframework.expression.spel.SpelEvaluationException: void <init>(java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r27, $r30, $r29)\", \"r42 = (java.lang.Throwable) r38\", \"throw r42\", \"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r8 != null goto r40 = new org.springframework.expression.spel.SpelEvaluationException\", \"r39 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r17 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL>\", \"$r16 = newarray (java.lang.Object)[1]\", \"$r16[0] = r3\", \"specialinvoke r39.<org.springframework.expression.spel.SpelEvaluationException: void <init>(org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r17, $r16)\", \"r43 = (java.lang.Throwable) r39\", \"throw r43\", \"r40 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.61\":[\"$r11 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE>\", \"$r10 = newarray (java.lang.Object)[2]\", \"$r10[0] = r3\", \"$r12 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r13 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r12)\", \"$r14 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r13)\", \"$r10[1] = $r14\", \"specialinvoke r40.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r11, $r10)\", \"r44 = (java.lang.Throwable) r40\", \"throw r44\"],\"writeProperty.6\":[\"if $r7 != null goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\"],\"writeProperty.8\":[\"if $z2 == 0 goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\"],\"writeProperty.10\":null,\"writeProperty.20\":[\"if r5 == null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r23, r3, r4)\"],\"writeProperty.27\":[\"$r24 := @caughtexception\"],\"writeProperty.29\":[\"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r9 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r31 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r8, $r9)\", \"if r31 == null goto $r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r32 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()\"],\"writeProperty.40\":[\"$r20 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (org.springframework.expression.PropertyAccessor) $r20\", \"$r21 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z1 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r21, r3)\", \"if $z1 == 0 goto (branch)\"],\"writeProperty.41\":[\"$r22 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r22, r3, r4)\"],\"writeProperty.44\":[\"goto [?= $z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\", \"$r25 := @caughtexception\", \"r34 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.49\":[\"$r28 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_WRITE>\", \"$r27 = newarray (java.lang.Object)[2]\", \"$r27[0] = r3\", \"r37 = (org.springframework.expression.AccessException) $r25\", \"$r29 = virtualinvoke r37.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\", \"$r27[1] = $r29\", \"specialinvoke r34.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r25, $r28, $r27)\", \"r38 = (java.lang.Throwable) r34\", \"throw r38\", \"$r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r10 != null goto r36 = new org.springframework.expression.spel.SpelEvaluationException\", \"r35 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r19 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL>\", \"$r18 = newarray (java.lang.Object)[1]\", \"$r18[0] = r3\", \"specialinvoke r35.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r19, $r18)\", \"r39 = (java.lang.Throwable) r35\", \"throw r39\", \"r36 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.58\":[\"$r13 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE>\", \"$r12 = newarray (java.lang.Object)[2]\", \"$r12[0] = r3\", \"$r14 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r15 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r14)\", \"$r16 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r15)\", \"$r12[1] = $r16\", \"specialinvoke r36.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r13, $r12)\", \"r40 = (java.lang.Throwable) r36\", \"throw r40\"],\"isWritableProperty.4\":\"$r8 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.5\":\"$r9 = interfaceinvoke r3.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\",\"isWritableProperty.6\":\"r4 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r8, $r9)\",\"isWritableProperty.7\":\"if r4 == null goto return 0\",\"isWritableProperty.8\":\"r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()\",\"isWritableProperty.9\":\"$z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\",\"isWritableProperty.10\":\"if $z0 == 0 goto return 0\",\"isWritableProperty.11\":\"$r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\",\"isWritableProperty.12\":\"r6 = (org.springframework.expression.PropertyAccessor) $r10\",\"isWritableProperty.13\":\"$r11 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.14\":\"$z1 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r3, $r11, r1)\",\"isWritableProperty.19\":\"goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\",\"isCompilable\":null,\"generateCode\":null,\"access$100\":null,\"access$200\":null,\"access$300\":null,\"access$100\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$200\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>\"}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/1db7e02de3eb0c011ee6681f5a12eb9d166fea8/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "commit": "1db7e02de3eb0c011ee6681f5a12eb9d166fea8"
        },
        {
            "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference.setExitTypeDescriptor(String)",
            "contained": true,
            "affectedFile": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "diff": "{\"lhs\" : {\"getValueInternal.2\":[\"$r5 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"$r6 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()>()\", \"$r7 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()>()\", \"$z0 = virtualinvoke $r7.<org.springframework.expression.spel.SpelParserConfiguration: boolean isAutoGrowNullReferences()>()\", \"r2 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r5, $r6, $z0)\", \"r3 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor>\", \"$z1 = r3 instanceof org.springframework.expression.spel.CompilablePropertyAccessor\", \"if $z1 == 0 goto return r2\", \"r4 = (org.springframework.expression.spel.CompilablePropertyAccessor) r3\", \"$r8 = interfaceinvoke r4.<org.springframework.expression.spel.CompilablePropertyAccessor: java.lang.Class getPropertyType()>()\", \"$r9 = staticinvoke <org.springframework.expression.spel.CodeFlow: java.lang.String toDescriptor(java.lang.Class)>($r8)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String exitTypeDescriptor> = $r9\", \"return r2\"],\"getValueInternal.4\":[\"$r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r5)\", \"$r6 = virtualinvoke r38.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r6 != null goto return r38\", \"if z0 == 0 goto return r38\", \"$r7 = newarray (java.lang.Class)[2]\", \"$r7[0] = class \"Lorg/springframework/expression/spel/ast/Indexer;\"\", \"$r7[1] = class \"Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;\"\", \"$z1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean nextChildIs(java.lang.Class[])>($r7)\", \"if $z1 == 0 goto return r38\", \"r3 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"if r3 == null goto $z5 = 0\", \"$z5 = 1\", \"goto [?= staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"No result type\")]\", \"$z5 = 0\", \"staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z5, \"No result type\")\"],\"getValueInternal.21\":[\"if class \"Ljava/util/List;\" != $r8 goto $r9 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r21 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r21, r1, r2)\", \"if $z4 == 0 goto return r38\", \"$r22 = new java.util.ArrayList\", \"specialinvoke $r22.<java.util.ArrayList: void <init>()>()\", \"$r23 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r23, $r22)\", \"$r24 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r24)\", \"goto [?= return r38]\", \"$r9 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"if class \"Ljava/util/Map;\" != $r9 goto $r10 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\"],\"getValueInternal.35\":[\"$z3 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r17, r1, r2)\", \"if $z3 == 0 goto return r38\", \"$r18 = new java.util.HashMap\", \"specialinvoke $r18.<java.util.HashMap: void <init>()>()\", \"$r19 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r19, $r18)\"],\"getValueInternal.42\":[\"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r20)\", \"goto [?= return r38]\", \"$r10 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z2 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r10, r1, r2)\", \"if $z2 == 0 goto (branch)\", \"$r11 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"r41 = virtualinvoke $r11.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r12 = newarray (java.lang.Class)[0]\", \"$r13 = staticinvoke <org.springframework.util.ReflectionUtils: java.lang.reflect.Constructor accessibleConstructor(java.lang.Class,java.lang.Class[])>(r41, $r12)\", \"$r14 = newarray (java.lang.Object)[0]\", \"r4 = virtualinvoke $r13.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r14)\", \"$r15 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r15, r4)\", \"$r16 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r38 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r16)\", \"goto [?= return r38]\"],\"getValueInternal.59\":[\"$r32 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.61\":[\"$r33 = virtualinvoke $r31.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>()\", \"$r35 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r34 = newarray (java.lang.Object)[1]\", \"$r36 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r37 = virtualinvoke $r36.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r34[0] = $r37\", \"specialinvoke $r32.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r33, $r35, $r34)\", \"throw $r32\"],\"getValueInternal.70\":[\"$r26 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.74\":[\"$r29 = virtualinvoke r38.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\"],\"getValueInternal.77\":[\"specialinvoke $r26.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r25, $r28, $r27)\", \"throw $r26\", \"return r38\"],\"readProperty.8\":[\"$r25 = <org.springframework.expression.TypedValue: org.springframework.expression.TypedValue NULL>\", \"return $r25\"],\"readProperty.11\":[\"if r5 == null goto $r33 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r22 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"$z2 = interfaceinvoke $r22.<java.util.List: boolean contains(java.lang.Object)>(r5)\", \"if $z2 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = null\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r24 = interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r23, r3)\", \"return $r24\", \"$r31 := @caughtexception\"],\"readProperty.20\":[\"$r33 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r34 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r35 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r33, $r34)\", \"r36 = interfaceinvoke r35.<java.util.List: java.util.Iterator iterator()>()\", \"$z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()\", \"if $z4 == 0 goto (branch)\", \"$r16 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>()\", \"r37 = (org.springframework.expression.PropertyAccessor) $r16\", \"$r17 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z0 = interfaceinvoke r37.<org.springframework.expression.PropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r17, r3)\", \"if $z0 == 0 goto (branch)\", \"$z1 = r37 instanceof org.springframework.expression.spel.support.ReflectivePropertyAccessor\", \"if $z1 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r37\", \"$r20 = (org.springframework.expression.spel.support.ReflectivePropertyAccessor) r37\", \"$r21 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r37 = virtualinvoke $r20.<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r21, r3)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r37\", \"$r18 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r19 = interfaceinvoke r37.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r18, r3)\", \"return $r19\", \"goto [?= $z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\", \"$r26 := @caughtexception\", \"$r27 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r29 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_READ>\", \"$r28 = newarray (java.lang.Object)[2]\", \"$r28[0] = r3\", \"$r30 = virtualinvoke $r26.<java.lang.Exception: java.lang.String getMessage()>()\", \"$r28[1] = $r30\", \"specialinvoke $r27.<org.springframework.expression.spel.SpelEvaluationException: void <init>(java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r26, $r29, $r28)\", \"throw $r27\"],\"readProperty.52\":[\"if $r6 != null goto $r7 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r13 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r15 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL>\", \"$r14 = newarray (java.lang.Object)[1]\", \"$r14[0] = r3\", \"specialinvoke $r13.<org.springframework.expression.spel.SpelEvaluationException: void <init>(org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r15, $r14)\", \"throw $r13\", \"$r7 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.61\":[\"$r9 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE>\", \"$r8 = newarray (java.lang.Object)[2]\", \"$r8[0] = r3\", \"$r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r11 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r10)\", \"$r12 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r11)\", \"$r8[1] = $r12\", \"specialinvoke $r7.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r9, $r8)\", \"throw $r7\"],\"writeProperty.6\":[\"if $r7 != null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"writeProperty.8\":[\"if $z2 == 0 goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\"],\"writeProperty.10\":[\"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r8 != null goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\", \"$r20 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r22 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL>\", \"$r21 = newarray (java.lang.Object)[1]\", \"$r21[0] = r3\", \"specialinvoke $r20.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r22, $r21)\", \"throw $r20\"],\"writeProperty.20\":[\"if r5 == null goto $r30 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r18 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"$z1 = interfaceinvoke $r18.<java.util.List: boolean contains(java.lang.Object)>(r5)\", \"if $z1 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor> = null\", \"$r19 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r19, r3, r4)\"],\"writeProperty.27\":[\"$r28 := @caughtexception\"],\"writeProperty.29\":[\"$r30 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r31 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r32 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r30, $r31)\", \"r33 = interfaceinvoke r32.<java.util.List: java.util.Iterator iterator()>()\", \"$z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()\", \"if $z3 == 0 goto (branch)\", \"$r15 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (org.springframework.expression.PropertyAccessor) $r15\", \"$r16 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z0 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r16, r3)\"],\"writeProperty.40\":null,\"writeProperty.41\":[\"$r17 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r17, r3, r4)\"],\"writeProperty.44\":[\"goto [?= $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r9 = new org.springframework.expression.spel.SpelEvaluationException]\", \"$r23 := @caughtexception\", \"$r24 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.49\":[\"$r26 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_WRITE>\", \"$r25 = newarray (java.lang.Object)[2]\", \"$r25[0] = r3\", \"$r27 = virtualinvoke $r23.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\", \"$r25[1] = $r27\", \"specialinvoke $r24.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r23, $r26, $r25)\", \"throw $r24\", \"$r9 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.58\":[\"$r11 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE>\", \"$r10 = newarray (java.lang.Object)[2]\", \"$r10[0] = r3\", \"$r12 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r13 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r12)\", \"$r14 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r13)\", \"$r10[1] = $r14\", \"specialinvoke $r9.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r11, $r10)\", \"throw $r9\"],\"isWritableProperty.4\":\"r4 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.5\":\"if r4 == null goto return 0\",\"isWritableProperty.6\":\"$r9 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.7\":\"$r10 = interfaceinvoke r3.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\",\"isWritableProperty.8\":\"r5 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r9, $r10)\",\"isWritableProperty.9\":\"r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>()\",\"isWritableProperty.10\":\"$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()\",\"isWritableProperty.11\":\"if $z0 == 0 goto return 0\",\"isWritableProperty.12\":\"$r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()\",\"isWritableProperty.13\":\"r7 = (org.springframework.expression.PropertyAccessor) $r11\",\"isWritableProperty.14\":\"$z1 = interfaceinvoke r7.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r3, r4, r1)\",\"isWritableProperty.19\":\"goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]\",\"isCompilable\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isCompilable()>\",\"generateCode\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void generateCode(org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>\",\"access$100\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$200\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$300\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$300(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>\",\"access$100\":null,\"access$200\":null},\"rhs\" : {\"getValueInternal.2\":[\"$r2 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>()\", \"$r3 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()>()\", \"$r4 = virtualinvoke r1.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()>()\", \"$z0 = virtualinvoke $r4.<org.springframework.expression.spel.SpelParserConfiguration: boolean isAutoGrowNullReferences()>()\", \"$r5 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)>($r2, $r3, $z0)\", \"return $r5\"],\"getValueInternal.4\":[\"$r4 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r4)\", \"$r5 = virtualinvoke r53.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r5 != null goto return r53\", \"if z0 == 0 goto return r53\", \"$r6 = newarray (java.lang.Class)[2]\", \"$r6[0] = class \"Lorg/springframework/expression/spel/ast/Indexer;\"\", \"$r6[1] = class \"Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;\"\", \"$z1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean nextChildIs(java.lang.Class[])>($r6)\", \"if $z1 == 0 goto return r53\", \"r3 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r7 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$z2 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/List;\")\", \"if $z2 != 0 goto $r8 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r19 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$z6 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/Map;\")\", \"if $z6 == 0 goto $r20 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\"],\"getValueInternal.21\":[\"$z3 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(class \"Ljava/util/List;\")\", \"if $z3 == 0 goto $r9 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$r14 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z5 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r14, r1, r2)\", \"if $z5 == 0 goto (branch)\", \"$r15 = class \"Ljava/util/ArrayList;\"\", \"$r16 = virtualinvoke $r15.<java.lang.Class: java.lang.Object newInstance()>()\", \"r54 = (java.util.List) $r16\"],\"getValueInternal.35\":[\"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r17, r54)\", \"$r18 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r18)\", \"goto [?= return r53]\", \"$r45 := @caughtexception\", \"r63 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r48 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_LIST_FOR_INDEXING>\", \"$r47 = newarray (java.lang.Object)[0]\", \"specialinvoke r63.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i4, $r45, $r48, $r47)\", \"r69 = (java.lang.Throwable) r63\", \"throw r69\", \"$r41 := @caughtexception\", \"r64 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i3 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r44 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_LIST_FOR_INDEXING>\", \"$r43 = newarray (java.lang.Object)[0]\", \"specialinvoke r64.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i3, $r41, $r44, $r43)\", \"r70 = (java.lang.Throwable) r64\", \"throw r70\", \"$r9 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"$z4 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r9, r1, r2)\", \"if $z4 == 0 goto (branch)\", \"$r10 = class \"Ljava/util/HashMap;\"\", \"$r11 = virtualinvoke $r10.<java.lang.Class: java.lang.Object newInstance()>()\", \"r57 = (java.util.Map) $r11\", \"$r12 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r12, r57)\", \"$r13 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r13)\", \"goto [?= return r53]\", \"$r37 := @caughtexception\", \"r65 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i2 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r40 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_MAP_FOR_INDEXING>\", \"$r39 = newarray (java.lang.Object)[0]\", \"specialinvoke r65.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r37, $r40, $r39)\", \"r71 = (java.lang.Throwable) r65\", \"throw r71\", \"$r49 := @caughtexception\", \"r66 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i5 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r52 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_CREATE_MAP_FOR_INDEXING>\", \"$r51 = newarray (java.lang.Object)[0]\", \"specialinvoke r66.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i5, $r49, $r52, $r51)\", \"r72 = (java.lang.Throwable) r66\", \"throw r72\"],\"getValueInternal.42\":[\"$z7 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext)>($r20, r1, r2)\", \"if $z7 == 0 goto (branch)\", \"$r21 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r22 = virtualinvoke $r21.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"r60 = virtualinvoke $r22.<java.lang.Class: java.lang.Object newInstance()>()\", \"$r23 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>(r1, r2, $r23, r60)\", \"$r24 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String name>\", \"r53 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>(r1, r2, $r24)\", \"goto [?= return r53]\"],\"getValueInternal.59\":[\"r67 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.61\":[\"$r34 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage UNABLE_TO_DYNAMICALLY_CREATE_OBJECT>\", \"$r33 = newarray (java.lang.Object)[1]\", \"$r35 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\", \"$r36 = virtualinvoke $r35.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>()\", \"$r33[0] = $r36\", \"specialinvoke r67.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r31, $r34, $r33)\", \"r73 = (java.lang.Throwable) r67\", \"throw r73\"],\"getValueInternal.70\":[\"r68 = new org.springframework.expression.spel.SpelEvaluationException\"],\"getValueInternal.74\":[\"$r29 = virtualinvoke r53.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>()\"],\"getValueInternal.77\":[\"specialinvoke r68.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r25, $r28, $r27)\", \"r74 = (java.lang.Throwable) r68\", \"throw r74\", \"return r53\"],\"readProperty.8\":[\"$r26 = <org.springframework.expression.TypedValue: org.springframework.expression.TypedValue NULL>\", \"return $r26\"],\"readProperty.11\":[\"if r5 == null goto $r6 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r24 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r25 = interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r24, r3)\", \"return $r25\", \"$r32 := @caughtexception\"],\"readProperty.20\":null,\"readProperty.52\":[\"$r7 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r34 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r6, $r7)\", \"if r34 == null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r35 = interfaceinvoke r34.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()\", \"if $z0 == 0 goto (branch)\", \"$r18 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>()\", \"r36 = (org.springframework.expression.PropertyAccessor) $r18\", \"$r19 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z1 = interfaceinvoke r36.<org.springframework.expression.PropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r19, r3)\", \"if $z1 == 0 goto (branch)\", \"$z2 = r36 instanceof org.springframework.expression.spel.support.ReflectivePropertyAccessor\", \"if $z2 == 0 goto r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r36\", \"$r22 = (org.springframework.expression.spel.support.ReflectivePropertyAccessor) r36\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r36 = virtualinvoke $r22.<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r23, r3)\", \"r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedReadAccessor> = r36\", \"$r20 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r21 = interfaceinvoke r36.<org.springframework.expression.PropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r20, r3)\", \"return $r21\", \"goto [?= $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\", \"$r27 := @caughtexception\", \"r38 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r30 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_READ>\", \"$r29 = newarray (java.lang.Object)[2]\", \"$r29[0] = r3\", \"r41 = (org.springframework.expression.AccessException) $r27\", \"$r31 = virtualinvoke r41.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\", \"$r29[1] = $r31\", \"specialinvoke r38.<org.springframework.expression.spel.SpelEvaluationException: void <init>(java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r27, $r30, $r29)\", \"r42 = (java.lang.Throwable) r38\", \"throw r42\", \"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r8 != null goto r40 = new org.springframework.expression.spel.SpelEvaluationException\", \"r39 = new org.springframework.expression.spel.SpelEvaluationException\", \"$r17 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL>\", \"$r16 = newarray (java.lang.Object)[1]\", \"$r16[0] = r3\", \"specialinvoke r39.<org.springframework.expression.spel.SpelEvaluationException: void <init>(org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r17, $r16)\", \"r43 = (java.lang.Throwable) r39\", \"throw r43\", \"r40 = new org.springframework.expression.spel.SpelEvaluationException\"],\"readProperty.61\":[\"$r11 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_READABLE>\", \"$r10 = newarray (java.lang.Object)[2]\", \"$r10[0] = r3\", \"$r12 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r13 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r12)\", \"$r14 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r13)\", \"$r10[1] = $r14\", \"specialinvoke r40.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r11, $r10)\", \"r44 = (java.lang.Throwable) r40\", \"throw r44\"],\"writeProperty.6\":[\"if $r7 != null goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\"],\"writeProperty.8\":[\"if $z2 == 0 goto r5 = r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.PropertyAccessor cachedWriteAccessor>\"],\"writeProperty.10\":null,\"writeProperty.20\":[\"if r5 == null goto $r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r23 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r5.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r23, r3, r4)\"],\"writeProperty.27\":[\"$r29 := @caughtexception\"],\"writeProperty.29\":[\"$r8 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r9 = interfaceinvoke r2.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\", \"r31 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r8, $r9)\", \"if r31 == null goto $r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"r32 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>()\", \"$z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()\"],\"writeProperty.40\":[\"$r20 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()\", \"r6 = (org.springframework.expression.PropertyAccessor) $r20\", \"$r21 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$z1 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r2, $r21, r3)\", \"if $z1 == 0 goto (branch)\"],\"writeProperty.41\":[\"$r22 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>(r2, $r22, r3, r4)\"],\"writeProperty.44\":[\"goto [?= $z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]\", \"goto [?= $r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()]\", \"$r24 := @caughtexception\", \"r34 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.49\":[\"$r27 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage EXCEPTION_DURING_PROPERTY_WRITE>\", \"$r26 = newarray (java.lang.Object)[2]\", \"$r26[0] = r3\", \"r37 = (org.springframework.expression.AccessException) $r24\", \"$r28 = virtualinvoke r37.<org.springframework.expression.AccessException: java.lang.String getMessage()>()\", \"$r26[1] = $r28\", \"specialinvoke r34.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i2, $r24, $r27, $r26)\", \"r38 = (java.lang.Throwable) r34\", \"throw r38\", \"$r10 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"if $r10 != null goto r36 = new org.springframework.expression.spel.SpelEvaluationException\", \"r35 = new org.springframework.expression.spel.SpelEvaluationException\", \"$i1 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: int getStartPosition()>()\", \"$r19 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL>\", \"$r18 = newarray (java.lang.Object)[1]\", \"$r18[0] = r3\", \"specialinvoke r35.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i1, $r19, $r18)\", \"r39 = (java.lang.Throwable) r35\", \"throw r39\", \"r36 = new org.springframework.expression.spel.SpelEvaluationException\"],\"writeProperty.58\":[\"$r13 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage PROPERTY_OR_FIELD_NOT_WRITABLE>\", \"$r12 = newarray (java.lang.Object)[2]\", \"$r12[0] = r3\", \"$r14 = virtualinvoke r1.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\", \"$r15 = virtualinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.Class getObjectClass(java.lang.Object)>($r14)\", \"$r16 = staticinvoke <org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>($r15)\", \"$r12[1] = $r16\", \"specialinvoke r36.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r13, $r12)\", \"r40 = (java.lang.Throwable) r36\", \"throw r40\"],\"isWritableProperty.4\":\"$r8 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.5\":\"$r9 = interfaceinvoke r3.<org.springframework.expression.EvaluationContext: java.util.List getPropertyAccessors()>()\",\"isWritableProperty.6\":\"r4 = specialinvoke r0.<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)>($r8, $r9)\",\"isWritableProperty.7\":\"if r4 == null goto return 0\",\"isWritableProperty.8\":\"r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()\",\"isWritableProperty.9\":\"$z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()\",\"isWritableProperty.10\":\"if $z0 == 0 goto return 0\",\"isWritableProperty.11\":\"$r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()\",\"isWritableProperty.12\":\"r6 = (org.springframework.expression.PropertyAccessor) $r10\",\"isWritableProperty.13\":\"$r11 = virtualinvoke r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>()\",\"isWritableProperty.14\":\"$z1 = interfaceinvoke r6.<org.springframework.expression.PropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>(r3, $r11, r1)\",\"isWritableProperty.19\":\"goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]\",\"isCompilable\":null,\"generateCode\":null,\"access$100\":null,\"access$200\":null,\"access$300\":null,\"access$100\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String access$100(org.springframework.expression.spel.ast.PropertyOrFieldReference)>\",\"access$200\":\"<org.springframework.expression.spel.ast.PropertyOrFieldReference: void access$200(org.springframework.expression.spel.ast.PropertyOrFieldReference,org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)>\"}}",
            "ref_file": "/home/adann/Schreibtisch/test_compare_script/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
            "commit": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6"
        }
    ],
    "timestamp": "2018-11-30",
    "vulnerable": false,
    "cve": "CVE-2018-1275",
    "comment": "{\"artifacts\": [\"spring-expression\"], \"references\": [\"https://github.com/spring-projects/spring-framework/commit/1db7e02de3eb0c011ee6681f5a12eb9d166fea8\", \"https://github.com/spring-projects/spring-framework/commit/d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6\"]}",
    "gav": {
        "version": "4.0.8.RELEASE",
        "artifactId": "spring-expression",
        "groupId": "org.springframework"
    }
}