{
    "timestamp": "2018-11-30",
    "comment": "{\"artifacts\": [\"spring-mvc\", \"spring-webflux\"], \"references\": [\"https://pivotal.io/security/cve-2018-1272\"]}",
    "cve": "CVE-2018-1272",
    "details": [
        {
            "ref_file": "/data4/test_compare_script/ab2410c754b67902f002bfcc0c3895bd7772d39/org/springframework/util/MimeTypeUtils.class",
            "affectedFile": "/org/springframework/util/MimeTypeUtils.class",
            "contained": true,
            "diff": "{\"lhs\" : {\"parseMimeType.2\":[\"if $z0 != 0 goto i10 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(59)\", \"$r16 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r16.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"\\'mimeType\\' must not be empty\")\", \"throw $r16\", \"i10 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(59)\", \"if i10 < 0 goto $r28 = r0\", \"$r28 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i10)\", \"goto [?= r29 = virtualinvoke $r28.<java.lang.String: java.lang.String trim()>()]\", \"$r28 = r0\", \"r29 = virtualinvoke $r28.<java.lang.String: java.lang.String trim()>()\", \"$z1 = virtualinvoke r29.<java.lang.String: boolean isEmpty()>()\", \"if $z1 == 0 goto $r5 = \"*\"\", \"$r15 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r15.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"\\'mimeType\\' must not be empty\")\", \"throw $r15\", \"$r5 = \"*\"\", \"$z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r29)\", \"if $z2 == 0 goto i0 = virtualinvoke r29.<java.lang.String: int indexOf(int)>(47)\", \"r29 = \"*/*\"\", \"i0 = virtualinvoke r29.<java.lang.String: int indexOf(int)>(47)\", \"if i0 != -1 goto $i2 = virtualinvoke r29.<java.lang.String: int length()>()\", \"$r14 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r14.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"does not contain \\'/\\'\")\", \"throw $r14\", \"$i2 = virtualinvoke r29.<java.lang.String: int length()>()\", \"$i3 = $i2 - 1\", \"if i0 != $i3 goto r1 = virtualinvoke r29.<java.lang.String: java.lang.String substring(int,int)>(0, i0)\", \"$r13 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r13.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"does not contain subtype after \\'/\\'\")\", \"throw $r13\", \"r1 = virtualinvoke r29.<java.lang.String: java.lang.String substring(int,int)>(0, i0)\", \"$i4 = i0 + 1\", \"$i5 = virtualinvoke r29.<java.lang.String: int length()>()\", \"r2 = virtualinvoke r29.<java.lang.String: java.lang.String substring(int,int)>($i4, $i5)\", \"$r6 = \"*\"\", \"$z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1)\", \"if $z3 == 0 goto r30 = null\", \"$r11 = \"*\"\", \"$z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2)\", \"if $z4 != 0 goto r30 = null\", \"$r12 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r12.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"wildcard type is legal only in \\'*/*\\' (all mime types)\")\", \"throw $r12\", \"r30 = null\", \"i11 = i10 + 1\", \"z5 = 0\", \"$i12 = virtualinvoke r0.<java.lang.String: int length()>()\", \"if i11 >= $i12 goto $i6 = i10 + 1\", \"c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)\", \"if c13 != 59 goto (branch)\", \"if z5 != 0 goto i11 = i11 + 1\", \"goto [?= $i6 = i10 + 1]\", \"if c13 != 34 goto i11 = i11 + 1\", \"if z5 != 0 goto $z6 = 0\", \"$z6 = 1\", \"goto [?= z5 = $z6]\", \"$z6 = 0\", \"z5 = $z6\", \"i11 = i11 + 1\", \"goto [?= $i12 = virtualinvoke r0.<java.lang.String: int length()>()]\", \"$i6 = i10 + 1\", \"$r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i6, i11)\", \"r31 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>()\", \"$i7 = virtualinvoke r31.<java.lang.String: int length()>()\", \"if $i7 <= 0 goto i10 = i11\", \"if r30 != null goto i1 = virtualinvoke r31.<java.lang.String: int indexOf(int)>(61)\", \"$r10 = new java.util.LinkedHashMap\", \"specialinvoke $r10.<java.util.LinkedHashMap: void <init>(int)>(4)\", \"r30 = $r10\", \"i1 = virtualinvoke r31.<java.lang.String: int indexOf(int)>(61)\", \"if i1 < 0 goto i10 = i11\", \"r3 = virtualinvoke r31.<java.lang.String: java.lang.String substring(int,int)>(0, i1)\", \"$i8 = i1 + 1\", \"$i9 = virtualinvoke r31.<java.lang.String: int length()>()\", \"r4 = virtualinvoke r31.<java.lang.String: java.lang.String substring(int,int)>($i8, $i9)\", \"interfaceinvoke r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4)\", \"i10 = i11\", \"$i14 = virtualinvoke r0.<java.lang.String: int length()>()\", \"if i11 < $i14 goto i11 = i10 + 1\", \"$r8 = new org.springframework.util.MimeType\", \"specialinvoke $r8.<org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>(r1, r2, r30)\", \"return $r8\", \"$r17 := @caughtexception\", \"$r18 = new org.springframework.util.InvalidMimeTypeException\", \"$r19 = new java.lang.StringBuilder\", \"specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unsupported charset \\'\")\", \"$r21 = virtualinvoke $r17.<java.nio.charset.UnsupportedCharsetException: java.lang.String getCharsetName()>()\", \"$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)\", \"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\'\")\", \"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r18.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, $r24)\", \"throw $r18\", \"$r25 := @caughtexception\", \"$r26 = new org.springframework.util.InvalidMimeTypeException\", \"$r27 = virtualinvoke $r25.<java.lang.IllegalArgumentException: java.lang.String getMessage()>()\", \"specialinvoke $r26.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, $r27)\", \"throw $r26\"],\"<clinit>.66\":[\"$r1 = new java.util.Random\", \"specialinvoke $r1.<java.util.Random: void <init>()>()\", \"<org.springframework.util.MimeTypeUtils: java.util.Random RND> = $r1\"],\"<clinit>.71\":[\"$r3 = new org.springframework.util.MimeType$SpecificityComparator\", \"specialinvoke $r3.<org.springframework.util.MimeType$SpecificityComparator: void <init>()>()\", \"<org.springframework.util.MimeTypeUtils: java.util.Comparator SPECIFICITY_COMPARATOR> = $r3\", \"$r4 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"*/*\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType ALL> = $r4\", \"$r5 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/atom+xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_ATOM_XML> = $r5\", \"$r6 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/x-www-form-urlencoded\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_FORM_URLENCODED> = $r6\", \"$r7 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/json\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_JSON> = $r7\", \"$r8 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/octet-stream\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_OCTET_STREAM> = $r8\", \"$r9 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/xhtml+xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_XHTML_XML> = $r9\", \"$r10 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_XML> = $r10\", \"$r11 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/gif\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_GIF> = $r11\", \"$r12 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/jpeg\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_JPEG> = $r12\", \"$r13 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/png\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_PNG> = $r13\", \"$r14 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"multipart/form-data\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType MULTIPART_FORM_DATA> = $r14\", \"$r15 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/html\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_HTML> = $r15\", \"$r16 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/plain\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_PLAIN> = $r16\", \"$r17 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_XML> = $r17\"]},\"rhs\" : {\"parseMimeType.2\":[\"if $z0 != 0 goto r1 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r0, \";\")\", \"r34 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r34.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"\\'mimeType\\' must not be empty\")\", \"r44 = (java.lang.Throwable) r34\", \"throw r44\", \"r1 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r0, \";\")\", \"$i2 = lengthof r1\", \"if $i2 != 0 goto $r7 = r1[0]\", \"r35 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r35.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"\\'mimeType\\' must not be empty\")\", \"r45 = (java.lang.Throwable) r35\", \"throw r45\", \"$r7 = r1[0]\", \"r30 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>()\", \"$r8 = \"*\"\", \"$z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r30)\", \"if $z1 == 0 goto i0 = virtualinvoke r30.<java.lang.String: int indexOf(int)>(47)\", \"r30 = \"*/*\"\", \"i0 = virtualinvoke r30.<java.lang.String: int indexOf(int)>(47)\", \"if i0 != -1 goto $i3 = virtualinvoke r30.<java.lang.String: int length()>()\", \"r36 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r36.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"does not contain \\'/\\'\")\", \"r46 = (java.lang.Throwable) r36\", \"throw r46\", \"$i3 = virtualinvoke r30.<java.lang.String: int length()>()\", \"$i4 = $i3 - 1\", \"if i0 != $i4 goto r2 = virtualinvoke r30.<java.lang.String: java.lang.String substring(int,int)>(0, i0)\", \"r37 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r37.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"does not contain subtype after \\'/\\'\")\", \"r47 = (java.lang.Throwable) r37\", \"throw r47\", \"r2 = virtualinvoke r30.<java.lang.String: java.lang.String substring(int,int)>(0, i0)\", \"$i5 = i0 + 1\", \"$i6 = virtualinvoke r30.<java.lang.String: int length()>()\", \"r3 = virtualinvoke r30.<java.lang.String: java.lang.String substring(int,int)>($i5, $i6)\", \"$r9 = \"*\"\", \"$z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2)\", \"if $z2 == 0 goto r31 = null\", \"$r13 = \"*\"\", \"$z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r3)\", \"if $z3 != 0 goto r31 = null\", \"r38 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r38.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"wildcard type is legal only in \\'*/*\\' (all mime types)\")\", \"r48 = (java.lang.Throwable) r38\", \"throw r48\", \"r31 = null\", \"$i7 = lengthof r1\", \"if $i7 <= 1 goto r40 = new org.springframework.util.MimeType\", \"r39 = new java.util.LinkedHashMap\", \"$i8 = lengthof r1\", \"$i9 = $i8 - 1\", \"specialinvoke r39.<java.util.LinkedHashMap: void <init>(int)>($i9)\", \"r31 = r39\", \"i13 = 1\", \"$i10 = lengthof r1\", \"if i13 >= $i10 goto r40 = new org.springframework.util.MimeType\", \"r4 = r1[i13]\", \"i1 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(61)\", \"if i1 == -1 goto i13 = i13 + 1\", \"r5 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i1)\", \"$i11 = i1 + 1\", \"$i12 = virtualinvoke r4.<java.lang.String: int length()>()\", \"r6 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>($i11, $i12)\", \"interfaceinvoke r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6)\", \"i13 = i13 + 1\", \"goto [?= $i10 = lengthof r1]\", \"r40 = new org.springframework.util.MimeType\", \"specialinvoke r40.<org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>(r2, r3, r31)\", \"return r40\", \"$r19 := @caughtexception\", \"r42 = new org.springframework.util.InvalidMimeTypeException\", \"r41 = new java.lang.StringBuilder\", \"specialinvoke r41.<java.lang.StringBuilder: void <init>()>()\", \"$r22 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unsupported charset \\'\")\", \"$r23 = virtualinvoke $r19.<java.nio.charset.UnsupportedCharsetException: java.lang.String getCharsetName()>()\", \"$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\'\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke r42.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, $r26)\", \"r49 = (java.lang.Throwable) r42\", \"throw r49\", \"$r27 := @caughtexception\", \"r43 = new org.springframework.util.InvalidMimeTypeException\", \"$r29 = virtualinvoke $r27.<java.lang.IllegalArgumentException: java.lang.String getMessage()>()\", \"specialinvoke r43.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, $r29)\", \"r50 = (java.lang.Throwable) r43\", \"throw r50\"],\"<clinit>.66\":[\"r18 = new java.util.Random\", \"specialinvoke r18.<java.util.Random: void <init>()>()\", \"<org.springframework.util.MimeTypeUtils: java.util.Random RND> = r18\"],\"<clinit>.71\":[\"$r3 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"*/*\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType ALL> = $r3\", \"$r4 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/atom+xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_ATOM_XML> = $r4\", \"$r5 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/x-www-form-urlencoded\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_FORM_URLENCODED> = $r5\", \"$r6 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/json\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_JSON> = $r6\", \"$r7 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/octet-stream\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_OCTET_STREAM> = $r7\", \"$r8 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/xhtml+xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_XHTML_XML> = $r8\", \"$r9 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_XML> = $r9\", \"$r10 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/gif\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_GIF> = $r10\", \"$r11 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/jpeg\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_JPEG> = $r11\", \"$r12 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/png\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_PNG> = $r12\", \"$r13 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"multipart/form-data\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType MULTIPART_FORM_DATA> = $r13\", \"$r14 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/html\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_HTML> = $r14\", \"$r15 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/plain\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_PLAIN> = $r15\", \"$r16 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_XML> = $r16\", \"r19 = new org.springframework.util.MimeType$SpecificityComparator\", \"specialinvoke r19.<org.springframework.util.MimeType$SpecificityComparator: void <init>()>()\", \"r20 = (java.util.Comparator) r19\", \"<org.springframework.util.MimeTypeUtils: java.util.Comparator SPECIFICITY_COMPARATOR> = r20\"]}}",
            "qname": "org.springframework.util.MimeTypeUtils",
            "commit": "ab2410c754b67902f002bfcc0c3895bd7772d39"
        },
        {
            "ref_file": "/data4/test_compare_script/e02ff3a0da50744b0980d5d665fd242eedea767/org/springframework/util/MimeTypeUtils.class",
            "affectedFile": "/org/springframework/util/MimeTypeUtils.class",
            "contained": true,
            "diff": "{\"lhs\" : {\"US_ASCII\":null,\"APPLICATION_ATOM_XML\":null,\"APPLICATION_ATOM_XML_VALUE\":null,\"APPLICATION_FORM_URLENCODED\":null,\"APPLICATION_FORM_URLENCODED_VALUE\":null,\"APPLICATION_XHTML_XML\":null,\"APPLICATION_XHTML_XML_VALUE\":null,\"MULTIPART_FORM_DATA\":null,\"MULTIPART_FORM_DATA_VALUE\":null,\"parseMimeType.2\":[\"if $z0 != 0 goto i10 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(59)\", \"$r16 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r16.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"\\'mimeType\\' must not be empty\")\", \"throw $r16\", \"i10 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(59)\", \"if i10 < 0 goto $r28 = r0\", \"$r28 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i10)\", \"goto [?= r29 = virtualinvoke $r28.<java.lang.String: java.lang.String trim()>()]\", \"$r28 = r0\", \"r29 = virtualinvoke $r28.<java.lang.String: java.lang.String trim()>()\", \"$z1 = virtualinvoke r29.<java.lang.String: boolean isEmpty()>()\", \"if $z1 == 0 goto $r5 = \"*\"\", \"$r15 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r15.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"\\'mimeType\\' must not be empty\")\", \"throw $r15\", \"$r5 = \"*\"\", \"$z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r29)\", \"if $z2 == 0 goto i0 = virtualinvoke r29.<java.lang.String: int indexOf(int)>(47)\", \"r29 = \"*/*\"\", \"i0 = virtualinvoke r29.<java.lang.String: int indexOf(int)>(47)\", \"if i0 != -1 goto $i2 = virtualinvoke r29.<java.lang.String: int length()>()\", \"$r14 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r14.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"does not contain \\'/\\'\")\", \"throw $r14\", \"$i2 = virtualinvoke r29.<java.lang.String: int length()>()\", \"$i3 = $i2 - 1\", \"if i0 != $i3 goto r1 = virtualinvoke r29.<java.lang.String: java.lang.String substring(int,int)>(0, i0)\", \"$r13 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r13.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"does not contain subtype after \\'/\\'\")\", \"throw $r13\", \"r1 = virtualinvoke r29.<java.lang.String: java.lang.String substring(int,int)>(0, i0)\", \"$i4 = i0 + 1\", \"$i5 = virtualinvoke r29.<java.lang.String: int length()>()\", \"r2 = virtualinvoke r29.<java.lang.String: java.lang.String substring(int,int)>($i4, $i5)\", \"$r6 = \"*\"\", \"$z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1)\", \"if $z3 == 0 goto r30 = null\", \"$r11 = \"*\"\", \"$z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2)\", \"if $z4 != 0 goto r30 = null\", \"$r12 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r12.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"wildcard type is legal only in \\'*/*\\' (all mime types)\")\", \"throw $r12\", \"r30 = null\", \"i11 = i10 + 1\", \"z5 = 0\", \"$i12 = virtualinvoke r0.<java.lang.String: int length()>()\", \"if i11 >= $i12 goto $i6 = i10 + 1\", \"c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)\", \"if c13 != 59 goto (branch)\", \"if z5 != 0 goto i11 = i11 + 1\", \"goto [?= $i6 = i10 + 1]\", \"if c13 != 34 goto i11 = i11 + 1\", \"if z5 != 0 goto $z6 = 0\", \"$z6 = 1\", \"goto [?= z5 = $z6]\", \"$z6 = 0\", \"z5 = $z6\", \"i11 = i11 + 1\", \"goto [?= $i12 = virtualinvoke r0.<java.lang.String: int length()>()]\", \"$i6 = i10 + 1\", \"$r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i6, i11)\", \"r31 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>()\", \"$i7 = virtualinvoke r31.<java.lang.String: int length()>()\", \"if $i7 <= 0 goto i10 = i11\", \"if r30 != null goto i1 = virtualinvoke r31.<java.lang.String: int indexOf(int)>(61)\", \"$r10 = new java.util.LinkedHashMap\", \"specialinvoke $r10.<java.util.LinkedHashMap: void <init>(int)>(4)\", \"r30 = $r10\", \"i1 = virtualinvoke r31.<java.lang.String: int indexOf(int)>(61)\", \"if i1 < 0 goto i10 = i11\", \"r3 = virtualinvoke r31.<java.lang.String: java.lang.String substring(int,int)>(0, i1)\", \"$i8 = i1 + 1\", \"$i9 = virtualinvoke r31.<java.lang.String: int length()>()\", \"r4 = virtualinvoke r31.<java.lang.String: java.lang.String substring(int,int)>($i8, $i9)\", \"interfaceinvoke r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4)\", \"i10 = i11\", \"$i14 = virtualinvoke r0.<java.lang.String: int length()>()\", \"if i11 < $i14 goto i11 = i10 + 1\", \"$r8 = new org.springframework.util.MimeType\", \"specialinvoke $r8.<org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>(r1, r2, r30)\", \"return $r8\", \"$r17 := @caughtexception\", \"$r18 = new org.springframework.util.InvalidMimeTypeException\", \"$r19 = new java.lang.StringBuilder\", \"specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unsupported charset \\'\")\", \"$r21 = virtualinvoke $r17.<java.nio.charset.UnsupportedCharsetException: java.lang.String getCharsetName()>()\", \"$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)\", \"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\'\")\", \"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r18.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, $r24)\", \"throw $r18\", \"$r25 := @caughtexception\", \"$r26 = new org.springframework.util.InvalidMimeTypeException\", \"$r27 = virtualinvoke $r25.<java.lang.IllegalArgumentException: java.lang.String getMessage()>()\", \"specialinvoke $r26.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, $r27)\", \"throw $r26\"],\"sortBySpecificity.5\":\"interfaceinvoke r0.<java.util.List: void sort(java.util.Comparator)>($r1)\",\"generateMultipartBoundaryString.2\":\"$r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>\",\"<clinit>.66\":[\"$r1 = new java.util.Random\", \"specialinvoke $r1.<java.util.Random: void <init>()>()\", \"<org.springframework.util.MimeTypeUtils: java.util.Random RND> = $r1\", \"$r2 = new org.springframework.util.MimeType$SpecificityComparator\", \"specialinvoke $r2.<org.springframework.util.MimeType$SpecificityComparator: void <init>()>()\", \"<org.springframework.util.MimeTypeUtils: java.util.Comparator SPECIFICITY_COMPARATOR> = $r2\"],\"<clinit>.74\":[\"$r4 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/json\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_JSON> = $r4\", \"$r5 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/octet-stream\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_OCTET_STREAM> = $r5\", \"$r6 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_XML> = $r6\", \"$r7 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/gif\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_GIF> = $r7\", \"$r8 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/jpeg\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_JPEG> = $r8\", \"$r9 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/png\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_PNG> = $r9\", \"$r10 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/html\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_HTML> = $r10\", \"$r11 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/plain\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_PLAIN> = $r11\", \"$r12 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_XML> = $r12\"]},\"rhs\" : {\"US_ASCII\":\"<org.springframework.util.MimeTypeUtils: java.nio.charset.Charset US_ASCII>\",\"APPLICATION_ATOM_XML\":\"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_ATOM_XML>\",\"APPLICATION_ATOM_XML_VALUE\":\"<org.springframework.util.MimeTypeUtils: java.lang.String APPLICATION_ATOM_XML_VALUE>\",\"APPLICATION_FORM_URLENCODED\":\"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_FORM_URLENCODED>\",\"APPLICATION_FORM_URLENCODED_VALUE\":\"<org.springframework.util.MimeTypeUtils: java.lang.String APPLICATION_FORM_URLENCODED_VALUE>\",\"APPLICATION_XHTML_XML\":\"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_XHTML_XML>\",\"APPLICATION_XHTML_XML_VALUE\":\"<org.springframework.util.MimeTypeUtils: java.lang.String APPLICATION_XHTML_XML_VALUE>\",\"MULTIPART_FORM_DATA\":\"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType MULTIPART_FORM_DATA>\",\"MULTIPART_FORM_DATA_VALUE\":\"<org.springframework.util.MimeTypeUtils: java.lang.String MULTIPART_FORM_DATA_VALUE>\",\"parseMimeType.2\":[\"if $z0 != 0 goto r1 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r0, \";\")\", \"r34 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r34.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"\\'mimeType\\' must not be empty\")\", \"r44 = (java.lang.Throwable) r34\", \"throw r44\", \"r1 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r0, \";\")\", \"$i2 = lengthof r1\", \"if $i2 != 0 goto $r7 = r1[0]\", \"r35 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r35.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"\\'mimeType\\' must not be empty\")\", \"r45 = (java.lang.Throwable) r35\", \"throw r45\", \"$r7 = r1[0]\", \"r30 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>()\", \"$r8 = \"*\"\", \"$z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r30)\", \"if $z1 == 0 goto i0 = virtualinvoke r30.<java.lang.String: int indexOf(int)>(47)\", \"r30 = \"*/*\"\", \"i0 = virtualinvoke r30.<java.lang.String: int indexOf(int)>(47)\", \"if i0 != -1 goto $i3 = virtualinvoke r30.<java.lang.String: int length()>()\", \"r36 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r36.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"does not contain \\'/\\'\")\", \"r46 = (java.lang.Throwable) r36\", \"throw r46\", \"$i3 = virtualinvoke r30.<java.lang.String: int length()>()\", \"$i4 = $i3 - 1\", \"if i0 != $i4 goto r2 = virtualinvoke r30.<java.lang.String: java.lang.String substring(int,int)>(0, i0)\", \"r37 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r37.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"does not contain subtype after \\'/\\'\")\", \"r47 = (java.lang.Throwable) r37\", \"throw r47\", \"r2 = virtualinvoke r30.<java.lang.String: java.lang.String substring(int,int)>(0, i0)\", \"$i5 = i0 + 1\", \"$i6 = virtualinvoke r30.<java.lang.String: int length()>()\", \"r3 = virtualinvoke r30.<java.lang.String: java.lang.String substring(int,int)>($i5, $i6)\", \"$r9 = \"*\"\", \"$z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2)\", \"if $z2 == 0 goto r31 = null\", \"$r13 = \"*\"\", \"$z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r3)\", \"if $z3 != 0 goto r31 = null\", \"r38 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r38.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"wildcard type is legal only in \\'*/*\\' (all mime types)\")\", \"r48 = (java.lang.Throwable) r38\", \"throw r48\", \"r31 = null\", \"$i7 = lengthof r1\", \"if $i7 <= 1 goto r40 = new org.springframework.util.MimeType\", \"r39 = new java.util.LinkedHashMap\", \"$i8 = lengthof r1\", \"$i9 = $i8 - 1\", \"specialinvoke r39.<java.util.LinkedHashMap: void <init>(int)>($i9)\", \"r31 = r39\", \"i13 = 1\", \"$i10 = lengthof r1\", \"if i13 >= $i10 goto r40 = new org.springframework.util.MimeType\", \"r4 = r1[i13]\", \"i1 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(61)\", \"if i1 == -1 goto i13 = i13 + 1\", \"r5 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i1)\", \"$i11 = i1 + 1\", \"$i12 = virtualinvoke r4.<java.lang.String: int length()>()\", \"r6 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>($i11, $i12)\", \"interfaceinvoke r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6)\", \"i13 = i13 + 1\", \"goto [?= $i10 = lengthof r1]\", \"r40 = new org.springframework.util.MimeType\", \"specialinvoke r40.<org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>(r2, r3, r31)\", \"return r40\", \"$r19 := @caughtexception\", \"r42 = new org.springframework.util.InvalidMimeTypeException\", \"r41 = new java.lang.StringBuilder\", \"specialinvoke r41.<java.lang.StringBuilder: void <init>()>()\", \"$r22 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unsupported charset \\'\")\", \"$r23 = virtualinvoke $r19.<java.nio.charset.UnsupportedCharsetException: java.lang.String getCharsetName()>()\", \"$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)\", \"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\'\")\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke r42.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, $r26)\", \"r49 = (java.lang.Throwable) r42\", \"throw r49\", \"$r27 := @caughtexception\", \"r43 = new org.springframework.util.InvalidMimeTypeException\", \"$r29 = virtualinvoke $r27.<java.lang.IllegalArgumentException: java.lang.String getMessage()>()\", \"specialinvoke r43.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, $r29)\", \"r50 = (java.lang.Throwable) r43\", \"throw r50\"],\"sortBySpecificity.5\":\"staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r0, $r1)\",\"generateMultipartBoundaryString.2\":\"$r2 = <org.springframework.util.MimeTypeUtils: java.nio.charset.Charset US_ASCII>\",\"<clinit>.66\":[\"r18 = new java.util.Random\", \"specialinvoke r18.<java.util.Random: void <init>()>()\", \"<org.springframework.util.MimeTypeUtils: java.util.Random RND> = r18\", \"$r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"US-ASCII\")\", \"<org.springframework.util.MimeTypeUtils: java.nio.charset.Charset US_ASCII> = $r2\"],\"<clinit>.74\":[\"$r4 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/atom+xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_ATOM_XML> = $r4\", \"$r5 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/x-www-form-urlencoded\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_FORM_URLENCODED> = $r5\", \"$r6 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/json\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_JSON> = $r6\", \"$r7 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/octet-stream\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_OCTET_STREAM> = $r7\", \"$r8 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/xhtml+xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_XHTML_XML> = $r8\", \"$r9 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_XML> = $r9\", \"$r10 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/gif\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_GIF> = $r10\", \"$r11 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/jpeg\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_JPEG> = $r11\", \"$r12 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/png\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_PNG> = $r12\", \"$r13 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"multipart/form-data\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType MULTIPART_FORM_DATA> = $r13\", \"$r14 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/html\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_HTML> = $r14\", \"$r15 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/plain\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_PLAIN> = $r15\", \"$r16 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_XML> = $r16\", \"r19 = new org.springframework.util.MimeType$SpecificityComparator\", \"specialinvoke r19.<org.springframework.util.MimeType$SpecificityComparator: void <init>()>()\", \"r20 = (java.util.Comparator) r19\", \"<org.springframework.util.MimeTypeUtils: java.util.Comparator SPECIFICITY_COMPARATOR> = r20\"]}}",
            "qname": "org.springframework.util.MimeTypeUtils",
            "commit": "e02ff3a0da50744b0980d5d665fd242eedea767"
        }
    ],
    "vulnerable": false,
    "gav": {
        "artifactId": "spring-core",
        "version": "4.3.3.RELEASE",
        "groupId": "org.springframework"
    }
}