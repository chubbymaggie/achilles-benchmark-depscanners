{
    "vulnerable": true,
    "details": [
        {
            "diff": "{\"lhs\" : {\"next.6\":[\"$r7 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r7.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"Bad EOL\", null)\", \"throw $r7\"],\"next.18\":[\"$r5 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$i1 = virtualinvoke $r5.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"$r6 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"$i2 = virtualinvoke $r6.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\"],\"next.28\":[\"$r4 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r4.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"Bad EOL\", null)\", \"throw $r4\"],\"next.35\":[\"$r2 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r3 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"specialinvoke $r2.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r3, b5, r1, null)\", \"throw $r2\"],\"quickStart.58\":[\"$r11 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r11.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r11\"],\"quickStart.69\":[\"$r4 = new java.lang.StringBuilder\", \"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()\", \"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"padding is too large >\")\"],\"quickStart.77\":[\"$r10 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r10.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(400, null)\", \"throw $r10\"],\"parseLine.3\":[\"$r164 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$i70 = virtualinvoke $r164.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"$r165 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\", \"$i71 = virtualinvoke $r165.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\"],\"parseLine.21\":[\"$r142 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r141 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State URI>\", \"if $r142 != $r141 goto $r143 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"$r158 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"$r157 = new java.lang.StringBuilder\", \"specialinvoke $r157.<java.lang.StringBuilder: void <init>()>()\", \"$r159 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"parseLine.29\":[\"$r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i69)\", \"$r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r162 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r158.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r161, $r162)\", \"$r163 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r163.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(414, null)\", \"throw $r163\", \"$r143 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"if $r143 == null goto $r145 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"$r152 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"$r151 = new java.lang.StringBuilder\", \"specialinvoke $r151.<java.lang.StringBuilder: void <init>()>()\", \"$r153 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"request is too large >\")\"],\"parseLine.43\":[\"$r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i68)\", \"$r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r156 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r152.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r155, $r156)\", \"goto [?= $r150 = new org.eclipse.jetty.http.HttpParser$BadMessageException]\", \"$r145 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"$r144 = new java.lang.StringBuilder\", \"specialinvoke $r144.<java.lang.StringBuilder: void <init>()>()\", \"$r146 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"response is too large >\")\"],\"parseLine.53\":[\"$r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i67)\", \"$r148 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r149 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r145.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r148, $r149)\", \"$r150 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r150.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(413, null)\", \"throw $r150\"],\"parseLine.64\":[\"tableswitch($i3) {     case 1: goto if b0 != 32 goto (branch);     case 2: goto if b0 != 32 goto (branch);     case 3: goto if b0 > 32 goto $r90 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>;     case 4: goto if b0 != 32 goto (branch);     case 5: goto if b0 != 32 goto (branch);     case 6: goto if b0 <= 32 goto (branch);     case 7: goto if b0 != 10 goto (branch);     case 8: goto if b0 != 10 goto (branch);     default: goto $r138 = new java.lang.IllegalStateException; }\"],\"parseLine.66\":[\"$r132 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"$i63 = virtualinvoke $r132.<java.lang.StringBuilder: int length()>()\"],\"parseLine.69\":[\"$r133 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String takeString()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _methodString> = $r133\", \"$r135 = <org.eclipse.jetty.http.HttpMethod: org.eclipse.jetty.util.Trie CACHE>\", \"$r134 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _methodString>\", \"$r136 = interfaceinvoke $r135.<org.eclipse.jetty.util.Trie: java.lang.Object get(java.lang.String)>($r134)\", \"r166 = (org.eclipse.jetty.http.HttpMethod) $r136\", \"if r166 == null goto $r167 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State SPACE1>\"],\"parseLine.77\":[\"if $z14 != 0 goto $r167 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State SPACE1>\", \"$r137 = virtualinvoke r166.<org.eclipse.jetty.http.HttpMethod: java.lang.String asString()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _methodString> = $r137\", \"$r167 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State SPACE1>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r167)\"],\"parseLine.83\":[\"if b0 >= 32 goto $r127 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"if b0 != 10 goto $r129 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r131 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r131.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(\"No URI\", null)\", \"throw $r131\", \"$r129 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r130 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"specialinvoke $r129.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r130, b0, r1, null)\", \"throw $r129\", \"$r127 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\"],\"parseLine.94\":[\"virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c62)\"],\"parseLine.97\":[\"$r120 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"$i61 = virtualinvoke $r120.<java.lang.StringBuilder: int length()>()\"],\"parseLine.100\":[\"r168 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String takeString()>()\", \"$r121 = <org.eclipse.jetty.http.HttpVersion: org.eclipse.jetty.util.Trie CACHE>\", \"$r122 = interfaceinvoke $r121.<org.eclipse.jetty.util.Trie: java.lang.Object get(java.lang.String)>(r168)\", \"$r123 = (org.eclipse.jetty.http.HttpVersion) $r122\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpVersion _version> = $r123\", \"$r124 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpVersion _version>\", \"if $r124 != null goto $r125 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State SPACE1>\", \"$r126 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r126.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Unknown Version\", null)\", \"throw $r126\", \"$r125 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State SPACE1>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r125)\"],\"parseLine.114\":[\"$r118 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r119 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"specialinvoke $r118.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r119, b0, r1, null)\", \"throw $r118\"],\"parseLine.137\":[\"r169 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>()\"],\"parseLine.146\":[\"$b57 = r169[i74]\"],\"parseLine.162\":[\"$r105 = new java.lang.StringBuilder\", \"specialinvoke $r105.<java.lang.StringBuilder: void <init>()>()\", \"$r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"parseLine.170\":[\"$r111 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r111.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(414, null)\", \"throw $r111\"],\"parseLine.180\":[\"r170 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i52)\"],\"parseLine.184\":[\"virtualinvoke r170.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r103)\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _uri> = r170\"],\"parseLine.189\":[\"virtualinvoke $r97.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(r169, $i47, $i46)\"],\"parseLine.198\":[\"$r114 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.200\":[\"if $r115 == null goto $r171 = \"No Status\"\", \"$r171 = \"No URI\"\", \"goto [?= specialinvoke $r114.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, $r171, null)]\", \"$r171 = \"No Status\"\", \"specialinvoke $r114.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, $r171, null)\", \"throw $r114\"],\"parseLine.218\":[\"if b0 >= 32 goto $r85 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"if b0 < 0 goto $r85 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.233\":[\"$r85 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r85.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r85\"],\"parseLine.279\":[\"r172 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i32)\"],\"parseLine.283\":[\"virtualinvoke r172.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r73)\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _uri> = r172\"],\"parseLine.314\":[\"r173 = staticinvoke <org.eclipse.jetty.http.HttpVersion: org.eclipse.jetty.http.HttpVersion lookAheadGet(byte[],int,int)>($r65, $i27, $i30)\"],\"parseLine.319\":[\"r173 = (org.eclipse.jetty.http.HttpVersion) $r48\", \"if r173 != null goto $i15 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>()\"],\"parseLine.327\":[\"$r64 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r64.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r64\"],\"parseLine.333\":[\"r174 = staticinvoke <org.eclipse.jetty.util.BufferUtil: java.lang.String toString(java.nio.ByteBuffer)>($r59)\"],\"parseLine.337\":[\"r175 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String getProxyField(java.nio.ByteBuffer)>(r1)\", \"r176 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String getProxyField(java.nio.ByteBuffer)>(r1)\"],\"parseLine.347\":[\"interfaceinvoke $r63.<org.eclipse.jetty.http.HttpParser$ProxyHandler: void proxied(java.lang.String,java.lang.String,java.lang.String,int,int)>(r174, r175, r176, i76, i77)\"],\"parseLine.350\":[\"$r49 = virtualinvoke r173.<org.eclipse.jetty.http.HttpVersion: java.lang.String asString()>()\"],\"parseLine.359\":[\"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpVersion _version> = r173\"],\"parseLine.366\":[\"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpVersion _version> = r173\"],\"parseLine.419\":[\"$r28 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r28.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r28\"],\"parseLine.435\":[\"$r22 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r22.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Unknown Version\", null)\", \"throw $r22\"],\"parseLine.439\":[\"if $r16 != null goto $r177 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\"],\"parseLine.444\":[\"if $i8 < $i9 goto $r177 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\"],\"parseLine.447\":[\"$r21 = new org.eclipse.jetty.util.ArrayTernaryTrie\", \"specialinvoke $r21.<org.eclipse.jetty.util.ArrayTernaryTrie: void <init>(int)>(i80)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields> = $r21\", \"$r177 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r177)\", \"$r178 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _uri>\", \"virtualinvoke $r178.<java.nio.ByteBuffer: java.nio.Buffer flip()>()\", \"$r179 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"$r180 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpMethod _method>\", \"$r181 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _methodString>\", \"$r182 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _uri>\", \"$r183 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpVersion _version>\", \"$z28 = interfaceinvoke $r179.<org.eclipse.jetty.http.HttpParser$RequestHandler: boolean startRequest(org.eclipse.jetty.http.HttpMethod,java.lang.String,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpVersion)>($r180, $r181, $r182, $r183)\"],\"parseLine.466\":[\"goto [?= $r164 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>]\", \"if b0 < 32 goto $r11 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.472\":[\"$r11 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r11.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r11\"],\"parseLine.476\":[\"r184 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String takeString()>()\"],\"parseLine.482\":[\"$z1 = interfaceinvoke $r10.<org.eclipse.jetty.http.HttpParser$ResponseHandler: boolean startResponse(org.eclipse.jetty.http.HttpVersion,int,java.lang.String)>($r9, $i6, r184)\"],\"parseLine.489\":[\"goto [?= $r164 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>]\", \"if b0 < 32 goto $r4 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"parseLine.500\":[\"$r4 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r4.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r4\", \"$r138 = new java.lang.IllegalStateException\", \"$r139 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r140 = virtualinvoke $r139.<org.eclipse.jetty.http.HttpParser$State: java.lang.String toString()>()\", \"specialinvoke $r138.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r140)\", \"throw $r138\", \"goto [?= $r164 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>]\"],\"handleKnownHeaders.18\":[\"$r44 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r44.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad Content-Length\", null)\", \"throw $r44\"],\"handleKnownHeaders.49\":[\"$r31 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r31.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad chunking\", null)\", \"throw $r31\"],\"handleKnownHeaders.63\":[\"if r46 == null goto $r18 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"handleKnownHeaders.66\":[\"$r18 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r18.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad Host header\", null)\", \"throw $r18\"],\"handleKnownHeaders.86\":[\"if $z6 == 0 goto $r40 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"handleKnownHeaders.89\":[\"$r40 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r40.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad Host header\", null)\", \"throw $r40\"],\"handleKnownHeaders.98\":[\"$r20 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r20.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"Bad IPv6 Host header\", null)\", \"throw $r20\"],\"handleKnownHeaders.136\":[\"$r9 = new org.eclipse.jetty.http.HttpField\"],\"handleKnownHeaders.139\":[\"specialinvoke $r9.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)>($r11, $r10)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field> = $r9\"],\"parseHeaders.21\":[\"$r91 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"$r90 = new java.lang.StringBuilder\", \"specialinvoke $r90.<java.lang.StringBuilder: void <init>()>()\", \"$r92 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Header is too large >\")\"],\"parseHeaders.26\":[\"$r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i49)\", \"$r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r95 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r91.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r94, $r95)\", \"$r96 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r96.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,org.eclipse.jetty.http.HttpParser$1)>(413, null)\", \"throw $r96\"],\"parseHeaders.37\":[\"tableswitch($i5) {     case 9: goto lookupswitch(b0) {     case 9: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 32: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 58: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r45 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>; };     case 10: goto if b0 == 58 goto $r26 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>;     case 11: goto if b0 > 32 goto $r13 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>;     case 12: goto if b0 >= 32 goto $r112 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r87 = new java.lang.IllegalStateException; }\", \"lookupswitch(b0) {     case 9: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 32: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 58: goto $r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r45 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>; }\", \"$r40 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if $r40 != null goto $r41 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r44 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"virtualinvoke $r44.<java.lang.StringBuilder: void setLength(int)>(0)\"],\"parseHeaders.44\":[\"goto [?= $r43 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_VALUE>]\", \"$r41 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"specialinvoke r0.<org.eclipse.jetty.http.HttpParser: void setString(java.lang.String)>($r41)\", \"$r42 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)\"],\"parseHeaders.53\":[\"$r43 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_VALUE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r43)\"],\"parseHeaders.56\":[\"$r45 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>\", \"if $r45 != null goto $r46 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$r86 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if $r86 == null goto r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString> = null\", \"$r46 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"if $r46 == null goto $r51 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\"],\"parseHeaders.63\":[\"if $z10 == 0 goto $r51 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\"],\"parseHeaders.70\":[\"$r51 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"if $r47 == null goto $r97 = new org.eclipse.jetty.http.HttpField\", \"$r97 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"goto [?= $z1 = interfaceinvoke $r51.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean parsedHeader(org.eclipse.jetty.http.HttpField)>($r97)]\", \"$r97 = new org.eclipse.jetty.http.HttpField\", \"$r50 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$r49 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>\", \"$r48 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"specialinvoke $r97.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r50, $r49, $r48)\", \"$z1 = interfaceinvoke $r51.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean parsedHeader(org.eclipse.jetty.http.HttpField)>($r97)\"],\"parseHeaders.95\":[\"if $z4 != 0 goto $r98 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>\", \"$r83 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpVersion _version>\", \"$r82 = <org.eclipse.jetty.http.HttpVersion: org.eclipse.jetty.http.HttpVersion HTTP_1_1>\", \"if $r83 != $r82 goto $r98 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>\", \"$r84 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"if $r84 == null goto $r98 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>\", \"$r85 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r85.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(int,java.lang.String,org.eclipse.jetty.http.HttpParser$1)>(400, \"No Host\", null)\", \"throw $r85\", \"$r98 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>\", \"if $r98 == null goto $r71 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>\"],\"parseHeaders.107\":[\"if $i43 == 304 goto $r99 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\"],\"parseHeaders.109\":[\"if $i44 == 204 goto $r99 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\"],\"parseHeaders.111\":[\"if $i45 >= 200 goto $r71 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>\", \"$r99 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r99\", \"goto [?= $r101 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>]\", \"$r71 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>\", \"$r70 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent UNKNOWN_CONTENT>\", \"if $r71 != $r70 goto $r101 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>\"],\"parseHeaders.119\":[\"if $i39 == 0 goto $r100 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\"],\"parseHeaders.121\":[\"if $i40 == 304 goto $r100 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\"],\"parseHeaders.123\":[\"if $i41 == 204 goto $r100 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\"],\"parseHeaders.125\":[\"if $i42 >= 200 goto $r81 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent EOF_CONTENT>\", \"$r100 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r100\", \"goto [?= $r101 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>]\", \"$r81 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent EOF_CONTENT>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r81\", \"$r101 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>\", \"$r102 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>\", \"$i50 = virtualinvoke $r102.<org.eclipse.jetty.http.HttpTokens$EndOfContent: int ordinal()>()\", \"$i51 = $r101[$i50]\", \"tableswitch($i51) {     case 1: goto $r77 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State EOF_CONTENT>;     case 2: goto $r75 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNKED_CONTENT>;     case 3: goto $r72 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>;     default: goto $r79 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CONTENT>; }\", \"$r77 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State EOF_CONTENT>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r77)\", \"$r78 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z8 = interfaceinvoke $r78.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean headerComplete()>()\"],\"parseHeaders.147\":[\"$r75 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNKED_CONTENT>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r75)\", \"$r76 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z7 = interfaceinvoke $r76.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean headerComplete()>()\"],\"parseHeaders.158\":[\"$r72 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z5 = interfaceinvoke $r72.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean headerComplete()>()\"],\"parseHeaders.163\":[\"goto [?= $r73 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>]\"],\"parseHeaders.165\":[\"$r73 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r73)\", \"$r74 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z6 = interfaceinvoke $r74.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\"],\"parseHeaders.176\":[\"$r79 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CONTENT>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r79)\", \"$r80 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z9 = interfaceinvoke $r80.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean headerComplete()>()\"],\"parseHeaders.188\":[\"$r69 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r69.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r69\"],\"parseHeaders.192\":[\"if $z2 == 0 goto $r52 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_IN_NAME>\", \"$r55 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"if $r55 != null goto $r56 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"$r103 = null\", \"goto [?= r104 = $r103]\", \"$r56 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\"],\"parseHeaders.199\":[\"$r57 = interfaceinvoke $r56.<org.eclipse.jetty.util.Trie: java.lang.Object getBest(java.nio.ByteBuffer,int,int)>(r1, -1, $i19)\", \"$r103 = (org.eclipse.jetty.http.HttpField) $r57\", \"r104 = $r103\", \"if $r103 != null goto (branch)\", \"$r67 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie CACHE>\"],\"parseHeaders.205\":[\"$r68 = interfaceinvoke $r67.<org.eclipse.jetty.util.Trie: java.lang.Object getBest(java.nio.ByteBuffer,int,int)>(r1, -1, $i38)\", \"r104 = (org.eclipse.jetty.http.HttpField) $r68\", \"if r104 == null goto $r52 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_IN_NAME>\"],\"parseHeaders.209\":[\"if $z3 == 0 goto r107 = virtualinvoke r104.<org.eclipse.jetty.http.HttpField: java.lang.String getName()>()\", \"r105 = virtualinvoke r104.<org.eclipse.jetty.http.HttpField: java.lang.String getName()>()\", \"r106 = virtualinvoke r104.<org.eclipse.jetty.http.HttpField: java.lang.String getValue()>()\"],\"parseHeaders.214\":[\"$i32 = virtualinvoke r105.<java.lang.String: int length()>()\", \"$r63 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>\", \"r107 = staticinvoke <org.eclipse.jetty.util.BufferUtil: java.lang.String toString(java.nio.ByteBuffer,int,int,java.nio.charset.Charset)>(r1, $i31, $i32, $r63)\", \"if r106 != null goto $i33 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>()\", \"r108 = null\"],\"parseHeaders.221\":[\"$i34 = virtualinvoke r105.<java.lang.String: int length()>()\"],\"parseHeaders.224\":[\"$i37 = virtualinvoke r106.<java.lang.String: int length()>()\", \"$r64 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset ISO_8859_1>\", \"r108 = staticinvoke <org.eclipse.jetty.util.BufferUtil: java.lang.String toString(java.nio.ByteBuffer,int,int,java.nio.charset.Charset)>(r1, $i36, $i37, $r64)\", \"$r65 = new org.eclipse.jetty.http.HttpField\", \"$r66 = virtualinvoke r104.<org.eclipse.jetty.http.HttpField: org.eclipse.jetty.http.HttpHeader getHeader()>()\", \"specialinvoke $r65.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r66, r107, r108)\", \"r104 = $r65\", \"goto [?= $r58 = virtualinvoke r104.<org.eclipse.jetty.http.HttpField: org.eclipse.jetty.http.HttpHeader getHeader()>()]\", \"r107 = virtualinvoke r104.<org.eclipse.jetty.http.HttpField: java.lang.String getName()>()\", \"r108 = virtualinvoke r104.<org.eclipse.jetty.http.HttpField: java.lang.String getValue()>()\", \"$r58 = virtualinvoke r104.<org.eclipse.jetty.http.HttpField: org.eclipse.jetty.http.HttpHeader getHeader()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header> = $r58\", \"r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString> = r107\", \"if r108 != null goto $i20 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>()\", \"$r61 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_VALUE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r61)\", \"$r62 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"virtualinvoke $r62.<java.lang.StringBuilder: void setLength(int)>(0)\"],\"parseHeaders.244\":[\"$i27 = virtualinvoke r107.<java.lang.String: int length()>()\"],\"parseHeaders.250\":[\"$i21 = virtualinvoke r107.<java.lang.String: int length()>()\"],\"parseHeaders.252\":[\"$i23 = virtualinvoke r108.<java.lang.String: int length()>()\"],\"parseHeaders.256\":[\"if b53 == 13 goto r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field> = r104\", \"if b53 != 10 goto $r60 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_IN_VALUE>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field> = r104\", \"r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString> = r108\", \"$r59 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_IN_VALUE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r59)\"],\"parseHeaders.269\":[\"$r60 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_IN_VALUE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r60)\", \"specialinvoke r0.<org.eclipse.jetty.http.HttpParser: void setString(java.lang.String)>(r108)\"],\"parseHeaders.274\":[\"$r52 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_IN_NAME>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r52)\", \"$r53 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"virtualinvoke $r53.<java.lang.StringBuilder: void setLength(int)>(0)\", \"$r54 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\"],\"parseHeaders.280\":[\"virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c18)\"],\"parseHeaders.283\":[\"if b0 == 58 goto $r26 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>\"],\"parseHeaders.285\":[\"$r26 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>\", \"if $r26 != null goto r0.<org.eclipse.jetty.http.HttpParser: int _length> = -1\", \"$r28 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String takeString()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString> = $r28\", \"$r30 = <org.eclipse.jetty.http.HttpHeader: org.eclipse.jetty.util.Trie CACHE>\", \"$r29 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>\", \"$r31 = interfaceinvoke $r30.<org.eclipse.jetty.util.Trie: java.lang.Object get(java.lang.String)>($r29)\", \"$r32 = (org.eclipse.jetty.http.HttpHeader) $r31\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header> = $r32\"],\"parseHeaders.295\":[\"if b0 != 10 goto $r109 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_VALUE>\", \"$r109 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\", \"goto [?= virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r109)]\", \"$r109 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_VALUE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r109)\"],\"parseHeaders.301\":[\"if b0 >= 32 goto $r33 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"if b0 != 9 goto $r38 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r33 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"if $r33 == null goto $r34 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"$r36 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$r37 = virtualinvoke $r36.<org.eclipse.jetty.http.HttpHeader: java.lang.String asString()>()\", \"specialinvoke r0.<org.eclipse.jetty.http.HttpParser: void setString(java.lang.String)>($r37)\"],\"parseHeaders.310\":[\"$r34 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\"],\"parseHeaders.312\":[\"virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c14)\"],\"parseHeaders.314\":[\"$r35 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"$i15 = virtualinvoke $r35.<java.lang.StringBuilder: int length()>()\"],\"parseHeaders.318\":[\"$r38 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r39 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"specialinvoke $r38.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r39, b0, r1, null)\", \"throw $r38\", \"if b0 > 32 goto $r13 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\"],\"parseHeaders.324\":[\"$r13 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\"],\"parseHeaders.327\":[\"virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c11)\", \"$r14 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"$i12 = virtualinvoke $r14.<java.lang.StringBuilder: int length()>()\"],\"parseHeaders.331\":[\"$r15 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_IN_VALUE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r15)\"],\"parseHeaders.337\":[\"if b0 != 10 goto $r16 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.339\":[\"if $i13 <= 0 goto $r111 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\"],\"parseHeaders.341\":null,\"parseHeaders.342\":[\"if $r18 != null goto $r19 = new java.lang.StringBuilder\", \"$r110 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String takeString()>()\", \"goto [?= r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString> = $r110]\", \"$r19 = new java.lang.StringBuilder\", \"specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()\", \"$r20 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")\", \"$r23 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String takeString()>()\", \"$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)\", \"$r110 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString> = $r110\", \"$r111 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r111)\"],\"parseHeaders.357\":[\"$r16 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r17 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"specialinvoke $r16.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r17, b0, r1, null)\", \"throw $r16\", \"if b0 >= 32 goto $r112 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if b0 < 0 goto $r112 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\"],\"parseHeaders.364\":[\"$r112 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if $r112 == null goto $r6 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\"],\"parseHeaders.380\":[\"if b0 != 10 goto $r9 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\"],\"parseHeaders.382\":[\"if $i9 <= 0 goto $r11 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\"],\"parseHeaders.384\":[\"$r12 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String takeString()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString> = $r12\"],\"parseHeaders.387\":[\"$r11 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r11)\"],\"parseHeaders.390\":[\"$r9 = new org.eclipse.jetty.http.HttpParser$IllegalCharacterException\", \"$r10 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"specialinvoke $r9.<org.eclipse.jetty.http.HttpParser$IllegalCharacterException: void <init>(org.eclipse.jetty.http.HttpParser$State,byte,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpParser$1)>($r10, b0, r1, null)\", \"throw $r9\", \"$r87 = new java.lang.IllegalStateException\", \"$r88 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r89 = virtualinvoke $r88.<org.eclipse.jetty.http.HttpParser$State: java.lang.String toString()>()\", \"specialinvoke $r87.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r89)\", \"throw $r87\"],\"parseNext.97\":[\"$r22 = new java.lang.IllegalStateException\", \"specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"too much data after closed\")\", \"throw $r22\"],\"parseNext.141\":null,\"parseNext.144\":[\"$r37 = new java.lang.StringBuilder\", \"specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()\", \"$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\", \"$i21 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessageException: int access$500(org.eclipse.jetty.http.HttpParser$BadMessageException)>($r36)\", \"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21)\", \"$r41 = virtualinvoke $r36.<org.eclipse.jetty.http.HttpParser$BadMessageException: java.lang.String getMessage()>()\", \"if $r41 == null goto $r81 = \"\"\", \"$r52 = new java.lang.StringBuilder\", \"specialinvoke $r52.<java.lang.StringBuilder: void <init>()>()\", \"$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")\", \"$r54 = virtualinvoke $r36.<org.eclipse.jetty.http.HttpParser$BadMessageException: java.lang.String getMessage()>()\", \"$r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)\", \"$r81 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)]\", \"$r81 = \"\"\", \"$r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)\", \"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")\", \"$r44 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r44)\", \"$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r47 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r38.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r46, $r47)\"],\"parseNext.167\":[\"if $z11 == 0 goto $r48 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"$r51 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r51.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r36)\", \"$r48 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r48)\"],\"parseNext.173\":[\"$i22 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessageException: int access$500(org.eclipse.jetty.http.HttpParser$BadMessageException)>($r36)\", \"$r50 = virtualinvoke $r36.<org.eclipse.jetty.http.HttpParser$BadMessageException: java.lang.String getMessage()>()\", \"interfaceinvoke $r49.<org.eclipse.jetty.http.HttpParser$HttpHandler: void badMessage(int,java.lang.String)>($i22, $r50)\"],\"parseNext.177\":[\"$r56 := @caughtexception\", \"staticinvoke <org.eclipse.jetty.util.BufferUtil: void clear(java.nio.ByteBuffer)>(r1)\", \"$r58 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"$r57 = new java.lang.StringBuilder\", \"specialinvoke $r57.<java.lang.StringBuilder: void <init>()>()\", \"$r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\", \"$r60 = virtualinvoke $r56.<java.lang.Exception: java.lang.String toString()>()\", \"$r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60)\", \"$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")\", \"$r63 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r63)\", \"$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r66 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r58.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r65, $r66)\", \"$z12 = r0.<org.eclipse.jetty.http.HttpParser: boolean DEBUG>\", \"if $z12 == 0 goto $r67 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r73 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r73.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r56)\", \"$r67 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$i23 = virtualinvoke $r67.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"$r68 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"$i24 = virtualinvoke $r68.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"if $i23 > $i24 goto $r69 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r71 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r71)\", \"$r72 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"interfaceinvoke $r72.<org.eclipse.jetty.http.HttpParser$HttpHandler: void badMessage(int,java.lang.String)>(400, null)\", \"goto [?= return 0]\", \"$r69 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"interfaceinvoke $r69.<org.eclipse.jetty.http.HttpParser$HttpHandler: void earlyEOF()>()\", \"$r70 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r70)\", \"return 0\"],\"getProxyField.6\":[\"if $z0 == 0 goto $r3 = new org.eclipse.jetty.http.HttpParser$BadMessageException\"],\"getProxyField.16\":[\"$r3 = new org.eclipse.jetty.http.HttpParser$BadMessageException\", \"specialinvoke $r3.<org.eclipse.jetty.http.HttpParser$BadMessageException: void <init>(org.eclipse.jetty.http.HttpParser$1)>(null)\", \"throw $r3\"],\"access$200\":null},\"rhs\" : {\"next.6\":[\"r7 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r7.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(java.lang.String)>(\"Bad EOL\")\", \"r10 = (java.lang.Throwable) r7\", \"throw r10\"],\"next.18\":[\"$r4 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$i1 = virtualinvoke $r4.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"$r5 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"$i2 = virtualinvoke $r5.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\"],\"next.28\":[\"r8 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r8.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(java.lang.String)>(\"Bad EOL\")\", \"r11 = (java.lang.Throwable) r8\", \"throw r11\"],\"next.35\":[\"r9 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r9.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b5, r1)\", \"r12 = (java.lang.Throwable) r9\", \"throw r12\"],\"quickStart.58\":[\"r33 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r33.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r36 = (java.lang.Throwable) r33\", \"throw r36\"],\"quickStart.69\":[\"r34 = new java.lang.StringBuilder\", \"specialinvoke r34.<java.lang.StringBuilder: void <init>()>()\", \"$r6 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"padding is too large >\")\"],\"quickStart.77\":[\"r35 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r35.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(400)\", \"r37 = (java.lang.Throwable) r35\", \"throw r37\"],\"parseLine.3\":[\"$r162 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$i70 = virtualinvoke $r162.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"$r163 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\", \"$i71 = virtualinvoke $r163.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\"],\"parseLine.21\":[\"$r140 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r139 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State URI>\", \"if $r140 != $r139 goto $r141 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"$r156 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"r183 = new java.lang.StringBuilder\", \"specialinvoke r183.<java.lang.StringBuilder: void <init>()>()\", \"$r157 = virtualinvoke r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"parseLine.29\":[\"$r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i69)\", \"$r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r160 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r156.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r159, $r160)\", \"r184 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r184.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(414)\", \"r203 = (java.lang.Throwable) r184\", \"throw r203\", \"$r141 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"if $r141 == null goto $r143 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"$r150 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"r185 = new java.lang.StringBuilder\", \"specialinvoke r185.<java.lang.StringBuilder: void <init>()>()\", \"$r151 = virtualinvoke r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"request is too large >\")\"],\"parseLine.43\":[\"$r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i68)\", \"$r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r154 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r150.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r153, $r154)\", \"goto [?= r187 = new org.eclipse.jetty.http.HttpParser$BadMessage]\", \"$r143 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"r186 = new java.lang.StringBuilder\", \"specialinvoke r186.<java.lang.StringBuilder: void <init>()>()\", \"$r144 = virtualinvoke r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"response is too large >\")\"],\"parseLine.53\":[\"$r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i67)\", \"$r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r147 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r143.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r146, $r147)\", \"r187 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r187.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(413)\", \"r204 = (java.lang.Throwable) r187\", \"throw r204\"],\"parseLine.64\":[\"tableswitch($i3) {     case 1: goto if b0 != 32 goto (branch);     case 2: goto if b0 != 32 goto (branch);     case 3: goto if b0 > 32 goto $r90 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>;     case 4: goto if b0 != 32 goto (branch);     case 5: goto if b0 != 32 goto (branch);     case 6: goto if b0 <= 32 goto (branch);     case 7: goto if b0 != 10 goto (branch);     case 8: goto if b0 != 10 goto (branch);     default: goto r202 = new java.lang.IllegalStateException; }\"],\"parseLine.66\":[\"$r130 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"$i63 = virtualinvoke $r130.<java.lang.StringBuilder: int length()>()\"],\"parseLine.69\":[\"$r131 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String takeString()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _methodString> = $r131\", \"$r133 = <org.eclipse.jetty.http.HttpMethod: org.eclipse.jetty.util.Trie CACHE>\", \"$r132 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _methodString>\", \"$r134 = interfaceinvoke $r133.<org.eclipse.jetty.util.Trie: java.lang.Object get(java.lang.String)>($r132)\", \"r164 = (org.eclipse.jetty.http.HttpMethod) $r134\", \"if r164 == null goto $r165 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State SPACE1>\"],\"parseLine.77\":[\"if $z14 != 0 goto $r165 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State SPACE1>\", \"$r135 = virtualinvoke r164.<org.eclipse.jetty.http.HttpMethod: java.lang.String asString()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _methodString> = $r135\", \"$r165 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State SPACE1>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r165)\"],\"parseLine.83\":[\"if b0 >= 32 goto $r126 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"if b0 != 10 goto r189 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"r188 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r188.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(java.lang.String)>(\"No URI\")\", \"r205 = (java.lang.Throwable) r188\", \"throw r205\", \"r189 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r189.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"r206 = (java.lang.Throwable) r189\", \"throw r206\", \"$r126 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\"],\"parseLine.94\":[\"virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c62)\"],\"parseLine.97\":[\"$r119 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"$i61 = virtualinvoke $r119.<java.lang.StringBuilder: int length()>()\"],\"parseLine.100\":[\"r166 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String takeString()>()\", \"$r120 = <org.eclipse.jetty.http.HttpVersion: org.eclipse.jetty.util.Trie CACHE>\", \"$r121 = interfaceinvoke $r120.<org.eclipse.jetty.util.Trie: java.lang.Object get(java.lang.String)>(r166)\", \"$r122 = (org.eclipse.jetty.http.HttpVersion) $r121\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpVersion _version> = $r122\", \"$r123 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpVersion _version>\", \"if $r123 != null goto $r124 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State SPACE1>\", \"r190 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r190.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Unknown Version\")\", \"r207 = (java.lang.Throwable) r190\", \"throw r207\", \"$r124 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State SPACE1>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r124)\"],\"parseLine.114\":[\"r191 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r191.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"r208 = (java.lang.Throwable) r191\", \"throw r208\"],\"parseLine.137\":[\"r167 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>()\"],\"parseLine.146\":[\"$b57 = r167[i74]\"],\"parseLine.162\":[\"r192 = new java.lang.StringBuilder\", \"specialinvoke r192.<java.lang.StringBuilder: void <init>()>()\", \"$r107 = virtualinvoke r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"parseLine.170\":[\"r193 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r193.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(414)\", \"r209 = (java.lang.Throwable) r193\", \"throw r209\"],\"parseLine.180\":[\"r168 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i52)\"],\"parseLine.184\":[\"virtualinvoke r168.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r103)\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _uri> = r168\"],\"parseLine.189\":[\"virtualinvoke $r97.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(r167, $i47, $i46)\"],\"parseLine.198\":[\"r194 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"parseLine.200\":[\"if $r115 == null goto $r169 = \"No Status\"\", \"$r169 = \"No URI\"\", \"goto [?= specialinvoke r194.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, $r169)]\", \"$r169 = \"No Status\"\", \"specialinvoke r194.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, $r169)\", \"r210 = (java.lang.Throwable) r194\", \"throw r210\"],\"parseLine.218\":[\"if b0 >= 32 goto r195 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"if b0 < 0 goto r195 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"parseLine.233\":[\"r195 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r195.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r211 = (java.lang.Throwable) r195\", \"throw r211\"],\"parseLine.279\":[\"r170 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i32)\"],\"parseLine.283\":[\"virtualinvoke r170.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r73)\", \"r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _uri> = r170\"],\"parseLine.314\":[\"r171 = staticinvoke <org.eclipse.jetty.http.HttpVersion: org.eclipse.jetty.http.HttpVersion lookAheadGet(byte[],int,int)>($r65, $i27, $i30)\"],\"parseLine.319\":[\"r171 = (org.eclipse.jetty.http.HttpVersion) $r48\", \"if r171 != null goto $i15 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>()\"],\"parseLine.327\":[\"r196 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r196.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r212 = (java.lang.Throwable) r196\", \"throw r212\"],\"parseLine.333\":[\"r172 = staticinvoke <org.eclipse.jetty.util.BufferUtil: java.lang.String toString(java.nio.ByteBuffer)>($r59)\"],\"parseLine.337\":[\"r173 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String getProxyField(java.nio.ByteBuffer)>(r1)\", \"r174 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String getProxyField(java.nio.ByteBuffer)>(r1)\"],\"parseLine.347\":[\"interfaceinvoke $r63.<org.eclipse.jetty.http.HttpParser$ProxyHandler: void proxied(java.lang.String,java.lang.String,java.lang.String,int,int)>(r172, r173, r174, i76, i77)\"],\"parseLine.350\":[\"$r49 = virtualinvoke r171.<org.eclipse.jetty.http.HttpVersion: java.lang.String asString()>()\"],\"parseLine.359\":[\"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpVersion _version> = r171\"],\"parseLine.366\":[\"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpVersion _version> = r171\"],\"parseLine.419\":[\"r197 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r197.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r213 = (java.lang.Throwable) r197\", \"throw r213\"],\"parseLine.435\":[\"r198 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r198.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Unknown Version\")\", \"r214 = (java.lang.Throwable) r198\", \"throw r214\"],\"parseLine.439\":[\"if $r16 != null goto $r175 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\"],\"parseLine.444\":[\"if $i8 < $i9 goto $r175 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\"],\"parseLine.447\":[\"r199 = new org.eclipse.jetty.util.ArrayTernaryTrie\", \"specialinvoke r199.<org.eclipse.jetty.util.ArrayTernaryTrie: void <init>(int)>(i80)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields> = r199\", \"$r175 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r175)\", \"$r176 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _uri>\", \"virtualinvoke $r176.<java.nio.ByteBuffer: java.nio.Buffer flip()>()\", \"$r177 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"$r178 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpMethod _method>\", \"$r179 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _methodString>\", \"$r180 = r0.<org.eclipse.jetty.http.HttpParser: java.nio.ByteBuffer _uri>\", \"$r181 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpVersion _version>\", \"$z28 = interfaceinvoke $r177.<org.eclipse.jetty.http.HttpParser$RequestHandler: boolean startRequest(org.eclipse.jetty.http.HttpMethod,java.lang.String,java.nio.ByteBuffer,org.eclipse.jetty.http.HttpVersion)>($r178, $r179, $r180, $r181)\"],\"parseLine.466\":[\"goto [?= $r162 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>]\", \"if b0 < 32 goto r200 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"parseLine.472\":[\"r200 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r200.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r215 = (java.lang.Throwable) r200\", \"throw r215\"],\"parseLine.476\":[\"r182 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String takeString()>()\"],\"parseLine.482\":[\"$z1 = interfaceinvoke $r10.<org.eclipse.jetty.http.HttpParser$ResponseHandler: boolean startResponse(org.eclipse.jetty.http.HttpVersion,int,java.lang.String)>($r9, $i6, r182)\"],\"parseLine.489\":[\"goto [?= $r162 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>]\", \"if b0 < 32 goto r201 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"parseLine.500\":[\"r201 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r201.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r216 = (java.lang.Throwable) r201\", \"throw r216\", \"r202 = new java.lang.IllegalStateException\", \"$r137 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r138 = virtualinvoke $r137.<org.eclipse.jetty.http.HttpParser$State: java.lang.String toString()>()\", \"specialinvoke r202.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r138)\", \"throw r202\", \"goto [?= $r162 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>]\"],\"handleKnownHeaders.18\":[\"r48 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r48.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad Content-Length\")\", \"r54 = (java.lang.Throwable) r48\", \"throw r54\"],\"handleKnownHeaders.49\":[\"r49 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r49.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad chunking\")\", \"r55 = (java.lang.Throwable) r49\", \"throw r55\"],\"handleKnownHeaders.63\":[\"if r46 == null goto r50 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"handleKnownHeaders.66\":[\"r50 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r50.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad Host header\")\", \"r56 = (java.lang.Throwable) r50\", \"throw r56\"],\"handleKnownHeaders.86\":[\"if $z6 == 0 goto r51 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"handleKnownHeaders.89\":[\"r51 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r51.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad Host header\")\", \"r57 = (java.lang.Throwable) r51\", \"throw r57\"],\"handleKnownHeaders.98\":[\"r52 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r52.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad IPv6 Host header\")\", \"r58 = (java.lang.Throwable) r52\", \"throw r58\"],\"handleKnownHeaders.136\":[\"r53 = new org.eclipse.jetty.http.HttpField\"],\"handleKnownHeaders.139\":[\"specialinvoke r53.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)>($r11, $r10)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field> = r53\"],\"parseHeaders.21\":[\"$r88 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"r110 = new java.lang.StringBuilder\", \"specialinvoke r110.<java.lang.StringBuilder: void <init>()>()\", \"$r89 = virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Header is too large >\")\"],\"parseHeaders.26\":[\"$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i49)\", \"$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r92 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r88.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r91, $r92)\", \"r111 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r111.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(413)\", \"r121 = (java.lang.Throwable) r111\", \"throw r121\"],\"parseHeaders.37\":[\"tableswitch($i5) {     case 9: goto lookupswitch(b0) {     case 9: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 32: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 58: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r42 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>; };     case 10: goto if b0 == 58 goto $r24 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>;     case 11: goto if b0 > 32 goto $r12 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>;     case 12: goto if b0 >= 32 goto $r109 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto r120 = new java.lang.IllegalStateException; }\", \"lookupswitch(b0) {     case 9: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 32: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 58: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r42 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>; }\", \"$r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if $r37 != null goto $r38 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"$r41 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"virtualinvoke $r41.<java.lang.StringBuilder: void setLength(int)>(0)\"],\"parseHeaders.44\":[\"goto [?= $r40 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_VALUE>]\", \"$r38 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"specialinvoke r0.<org.eclipse.jetty.http.HttpParser: void setString(java.lang.String)>($r38)\", \"$r39 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)\"],\"parseHeaders.53\":[\"$r40 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_VALUE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r40)\"],\"parseHeaders.56\":[\"$r42 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>\", \"if $r42 != null goto $r43 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$r83 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if $r83 == null goto r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString> = null\", \"$r43 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"if $r43 == null goto $r48 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\"],\"parseHeaders.63\":[\"if $z10 == 0 goto $r48 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\"],\"parseHeaders.70\":[\"$r48 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r44 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"if $r44 == null goto r112 = new org.eclipse.jetty.http.HttpField\", \"$r94 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field>\", \"goto [?= $z1 = interfaceinvoke $r48.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean parsedHeader(org.eclipse.jetty.http.HttpField)>($r94)]\", \"r112 = new org.eclipse.jetty.http.HttpField\", \"$r94 = r112\", \"$r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$r46 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>\", \"$r45 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"specialinvoke r112.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r47, $r46, $r45)\", \"$z1 = interfaceinvoke $r48.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean parsedHeader(org.eclipse.jetty.http.HttpField)>($r94)\"],\"parseHeaders.95\":[\"if $z4 != 0 goto $r95 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>\", \"$r80 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpVersion _version>\", \"$r79 = <org.eclipse.jetty.http.HttpVersion: org.eclipse.jetty.http.HttpVersion HTTP_1_0>\", \"if $r80 == $r79 goto $r95 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>\", \"$r81 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$RequestHandler _requestHandler>\", \"if $r81 == null goto $r95 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>\", \"r113 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r113.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"No Host\")\", \"r122 = (java.lang.Throwable) r113\", \"throw r122\", \"$r95 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>\", \"if $r95 == null goto $r68 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>\"],\"parseHeaders.107\":[\"if $i43 == 304 goto $r96 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\"],\"parseHeaders.109\":[\"if $i44 == 204 goto $r96 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\"],\"parseHeaders.111\":[\"if $i45 >= 200 goto $r68 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>\", \"$r96 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r96\", \"goto [?= $r98 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>]\", \"$r68 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>\", \"$r67 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent UNKNOWN_CONTENT>\", \"if $r68 != $r67 goto $r98 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>\"],\"parseHeaders.119\":[\"if $i39 == 0 goto $r97 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\"],\"parseHeaders.121\":[\"if $i40 == 304 goto $r97 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\"],\"parseHeaders.123\":[\"if $i41 == 204 goto $r97 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\"],\"parseHeaders.125\":[\"if $i42 >= 200 goto $r78 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent EOF_CONTENT>\", \"$r97 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent NO_CONTENT>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r97\", \"goto [?= $r98 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>]\", \"$r78 = <org.eclipse.jetty.http.HttpTokens$EndOfContent: org.eclipse.jetty.http.HttpTokens$EndOfContent EOF_CONTENT>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent> = $r78\", \"$r98 = <org.eclipse.jetty.http.HttpParser$1: int[] $SwitchMap$org$eclipse$jetty$http$HttpTokens$EndOfContent>\", \"$r99 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpTokens$EndOfContent _endOfContent>\", \"$i50 = virtualinvoke $r99.<org.eclipse.jetty.http.HttpTokens$EndOfContent: int ordinal()>()\", \"$i51 = $r98[$i50]\", \"tableswitch($i51) {     case 1: goto $r74 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State EOF_CONTENT>;     case 2: goto $r72 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNKED_CONTENT>;     case 3: goto $r69 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>;     default: goto $r76 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CONTENT>; }\", \"$r74 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State EOF_CONTENT>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r74)\", \"$r75 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z8 = interfaceinvoke $r75.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean headerComplete()>()\"],\"parseHeaders.147\":[\"$r72 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CHUNKED_CONTENT>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r72)\", \"$r73 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z7 = interfaceinvoke $r73.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean headerComplete()>()\"],\"parseHeaders.158\":[\"$r69 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z5 = interfaceinvoke $r69.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean headerComplete()>()\"],\"parseHeaders.163\":[\"goto [?= $r70 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>]\"],\"parseHeaders.165\":[\"$r70 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r70)\", \"$r71 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z6 = interfaceinvoke $r71.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean messageComplete()>()\"],\"parseHeaders.176\":[\"$r76 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CONTENT>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r76)\", \"$r77 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$z9 = interfaceinvoke $r77.<org.eclipse.jetty.http.HttpParser$HttpHandler: boolean headerComplete()>()\"],\"parseHeaders.188\":[\"r114 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r114.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r123 = (java.lang.Throwable) r114\", \"throw r123\"],\"parseHeaders.192\":[\"if $z2 == 0 goto $r49 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_IN_NAME>\", \"$r52 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"if $r52 != null goto $r53 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\", \"$r100 = null\", \"goto [?= r101 = $r100]\", \"$r53 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields>\"],\"parseHeaders.199\":[\"$r54 = interfaceinvoke $r53.<org.eclipse.jetty.util.Trie: java.lang.Object getBest(java.nio.ByteBuffer,int,int)>(r1, -1, $i19)\", \"$r100 = (org.eclipse.jetty.http.HttpField) $r54\", \"r101 = $r100\", \"if $r100 != null goto (branch)\", \"$r64 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie CACHE>\"],\"parseHeaders.205\":[\"$r65 = interfaceinvoke $r64.<org.eclipse.jetty.util.Trie: java.lang.Object getBest(java.nio.ByteBuffer,int,int)>(r1, -1, $i38)\", \"r101 = (org.eclipse.jetty.http.HttpField) $r65\", \"if r101 == null goto $r49 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_IN_NAME>\"],\"parseHeaders.209\":[\"if $z3 == 0 goto r104 = virtualinvoke r101.<org.eclipse.jetty.http.HttpField: java.lang.String getName()>()\", \"r102 = virtualinvoke r101.<org.eclipse.jetty.http.HttpField: java.lang.String getName()>()\", \"r103 = virtualinvoke r101.<org.eclipse.jetty.http.HttpField: java.lang.String getValue()>()\"],\"parseHeaders.214\":[\"$i32 = virtualinvoke r102.<java.lang.String: int length()>()\", \"$r60 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>\", \"r104 = staticinvoke <org.eclipse.jetty.util.BufferUtil: java.lang.String toString(java.nio.ByteBuffer,int,int,java.nio.charset.Charset)>(r1, $i31, $i32, $r60)\", \"if r103 != null goto $i33 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>()\", \"r105 = null\"],\"parseHeaders.221\":[\"$i34 = virtualinvoke r102.<java.lang.String: int length()>()\"],\"parseHeaders.224\":[\"$i37 = virtualinvoke r103.<java.lang.String: int length()>()\", \"$r61 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset ISO_8859_1>\", \"r105 = staticinvoke <org.eclipse.jetty.util.BufferUtil: java.lang.String toString(java.nio.ByteBuffer,int,int,java.nio.charset.Charset)>(r1, $i36, $i37, $r61)\", \"r115 = new org.eclipse.jetty.http.HttpField\", \"$r63 = virtualinvoke r101.<org.eclipse.jetty.http.HttpField: org.eclipse.jetty.http.HttpHeader getHeader()>()\", \"specialinvoke r115.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r63, r104, r105)\", \"r101 = r115\", \"goto [?= $r55 = virtualinvoke r101.<org.eclipse.jetty.http.HttpField: org.eclipse.jetty.http.HttpHeader getHeader()>()]\", \"r104 = virtualinvoke r101.<org.eclipse.jetty.http.HttpField: java.lang.String getName()>()\", \"r105 = virtualinvoke r101.<org.eclipse.jetty.http.HttpField: java.lang.String getValue()>()\", \"$r55 = virtualinvoke r101.<org.eclipse.jetty.http.HttpField: org.eclipse.jetty.http.HttpHeader getHeader()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header> = $r55\", \"r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString> = r104\", \"if r105 != null goto $i20 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>()\", \"$r58 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_VALUE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r58)\", \"$r59 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"virtualinvoke $r59.<java.lang.StringBuilder: void setLength(int)>(0)\"],\"parseHeaders.244\":[\"$i27 = virtualinvoke r104.<java.lang.String: int length()>()\"],\"parseHeaders.250\":[\"$i21 = virtualinvoke r104.<java.lang.String: int length()>()\"],\"parseHeaders.252\":[\"$i23 = virtualinvoke r105.<java.lang.String: int length()>()\"],\"parseHeaders.256\":[\"if b53 == 13 goto r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field> = r101\", \"if b53 != 10 goto $r57 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_IN_VALUE>\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field> = r101\", \"r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString> = r105\", \"$r56 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_IN_VALUE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r56)\"],\"parseHeaders.269\":[\"$r57 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_IN_VALUE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r57)\", \"specialinvoke r0.<org.eclipse.jetty.http.HttpParser: void setString(java.lang.String)>(r105)\"],\"parseHeaders.274\":[\"$r49 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_IN_NAME>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r49)\", \"$r50 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"virtualinvoke $r50.<java.lang.StringBuilder: void setLength(int)>(0)\", \"$r51 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\"],\"parseHeaders.280\":[\"virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c18)\"],\"parseHeaders.283\":[\"if b0 == 58 goto $r24 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>\"],\"parseHeaders.285\":[\"$r24 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>\", \"if $r24 != null goto r0.<org.eclipse.jetty.http.HttpParser: int _length> = -1\", \"$r26 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String takeString()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString> = $r26\", \"$r28 = <org.eclipse.jetty.http.HttpHeader: org.eclipse.jetty.util.Trie CACHE>\", \"$r27 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>\", \"$r29 = interfaceinvoke $r28.<org.eclipse.jetty.util.Trie: java.lang.Object get(java.lang.String)>($r27)\", \"$r30 = (org.eclipse.jetty.http.HttpHeader) $r29\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header> = $r30\"],\"parseHeaders.295\":[\"if b0 != 10 goto $r106 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_VALUE>\", \"$r106 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\", \"goto [?= virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r106)]\", \"$r106 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_VALUE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r106)\"],\"parseHeaders.301\":[\"if b0 >= 32 goto $r31 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"if b0 != 9 goto r116 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"$r31 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"if $r31 == null goto $r32 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"$r34 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpHeader _header>\", \"$r35 = virtualinvoke $r34.<org.eclipse.jetty.http.HttpHeader: java.lang.String asString()>()\", \"specialinvoke r0.<org.eclipse.jetty.http.HttpParser: void setString(java.lang.String)>($r35)\"],\"parseHeaders.310\":[\"$r32 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\"],\"parseHeaders.312\":[\"virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c14)\"],\"parseHeaders.314\":[\"$r33 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"$i15 = virtualinvoke $r33.<java.lang.StringBuilder: int length()>()\"],\"parseHeaders.318\":[\"r116 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r116.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"r124 = (java.lang.Throwable) r116\", \"throw r124\", \"if b0 > 32 goto $r12 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\"],\"parseHeaders.324\":[\"$r12 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\"],\"parseHeaders.327\":[\"virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c11)\", \"$r13 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\", \"$i12 = virtualinvoke $r13.<java.lang.StringBuilder: int length()>()\"],\"parseHeaders.331\":[\"$r14 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER_IN_VALUE>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r14)\"],\"parseHeaders.337\":[\"if b0 != 10 goto r118 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\"],\"parseHeaders.339\":[\"if $i13 <= 0 goto $r108 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\"],\"parseHeaders.341\":[\"$r16 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if $r16 != null goto r117 = new java.lang.StringBuilder\", \"$r107 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String takeString()>()\", \"goto [?= r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString> = $r107]\", \"r117 = new java.lang.StringBuilder\", \"specialinvoke r117.<java.lang.StringBuilder: void <init>()>()\"],\"parseHeaders.342\":[\"$r19 = virtualinvoke r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")\", \"$r21 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String takeString()>()\", \"$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)\", \"$r107 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString> = $r107\", \"$r108 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r108)\"],\"parseHeaders.357\":[\"r118 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r118.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"r125 = (java.lang.Throwable) r118\", \"throw r125\", \"if b0 >= 32 goto $r109 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if b0 < 0 goto $r109 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\"],\"parseHeaders.364\":[\"$r109 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>\", \"if $r109 == null goto $r6 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>\"],\"parseHeaders.380\":[\"if b0 != 10 goto r119 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\"],\"parseHeaders.382\":[\"if $i9 <= 0 goto $r10 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\"],\"parseHeaders.384\":[\"$r11 = specialinvoke r0.<org.eclipse.jetty.http.HttpParser: java.lang.String takeString()>()\", \"r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString> = $r11\"],\"parseHeaders.387\":[\"$r10 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State HEADER>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r10)\"],\"parseHeaders.390\":[\"r119 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r119.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"r126 = (java.lang.Throwable) r119\", \"throw r126\", \"r120 = new java.lang.IllegalStateException\", \"$r85 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r86 = virtualinvoke $r85.<org.eclipse.jetty.http.HttpParser$State: java.lang.String toString()>()\", \"specialinvoke r120.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r86)\", \"throw r120\"],\"parseNext.97\":[\"r83 = new java.lang.IllegalStateException\", \"specialinvoke r83.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"too much data after closed\")\", \"throw r83\"],\"parseNext.141\":[\"$r54 := @caughtexception\", \"staticinvoke <org.eclipse.jetty.util.BufferUtil: void clear(java.nio.ByteBuffer)>(r1)\", \"$r56 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"r84 = new java.lang.StringBuilder\", \"specialinvoke r84.<java.lang.StringBuilder: void <init>()>()\", \"$r57 = virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\", \"r87 = (org.eclipse.jetty.http.HttpParser$BadMessage) $r54\", \"$i23 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: int access$000(org.eclipse.jetty.http.HttpParser$BadMessage)>(r87)\", \"$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23)\", \"r88 = (org.eclipse.jetty.http.HttpParser$BadMessage) $r54\", \"$r59 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: java.lang.String access$100(org.eclipse.jetty.http.HttpParser$BadMessage)>(r88)\", \"if $r59 == null goto $r81 = \"\"\", \"r85 = new java.lang.StringBuilder\", \"specialinvoke r85.<java.lang.StringBuilder: void <init>()>()\", \"$r71 = virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")\", \"r89 = (org.eclipse.jetty.http.HttpParser$BadMessage) $r54\", \"$r72 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: java.lang.String access$100(org.eclipse.jetty.http.HttpParser$BadMessage)>(r89)\", \"$r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72)\", \"$r81 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)]\", \"$r81 = \"\"\", \"$r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)\", \"$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")\", \"$r62 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62)\", \"$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r65 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r56.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r64, $r65)\", \"$z12 = r0.<org.eclipse.jetty.http.HttpParser: boolean DEBUG>\", \"if $z12 == 0 goto $r66 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"$r69 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r69.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r54)\", \"$r66 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r66)\", \"$r67 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"r90 = (org.eclipse.jetty.http.HttpParser$BadMessage) $r54\", \"$i24 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: int access$000(org.eclipse.jetty.http.HttpParser$BadMessage)>(r90)\", \"r91 = (org.eclipse.jetty.http.HttpParser$BadMessage) $r54\", \"$r68 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: java.lang.String access$100(org.eclipse.jetty.http.HttpParser$BadMessage)>(r91)\", \"interfaceinvoke $r67.<org.eclipse.jetty.http.HttpParser$HttpHandler: void badMessage(int,java.lang.String)>($i24, $r68)\", \"return 0\"],\"parseNext.144\":[\"r86 = new java.lang.StringBuilder\", \"specialinvoke r86.<java.lang.StringBuilder: void <init>()>()\", \"$r39 = virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\", \"$r40 = virtualinvoke $r36.<java.lang.Exception: java.lang.String toString()>()\", \"$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")\", \"$r43 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43)\", \"$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r46 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r38.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r45, $r46)\"],\"parseNext.167\":[\"if $z11 == 0 goto $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r53 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r53.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r36)\", \"$r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$i21 = virtualinvoke $r47.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"$r48 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"$i22 = virtualinvoke $r48.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"if $i21 > $i22 goto $r49 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r51 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r51)\", \"$r52 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"interfaceinvoke $r52.<org.eclipse.jetty.http.HttpParser$HttpHandler: void badMessage(int,java.lang.String)>(400, null)\", \"goto [?= return 0]\"],\"parseNext.173\":[\"interfaceinvoke $r49.<org.eclipse.jetty.http.HttpParser$HttpHandler: void earlyEOF()>()\", \"$r50 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r50)\"],\"parseNext.177\":null,\"getProxyField.6\":[\"if $z0 == 0 goto r8 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"getProxyField.16\":[\"r8 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r8.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r9 = (java.lang.Throwable) r8\", \"throw r9\"],\"access$200\":\"<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State access$200(org.eclipse.jetty.http.HttpParser)>\"}}",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/3e7b5f0fa918633ec24bd1bc23d6ee76d32c7729/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "qname": "org.eclipse.jetty.http.HttpParser",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "3e7b5f0fa918633ec24bd1bc23d6ee76d32c7729"
        },
        {
            "diff": "{\"lhs\" : {\"next.6\":[\"$r6 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r6.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(java.lang.String)>(\"Bad EOL\")\", \"throw $r6\"],\"next.28\":[\"$r3 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r3.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(java.lang.String)>(\"Bad EOL\")\", \"throw $r3\"],\"next.35\":[\"$r2 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke $r2.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b5, r1)\", \"throw $r2\"],\"quickStart.58\":[\"$r11 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r11.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"throw $r11\"],\"quickStart.69\":[\"$r4 = new java.lang.StringBuilder\", \"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()\", \"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"padding is too large >\")\"],\"quickStart.77\":[\"$r10 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r10.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(400)\", \"throw $r10\"],\"parseLine.25\":[\"$r155 = new java.lang.StringBuilder\", \"specialinvoke $r155.<java.lang.StringBuilder: void <init>()>()\", \"$r157 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"parseLine.33\":[\"$r161 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r161.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(414)\", \"throw $r161\"],\"parseLine.39\":[\"$r149 = new java.lang.StringBuilder\", \"specialinvoke $r149.<java.lang.StringBuilder: void <init>()>()\", \"$r151 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"request is too large >\")\"],\"parseLine.47\":[\"goto [?= $r148 = new org.eclipse.jetty.http.HttpParser$BadMessage]\"],\"parseLine.49\":[\"$r142 = new java.lang.StringBuilder\", \"specialinvoke $r142.<java.lang.StringBuilder: void <init>()>()\", \"$r144 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"response is too large >\")\"],\"parseLine.57\":[\"$r148 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r148.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(413)\", \"throw $r148\"],\"parseLine.64\":[\"tableswitch($i3) {     case 1: goto if b0 != 32 goto (branch);     case 2: goto if b0 != 32 goto (branch);     case 3: goto if b0 > 32 goto $r90 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>;     case 4: goto if b0 != 32 goto (branch);     case 5: goto if b0 != 32 goto (branch);     case 6: goto if b0 <= 32 goto (branch);     case 7: goto if b0 != 10 goto (branch);     case 8: goto if b0 != 10 goto (branch);     default: goto $r136 = new java.lang.IllegalStateException; }\"],\"parseLine.84\":[\"if b0 != 10 goto $r128 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"$r129 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r129.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(java.lang.String)>(\"No URI\")\", \"throw $r129\", \"$r128 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke $r128.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"throw $r128\"],\"parseLine.106\":[\"$r125 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r125.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Unknown Version\")\", \"throw $r125\"],\"parseLine.113\":[\"$r118 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke $r118.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"throw $r118\"],\"parseLine.160\":[\"$r105 = new java.lang.StringBuilder\", \"specialinvoke $r105.<java.lang.StringBuilder: void <init>()>()\", \"$r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"parseLine.168\":[\"$r111 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r111.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(414)\", \"throw $r111\"],\"parseLine.196\":[\"$r114 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"parseLine.200\":[\"goto [?= specialinvoke $r114.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, $r169)]\"],\"parseLine.202\":[\"specialinvoke $r114.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, $r169)\", \"throw $r114\"],\"parseLine.216\":[\"if b0 >= 32 goto $r85 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"if b0 < 0 goto $r85 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"parseLine.231\":[\"$r85 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r85.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"throw $r85\"],\"parseLine.325\":[\"$r64 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r64.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"throw $r64\"],\"parseLine.417\":[\"$r28 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r28.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"throw $r28\"],\"parseLine.433\":[\"$r22 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r22.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Unknown Version\")\", \"throw $r22\"],\"parseLine.445\":[\"$r21 = new org.eclipse.jetty.util.ArrayTernaryTrie\", \"specialinvoke $r21.<org.eclipse.jetty.util.ArrayTernaryTrie: void <init>(int)>(i80)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields> = $r21\"],\"parseLine.465\":[\"if b0 < 32 goto $r11 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"parseLine.470\":[\"$r11 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r11.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"throw $r11\"],\"parseLine.488\":[\"if b0 < 32 goto $r4 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"parseLine.498\":[\"$r4 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r4.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"throw $r4\", \"$r136 = new java.lang.IllegalStateException\"],\"parseLine.504\":[\"specialinvoke $r136.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r138)\", \"throw $r136\"],\"handleKnownHeaders.15\":[\"$r39 := @caughtexception\", \"$r40 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r40.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r39)\", \"$r41 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r41.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad Content-Length\")\", \"throw $r41\"],\"handleKnownHeaders.49\":[\"$r31 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r31.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad chunking\")\", \"throw $r31\"],\"handleKnownHeaders.63\":[\"if r46 == null goto $r18 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"handleKnownHeaders.66\":[\"$r18 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r18.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad Host header\")\", \"throw $r18\"],\"handleKnownHeaders.84\":[\"$r42 := @caughtexception\"],\"handleKnownHeaders.86\":[\"if $z6 == 0 goto $r43 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"$r44 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r44.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r42)\", \"$r43 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r43.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad Host header\")\", \"throw $r43\"],\"handleKnownHeaders.98\":[\"$r20 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r20.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad IPv6 Host header\")\", \"throw $r20\"],\"handleKnownHeaders.136\":[\"$r9 = new org.eclipse.jetty.http.HttpField\"],\"handleKnownHeaders.139\":[\"specialinvoke $r9.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)>($r11, $r10)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field> = $r9\"],\"parseHeaders.22\":[\"$r87 = new java.lang.StringBuilder\", \"specialinvoke $r87.<java.lang.StringBuilder: void <init>()>()\", \"$r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Header is too large >\")\"],\"parseHeaders.30\":[\"$r93 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r93.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(413)\", \"throw $r93\"],\"parseHeaders.37\":[\"tableswitch($i5) {     case 9: goto lookupswitch(b0) {     case 9: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 32: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 58: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r42 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>; };     case 10: goto if b0 == 58 goto $r24 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>;     case 11: goto if b0 > 32 goto $r12 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>;     case 12: goto if b0 >= 32 goto $r109 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r84 = new java.lang.IllegalStateException; }\"],\"parseHeaders.72\":[\"if $r44 == null goto $r94 = new org.eclipse.jetty.http.HttpField\"],\"parseHeaders.75\":[\"$r94 = new org.eclipse.jetty.http.HttpField\"],\"parseHeaders.79\":[\"specialinvoke $r94.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r47, $r46, $r45)\"],\"parseHeaders.97\":[\"$r79 = <org.eclipse.jetty.http.HttpVersion: org.eclipse.jetty.http.HttpVersion HTTP_1_1>\", \"if $r80 != $r79 goto $r95 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>\"],\"parseHeaders.101\":[\"$r82 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r82.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"No Host\")\", \"throw $r82\"],\"parseHeaders.188\":[\"$r66 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r66.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"throw $r66\"],\"parseHeaders.227\":[\"$r62 = new org.eclipse.jetty.http.HttpField\"],\"parseHeaders.229\":[\"specialinvoke $r62.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r63, r104, r105)\", \"r101 = $r62\"],\"parseHeaders.302\":[\"if b0 != 9 goto $r36 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\"],\"parseHeaders.318\":[\"$r36 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke $r36.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"throw $r36\"],\"parseHeaders.336\":[\"if b0 != 10 goto $r15 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\"],\"parseHeaders.341\":[\"if $r16 != null goto $r17 = new java.lang.StringBuilder\"],\"parseHeaders.344\":[\"$r17 = new java.lang.StringBuilder\", \"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()\"],\"parseHeaders.347\":[\"$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)\"],\"parseHeaders.356\":[\"$r15 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke $r15.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"throw $r15\"],\"parseHeaders.378\":[\"if b0 != 10 goto $r9 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\"],\"parseHeaders.388\":[\"$r9 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke $r9.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"throw $r9\", \"$r84 = new java.lang.IllegalStateException\"],\"parseHeaders.394\":[\"specialinvoke $r84.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r86)\", \"throw $r84\"],\"parseNext.97\":[\"$r22 = new java.lang.IllegalStateException\", \"specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"too much data after closed\")\", \"throw $r22\"],\"parseNext.141\":[\"$r54 := @caughtexception\", \"staticinvoke <org.eclipse.jetty.util.BufferUtil: void clear(java.nio.ByteBuffer)>(r1)\", \"$r56 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"$r55 = new java.lang.StringBuilder\", \"specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()\", \"$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\", \"$i23 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: int access$000(org.eclipse.jetty.http.HttpParser$BadMessage)>($r54)\", \"$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23)\", \"$r59 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: java.lang.String access$100(org.eclipse.jetty.http.HttpParser$BadMessage)>($r54)\", \"if $r59 == null goto $r81 = \"\"\", \"$r70 = new java.lang.StringBuilder\", \"specialinvoke $r70.<java.lang.StringBuilder: void <init>()>()\", \"$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")\", \"$r72 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: java.lang.String access$100(org.eclipse.jetty.http.HttpParser$BadMessage)>($r54)\", \"$r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72)\", \"$r81 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)]\", \"$r81 = \"\"\", \"$r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)\", \"$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")\", \"$r62 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62)\", \"$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r65 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r56.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r64, $r65)\", \"$z12 = r0.<org.eclipse.jetty.http.HttpParser: boolean DEBUG>\", \"if $z12 == 0 goto $r66 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"$r69 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r69.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r54)\", \"$r66 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r66)\", \"$r67 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$i24 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: int access$000(org.eclipse.jetty.http.HttpParser$BadMessage)>($r54)\", \"$r68 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: java.lang.String access$100(org.eclipse.jetty.http.HttpParser$BadMessage)>($r54)\", \"interfaceinvoke $r67.<org.eclipse.jetty.http.HttpParser$HttpHandler: void badMessage(int,java.lang.String)>($i24, $r68)\", \"return 0\"],\"parseNext.180\":[\"$r37 = new java.lang.StringBuilder\", \"specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()\", \"$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\", \"$r40 = virtualinvoke $r36.<java.lang.Exception: java.lang.String toString()>()\", \"$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")\", \"$r43 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43)\", \"$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r46 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r38.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r45, $r46)\"],\"parseNext.192\":[\"if $z11 == 0 goto $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r53 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r53.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r36)\", \"$r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$i21 = virtualinvoke $r47.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"$r48 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"$i22 = virtualinvoke $r48.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"if $i21 > $i22 goto $r49 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r51 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r51)\", \"$r52 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"interfaceinvoke $r52.<org.eclipse.jetty.http.HttpParser$HttpHandler: void badMessage(int,java.lang.String)>(400, null)\", \"goto [?= return 0]\"],\"parseNext.206\":[\"interfaceinvoke $r49.<org.eclipse.jetty.http.HttpParser$HttpHandler: void earlyEOF()>()\", \"$r50 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r50)\"],\"parseNext.210\":null,\"getProxyField.6\":[\"if $z0 == 0 goto $r3 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"getProxyField.16\":[\"$r3 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r3.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"throw $r3\"]},\"rhs\" : {\"next.6\":[\"r7 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r7.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(java.lang.String)>(\"Bad EOL\")\", \"r10 = (java.lang.Throwable) r7\", \"throw r10\"],\"next.28\":[\"r8 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r8.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(java.lang.String)>(\"Bad EOL\")\", \"r11 = (java.lang.Throwable) r8\", \"throw r11\"],\"next.35\":[\"r9 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r9.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b5, r1)\", \"r12 = (java.lang.Throwable) r9\", \"throw r12\"],\"quickStart.58\":[\"r33 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r33.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r36 = (java.lang.Throwable) r33\", \"throw r36\"],\"quickStart.69\":[\"r34 = new java.lang.StringBuilder\", \"specialinvoke r34.<java.lang.StringBuilder: void <init>()>()\", \"$r6 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"padding is too large >\")\"],\"quickStart.77\":[\"r35 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r35.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(400)\", \"r37 = (java.lang.Throwable) r35\", \"throw r37\"],\"parseLine.25\":[\"r183 = new java.lang.StringBuilder\", \"specialinvoke r183.<java.lang.StringBuilder: void <init>()>()\", \"$r157 = virtualinvoke r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"parseLine.33\":[\"r184 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r184.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(414)\", \"r203 = (java.lang.Throwable) r184\", \"throw r203\"],\"parseLine.39\":[\"r185 = new java.lang.StringBuilder\", \"specialinvoke r185.<java.lang.StringBuilder: void <init>()>()\", \"$r151 = virtualinvoke r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"request is too large >\")\"],\"parseLine.47\":[\"goto [?= r187 = new org.eclipse.jetty.http.HttpParser$BadMessage]\"],\"parseLine.49\":[\"r186 = new java.lang.StringBuilder\", \"specialinvoke r186.<java.lang.StringBuilder: void <init>()>()\", \"$r144 = virtualinvoke r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"response is too large >\")\"],\"parseLine.57\":[\"r187 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r187.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(413)\", \"r204 = (java.lang.Throwable) r187\", \"throw r204\"],\"parseLine.64\":[\"tableswitch($i3) {     case 1: goto if b0 != 32 goto (branch);     case 2: goto if b0 != 32 goto (branch);     case 3: goto if b0 > 32 goto $r90 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>;     case 4: goto if b0 != 32 goto (branch);     case 5: goto if b0 != 32 goto (branch);     case 6: goto if b0 <= 32 goto (branch);     case 7: goto if b0 != 10 goto (branch);     case 8: goto if b0 != 10 goto (branch);     default: goto r202 = new java.lang.IllegalStateException; }\"],\"parseLine.84\":[\"if b0 != 10 goto r189 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"r188 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r188.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(java.lang.String)>(\"No URI\")\", \"r205 = (java.lang.Throwable) r188\", \"throw r205\", \"r189 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r189.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"r206 = (java.lang.Throwable) r189\", \"throw r206\"],\"parseLine.106\":[\"r190 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r190.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Unknown Version\")\", \"r207 = (java.lang.Throwable) r190\", \"throw r207\"],\"parseLine.113\":[\"r191 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r191.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"r208 = (java.lang.Throwable) r191\", \"throw r208\"],\"parseLine.160\":[\"r192 = new java.lang.StringBuilder\", \"specialinvoke r192.<java.lang.StringBuilder: void <init>()>()\", \"$r107 = virtualinvoke r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"parseLine.168\":[\"r193 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r193.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(414)\", \"r209 = (java.lang.Throwable) r193\", \"throw r209\"],\"parseLine.196\":[\"r194 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"parseLine.200\":[\"goto [?= specialinvoke r194.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, $r169)]\"],\"parseLine.202\":[\"specialinvoke r194.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, $r169)\", \"r210 = (java.lang.Throwable) r194\", \"throw r210\"],\"parseLine.216\":[\"if b0 >= 32 goto r195 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"if b0 < 0 goto r195 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"parseLine.231\":[\"r195 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r195.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r211 = (java.lang.Throwable) r195\", \"throw r211\"],\"parseLine.325\":[\"r196 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r196.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r212 = (java.lang.Throwable) r196\", \"throw r212\"],\"parseLine.417\":[\"r197 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r197.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r213 = (java.lang.Throwable) r197\", \"throw r213\"],\"parseLine.433\":[\"r198 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r198.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Unknown Version\")\", \"r214 = (java.lang.Throwable) r198\", \"throw r214\"],\"parseLine.445\":[\"r199 = new org.eclipse.jetty.util.ArrayTernaryTrie\", \"specialinvoke r199.<org.eclipse.jetty.util.ArrayTernaryTrie: void <init>(int)>(i80)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields> = r199\"],\"parseLine.465\":[\"if b0 < 32 goto r200 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"parseLine.470\":[\"r200 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r200.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r215 = (java.lang.Throwable) r200\", \"throw r215\"],\"parseLine.488\":[\"if b0 < 32 goto r201 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"parseLine.498\":[\"r201 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r201.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r216 = (java.lang.Throwable) r201\", \"throw r216\", \"r202 = new java.lang.IllegalStateException\"],\"parseLine.504\":[\"specialinvoke r202.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r138)\", \"throw r202\"],\"handleKnownHeaders.15\":[\"$r42 := @caughtexception\", \"$r43 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r43.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r42)\", \"r48 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r48.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad Content-Length\")\", \"r54 = (java.lang.Throwable) r48\", \"throw r54\"],\"handleKnownHeaders.49\":[\"r49 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r49.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad chunking\")\", \"r55 = (java.lang.Throwable) r49\", \"throw r55\"],\"handleKnownHeaders.63\":[\"if r46 == null goto r50 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"handleKnownHeaders.66\":[\"r50 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r50.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad Host header\")\", \"r56 = (java.lang.Throwable) r50\", \"throw r56\"],\"handleKnownHeaders.84\":[\"$r39 := @caughtexception\"],\"handleKnownHeaders.86\":[\"if $z6 == 0 goto r51 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"$r41 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r41.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r39)\", \"r51 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r51.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad Host header\")\", \"r57 = (java.lang.Throwable) r51\", \"throw r57\"],\"handleKnownHeaders.98\":[\"r52 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r52.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad IPv6 Host header\")\", \"r58 = (java.lang.Throwable) r52\", \"throw r58\"],\"handleKnownHeaders.136\":[\"r53 = new org.eclipse.jetty.http.HttpField\"],\"handleKnownHeaders.139\":[\"specialinvoke r53.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)>($r11, $r10)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field> = r53\"],\"parseHeaders.22\":[\"r110 = new java.lang.StringBuilder\", \"specialinvoke r110.<java.lang.StringBuilder: void <init>()>()\", \"$r89 = virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Header is too large >\")\"],\"parseHeaders.30\":[\"r111 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r111.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(413)\", \"r121 = (java.lang.Throwable) r111\", \"throw r121\"],\"parseHeaders.37\":[\"tableswitch($i5) {     case 9: goto lookupswitch(b0) {     case 9: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 32: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 58: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r42 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>; };     case 10: goto if b0 == 58 goto $r24 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>;     case 11: goto if b0 > 32 goto $r12 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>;     case 12: goto if b0 >= 32 goto $r109 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto r120 = new java.lang.IllegalStateException; }\"],\"parseHeaders.72\":[\"if $r44 == null goto r112 = new org.eclipse.jetty.http.HttpField\"],\"parseHeaders.75\":[\"r112 = new org.eclipse.jetty.http.HttpField\", \"$r94 = r112\"],\"parseHeaders.79\":[\"specialinvoke r112.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r47, $r46, $r45)\"],\"parseHeaders.97\":[\"$r79 = <org.eclipse.jetty.http.HttpVersion: org.eclipse.jetty.http.HttpVersion HTTP_1_0>\", \"if $r80 == $r79 goto $r95 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>\"],\"parseHeaders.101\":[\"r113 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r113.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"No Host\")\", \"r122 = (java.lang.Throwable) r113\", \"throw r122\"],\"parseHeaders.188\":[\"r114 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r114.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r123 = (java.lang.Throwable) r114\", \"throw r123\"],\"parseHeaders.227\":[\"r115 = new org.eclipse.jetty.http.HttpField\"],\"parseHeaders.229\":[\"specialinvoke r115.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r63, r104, r105)\", \"r101 = r115\"],\"parseHeaders.302\":[\"if b0 != 9 goto r116 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\"],\"parseHeaders.318\":[\"r116 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r116.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"r124 = (java.lang.Throwable) r116\", \"throw r124\"],\"parseHeaders.336\":[\"if b0 != 10 goto r118 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\"],\"parseHeaders.341\":[\"if $r16 != null goto r117 = new java.lang.StringBuilder\"],\"parseHeaders.344\":[\"r117 = new java.lang.StringBuilder\", \"specialinvoke r117.<java.lang.StringBuilder: void <init>()>()\"],\"parseHeaders.347\":[\"$r19 = virtualinvoke r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)\"],\"parseHeaders.356\":[\"r118 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r118.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"r125 = (java.lang.Throwable) r118\", \"throw r125\"],\"parseHeaders.378\":[\"if b0 != 10 goto r119 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\"],\"parseHeaders.388\":[\"r119 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r119.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"r126 = (java.lang.Throwable) r119\", \"throw r126\", \"r120 = new java.lang.IllegalStateException\"],\"parseHeaders.394\":[\"specialinvoke r120.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r86)\", \"throw r120\"],\"parseNext.97\":[\"r83 = new java.lang.IllegalStateException\", \"specialinvoke r83.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"too much data after closed\")\", \"throw r83\"],\"parseNext.141\":null,\"parseNext.180\":[\"r84 = new java.lang.StringBuilder\", \"specialinvoke r84.<java.lang.StringBuilder: void <init>()>()\", \"$r39 = virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\", \"r87 = (org.eclipse.jetty.http.HttpParser$BadMessage) $r36\", \"$i21 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: int access$000(org.eclipse.jetty.http.HttpParser$BadMessage)>(r87)\", \"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21)\", \"r88 = (org.eclipse.jetty.http.HttpParser$BadMessage) $r36\", \"$r41 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: java.lang.String access$100(org.eclipse.jetty.http.HttpParser$BadMessage)>(r88)\", \"if $r41 == null goto $r81 = \"\"\", \"r85 = new java.lang.StringBuilder\", \"specialinvoke r85.<java.lang.StringBuilder: void <init>()>()\", \"$r53 = virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")\", \"r89 = (org.eclipse.jetty.http.HttpParser$BadMessage) $r36\", \"$r54 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: java.lang.String access$100(org.eclipse.jetty.http.HttpParser$BadMessage)>(r89)\", \"$r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)\", \"$r81 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)]\", \"$r81 = \"\"\", \"$r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)\", \"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")\", \"$r44 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r44)\", \"$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r47 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r38.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r46, $r47)\"],\"parseNext.192\":[\"if $z11 == 0 goto $r48 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"$r51 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r51.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r36)\", \"$r48 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r48)\"],\"parseNext.206\":[\"r90 = (org.eclipse.jetty.http.HttpParser$BadMessage) $r36\", \"$i22 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: int access$000(org.eclipse.jetty.http.HttpParser$BadMessage)>(r90)\", \"r91 = (org.eclipse.jetty.http.HttpParser$BadMessage) $r36\", \"$r50 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: java.lang.String access$100(org.eclipse.jetty.http.HttpParser$BadMessage)>(r91)\", \"interfaceinvoke $r49.<org.eclipse.jetty.http.HttpParser$HttpHandler: void badMessage(int,java.lang.String)>($i22, $r50)\"],\"parseNext.210\":[\"$r56 := @caughtexception\", \"staticinvoke <org.eclipse.jetty.util.BufferUtil: void clear(java.nio.ByteBuffer)>(r1)\", \"$r58 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"r86 = new java.lang.StringBuilder\", \"specialinvoke r86.<java.lang.StringBuilder: void <init>()>()\", \"$r59 = virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\", \"$r60 = virtualinvoke $r56.<java.lang.Exception: java.lang.String toString()>()\", \"$r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60)\", \"$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")\", \"$r63 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r63)\", \"$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r66 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r58.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r65, $r66)\", \"$z12 = r0.<org.eclipse.jetty.http.HttpParser: boolean DEBUG>\", \"if $z12 == 0 goto $r67 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r73 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r73.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r56)\", \"$r67 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$i23 = virtualinvoke $r67.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"$r68 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"$i24 = virtualinvoke $r68.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"if $i23 > $i24 goto $r69 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r71 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r71)\", \"$r72 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"interfaceinvoke $r72.<org.eclipse.jetty.http.HttpParser$HttpHandler: void badMessage(int,java.lang.String)>(400, null)\", \"goto [?= return 0]\", \"$r69 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"interfaceinvoke $r69.<org.eclipse.jetty.http.HttpParser$HttpHandler: void earlyEOF()>()\", \"$r70 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r70)\", \"return 0\"],\"getProxyField.6\":[\"if $z0 == 0 goto r8 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"getProxyField.16\":[\"r8 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r8.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r9 = (java.lang.Throwable) r8\", \"throw r9\"]}}",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "qname": "org.eclipse.jetty.http.HttpParser",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": "",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "qname": "org.eclipse.jetty.http.HttpParser$BadMessage",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": "",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "qname": "org.eclipse.jetty.http.HttpParser$BadMessage()",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": "",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "qname": "org.eclipse.jetty.http.HttpParser$BadMessage(String)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": "",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "qname": "org.eclipse.jetty.http.HttpParser$BadMessage(int)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": "",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "qname": "org.eclipse.jetty.http.HttpParser$BadMessage(int,String)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": null,
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": false,
            "qname": "org.eclipse.jetty.http.HttpParser$BadMessageException",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": null,
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": false,
            "qname": "org.eclipse.jetty.http.HttpParser$BadMessageException()",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": null,
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": false,
            "qname": "org.eclipse.jetty.http.HttpParser$BadMessageException(String)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": null,
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": false,
            "qname": "org.eclipse.jetty.http.HttpParser$BadMessageException(int)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": null,
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": false,
            "qname": "org.eclipse.jetty.http.HttpParser$BadMessageException(int,String)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": "",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "qname": "org.eclipse.jetty.http.HttpParser$IllegalCharacter",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": "",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "qname": "org.eclipse.jetty.http.HttpParser$IllegalCharacter(byte,ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": null,
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/3e7b5f0fa918633ec24bd1bc23d6ee76d32c7729/org/eclipse/jetty/http/HttpParser.class",
            "contained": false,
            "qname": "org.eclipse.jetty.http.HttpParser$IllegalCharacterException",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "3e7b5f0fa918633ec24bd1bc23d6ee76d32c7729"
        },
        {
            "diff": null,
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": false,
            "qname": "org.eclipse.jetty.http.HttpParser$IllegalCharacterException",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": null,
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/3e7b5f0fa918633ec24bd1bc23d6ee76d32c7729/org/eclipse/jetty/http/HttpParser.class",
            "contained": false,
            "qname": "org.eclipse.jetty.http.HttpParser$IllegalCharacterException(State,byte,ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "3e7b5f0fa918633ec24bd1bc23d6ee76d32c7729"
        },
        {
            "diff": null,
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": false,
            "qname": "org.eclipse.jetty.http.HttpParser$IllegalCharacterException(State,byte,ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": null,
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/3e7b5f0fa918633ec24bd1bc23d6ee76d32c7729/org/eclipse/jetty/http/HttpParser.class",
            "contained": false,
            "qname": "org.eclipse.jetty.http.HttpParser$IllegalCharacterException.appendContentChar(StringBuilder,byte)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "3e7b5f0fa918633ec24bd1bc23d6ee76d32c7729"
        },
        {
            "diff": null,
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": false,
            "qname": "org.eclipse.jetty.http.HttpParser$IllegalCharacterException.appendContentChar(StringBuilder,byte)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": null,
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/3e7b5f0fa918633ec24bd1bc23d6ee76d32c7729/org/eclipse/jetty/http/HttpParser.class",
            "contained": false,
            "qname": "org.eclipse.jetty.http.HttpParser$IllegalCharacterException.toDebugString(ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "3e7b5f0fa918633ec24bd1bc23d6ee76d32c7729"
        },
        {
            "diff": null,
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": false,
            "qname": "org.eclipse.jetty.http.HttpParser$IllegalCharacterException.toDebugString(ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": "{\"lhs\" : {\"6\":[\"if $z0 == 0 goto $r3 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"16\":[\"$r3 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r3.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"throw $r3\"]},\"rhs\" : {\"6\":[\"if $z0 == 0 goto r8 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"16\":[\"r8 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r8.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r9 = (java.lang.Throwable) r8\", \"throw r9\"]}}",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "qname": "org.eclipse.jetty.http.HttpParser.getProxyField(ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": "{\"lhs\" : {\"15\":[\"$r39 := @caughtexception\", \"$r40 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r40.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r39)\", \"$r41 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r41.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad Content-Length\")\", \"throw $r41\"],\"49\":[\"$r31 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r31.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad chunking\")\", \"throw $r31\"],\"63\":[\"if r46 == null goto $r18 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"66\":[\"$r18 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r18.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad Host header\")\", \"throw $r18\"],\"84\":[\"$r42 := @caughtexception\"],\"86\":[\"if $z6 == 0 goto $r43 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"$r44 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r44.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r42)\", \"$r43 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r43.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad Host header\")\", \"throw $r43\"],\"98\":[\"$r20 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r20.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad IPv6 Host header\")\", \"throw $r20\"],\"136\":[\"$r9 = new org.eclipse.jetty.http.HttpField\"],\"139\":[\"specialinvoke $r9.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)>($r11, $r10)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field> = $r9\"]},\"rhs\" : {\"15\":[\"$r42 := @caughtexception\", \"$r43 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r43.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r42)\", \"r48 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r48.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad Content-Length\")\", \"r54 = (java.lang.Throwable) r48\", \"throw r54\"],\"49\":[\"r49 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r49.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad chunking\")\", \"r55 = (java.lang.Throwable) r49\", \"throw r55\"],\"63\":[\"if r46 == null goto r50 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"66\":[\"r50 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r50.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad Host header\")\", \"r56 = (java.lang.Throwable) r50\", \"throw r56\"],\"84\":[\"$r39 := @caughtexception\"],\"86\":[\"if $z6 == 0 goto r51 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"$r41 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r41.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r39)\", \"r51 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r51.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad Host header\")\", \"r57 = (java.lang.Throwable) r51\", \"throw r57\"],\"98\":[\"r52 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r52.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Bad IPv6 Host header\")\", \"r58 = (java.lang.Throwable) r52\", \"throw r58\"],\"136\":[\"r53 = new org.eclipse.jetty.http.HttpField\"],\"139\":[\"specialinvoke r53.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)>($r11, $r10)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpField _field> = r53\"]}}",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "qname": "org.eclipse.jetty.http.HttpParser.handleKnownHeaders(ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": "{\"lhs\" : {\"6\":[\"$r6 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r6.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(java.lang.String)>(\"Bad EOL\")\", \"throw $r6\"],\"28\":[\"$r3 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r3.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(java.lang.String)>(\"Bad EOL\")\", \"throw $r3\"],\"35\":[\"$r2 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke $r2.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b5, r1)\", \"throw $r2\"]},\"rhs\" : {\"6\":[\"r7 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r7.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(java.lang.String)>(\"Bad EOL\")\", \"r10 = (java.lang.Throwable) r7\", \"throw r10\"],\"28\":[\"r8 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r8.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(java.lang.String)>(\"Bad EOL\")\", \"r11 = (java.lang.Throwable) r8\", \"throw r11\"],\"35\":[\"r9 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r9.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b5, r1)\", \"r12 = (java.lang.Throwable) r9\", \"throw r12\"]}}",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "qname": "org.eclipse.jetty.http.HttpParser.next(ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": "{\"lhs\" : {\"22\":[\"$r87 = new java.lang.StringBuilder\", \"specialinvoke $r87.<java.lang.StringBuilder: void <init>()>()\", \"$r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Header is too large >\")\"],\"30\":[\"$r93 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r93.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(413)\", \"throw $r93\"],\"37\":[\"tableswitch($i5) {     case 9: goto lookupswitch(b0) {     case 9: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 32: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 58: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r42 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>; };     case 10: goto if b0 == 58 goto $r24 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>;     case 11: goto if b0 > 32 goto $r12 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>;     case 12: goto if b0 >= 32 goto $r109 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r84 = new java.lang.IllegalStateException; }\"],\"72\":[\"if $r44 == null goto $r94 = new org.eclipse.jetty.http.HttpField\"],\"75\":[\"$r94 = new org.eclipse.jetty.http.HttpField\"],\"79\":[\"specialinvoke $r94.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r47, $r46, $r45)\"],\"97\":[\"$r79 = <org.eclipse.jetty.http.HttpVersion: org.eclipse.jetty.http.HttpVersion HTTP_1_1>\", \"if $r80 != $r79 goto $r95 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>\"],\"101\":[\"$r82 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r82.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"No Host\")\", \"throw $r82\"],\"188\":[\"$r66 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r66.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"throw $r66\"],\"227\":[\"$r62 = new org.eclipse.jetty.http.HttpField\"],\"229\":[\"specialinvoke $r62.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r63, r104, r105)\", \"r101 = $r62\"],\"302\":[\"if b0 != 9 goto $r36 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\"],\"318\":[\"$r36 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke $r36.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"throw $r36\"],\"336\":[\"if b0 != 10 goto $r15 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\"],\"341\":[\"if $r16 != null goto $r17 = new java.lang.StringBuilder\"],\"344\":[\"$r17 = new java.lang.StringBuilder\", \"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()\"],\"347\":[\"$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)\"],\"356\":[\"$r15 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke $r15.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"throw $r15\"],\"378\":[\"if b0 != 10 goto $r9 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\"],\"388\":[\"$r9 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke $r9.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"throw $r9\", \"$r84 = new java.lang.IllegalStateException\"],\"394\":[\"specialinvoke $r84.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r86)\", \"throw $r84\"]},\"rhs\" : {\"22\":[\"r110 = new java.lang.StringBuilder\", \"specialinvoke r110.<java.lang.StringBuilder: void <init>()>()\", \"$r89 = virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Header is too large >\")\"],\"30\":[\"r111 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r111.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(413)\", \"r121 = (java.lang.Throwable) r111\", \"throw r121\"],\"37\":[\"tableswitch($i5) {     case 9: goto lookupswitch(b0) {     case 9: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 32: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     case 58: goto $r37 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto $r42 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>; };     case 10: goto if b0 == 58 goto $r24 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _headerString>;     case 11: goto if b0 > 32 goto $r12 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.StringBuilder _string>;     case 12: goto if b0 >= 32 goto $r109 = r0.<org.eclipse.jetty.http.HttpParser: java.lang.String _valueString>;     default: goto r120 = new java.lang.IllegalStateException; }\"],\"72\":[\"if $r44 == null goto r112 = new org.eclipse.jetty.http.HttpField\"],\"75\":[\"r112 = new org.eclipse.jetty.http.HttpField\", \"$r94 = r112\"],\"79\":[\"specialinvoke r112.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r47, $r46, $r45)\"],\"97\":[\"$r79 = <org.eclipse.jetty.http.HttpVersion: org.eclipse.jetty.http.HttpVersion HTTP_1_0>\", \"if $r80 == $r79 goto $r95 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>\"],\"101\":[\"r113 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r113.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"No Host\")\", \"r122 = (java.lang.Throwable) r113\", \"throw r122\"],\"188\":[\"r114 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r114.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r123 = (java.lang.Throwable) r114\", \"throw r123\"],\"227\":[\"r115 = new org.eclipse.jetty.http.HttpField\"],\"229\":[\"specialinvoke r115.<org.eclipse.jetty.http.HttpField: void <init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)>($r63, r104, r105)\", \"r101 = r115\"],\"302\":[\"if b0 != 9 goto r116 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\"],\"318\":[\"r116 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r116.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"r124 = (java.lang.Throwable) r116\", \"throw r124\"],\"336\":[\"if b0 != 10 goto r118 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\"],\"341\":[\"if $r16 != null goto r117 = new java.lang.StringBuilder\"],\"344\":[\"r117 = new java.lang.StringBuilder\", \"specialinvoke r117.<java.lang.StringBuilder: void <init>()>()\"],\"347\":[\"$r19 = virtualinvoke r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)\"],\"356\":[\"r118 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r118.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"r125 = (java.lang.Throwable) r118\", \"throw r125\"],\"378\":[\"if b0 != 10 goto r119 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\"],\"388\":[\"r119 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r119.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"r126 = (java.lang.Throwable) r119\", \"throw r126\", \"r120 = new java.lang.IllegalStateException\"],\"394\":[\"specialinvoke r120.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r86)\", \"throw r120\"]}}",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "qname": "org.eclipse.jetty.http.HttpParser.parseHeaders(ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": "{\"lhs\" : {\"25\":[\"$r155 = new java.lang.StringBuilder\", \"specialinvoke $r155.<java.lang.StringBuilder: void <init>()>()\", \"$r157 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"33\":[\"$r161 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r161.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(414)\", \"throw $r161\"],\"39\":[\"$r149 = new java.lang.StringBuilder\", \"specialinvoke $r149.<java.lang.StringBuilder: void <init>()>()\", \"$r151 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"request is too large >\")\"],\"47\":[\"goto [?= $r148 = new org.eclipse.jetty.http.HttpParser$BadMessage]\"],\"49\":[\"$r142 = new java.lang.StringBuilder\", \"specialinvoke $r142.<java.lang.StringBuilder: void <init>()>()\", \"$r144 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"response is too large >\")\"],\"57\":[\"$r148 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r148.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(413)\", \"throw $r148\"],\"64\":[\"tableswitch($i3) {     case 1: goto if b0 != 32 goto (branch);     case 2: goto if b0 != 32 goto (branch);     case 3: goto if b0 > 32 goto $r90 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>;     case 4: goto if b0 != 32 goto (branch);     case 5: goto if b0 != 32 goto (branch);     case 6: goto if b0 <= 32 goto (branch);     case 7: goto if b0 != 10 goto (branch);     case 8: goto if b0 != 10 goto (branch);     default: goto $r136 = new java.lang.IllegalStateException; }\"],\"84\":[\"if b0 != 10 goto $r128 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"$r129 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r129.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(java.lang.String)>(\"No URI\")\", \"throw $r129\", \"$r128 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke $r128.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"throw $r128\"],\"106\":[\"$r125 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r125.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Unknown Version\")\", \"throw $r125\"],\"113\":[\"$r118 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke $r118.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"throw $r118\"],\"160\":[\"$r105 = new java.lang.StringBuilder\", \"specialinvoke $r105.<java.lang.StringBuilder: void <init>()>()\", \"$r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"168\":[\"$r111 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r111.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(414)\", \"throw $r111\"],\"196\":[\"$r114 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"200\":[\"goto [?= specialinvoke $r114.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, $r169)]\"],\"202\":[\"specialinvoke $r114.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, $r169)\", \"throw $r114\"],\"216\":[\"if b0 >= 32 goto $r85 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"if b0 < 0 goto $r85 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"231\":[\"$r85 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r85.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"throw $r85\"],\"325\":[\"$r64 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r64.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"throw $r64\"],\"417\":[\"$r28 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r28.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"throw $r28\"],\"433\":[\"$r22 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r22.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Unknown Version\")\", \"throw $r22\"],\"445\":[\"$r21 = new org.eclipse.jetty.util.ArrayTernaryTrie\", \"specialinvoke $r21.<org.eclipse.jetty.util.ArrayTernaryTrie: void <init>(int)>(i80)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields> = $r21\"],\"465\":[\"if b0 < 32 goto $r11 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"470\":[\"$r11 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r11.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"throw $r11\"],\"488\":[\"if b0 < 32 goto $r4 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"498\":[\"$r4 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r4.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"throw $r4\", \"$r136 = new java.lang.IllegalStateException\"],\"504\":[\"specialinvoke $r136.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r138)\", \"throw $r136\"]},\"rhs\" : {\"25\":[\"r183 = new java.lang.StringBuilder\", \"specialinvoke r183.<java.lang.StringBuilder: void <init>()>()\", \"$r157 = virtualinvoke r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"33\":[\"r184 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r184.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(414)\", \"r203 = (java.lang.Throwable) r184\", \"throw r203\"],\"39\":[\"r185 = new java.lang.StringBuilder\", \"specialinvoke r185.<java.lang.StringBuilder: void <init>()>()\", \"$r151 = virtualinvoke r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"request is too large >\")\"],\"47\":[\"goto [?= r187 = new org.eclipse.jetty.http.HttpParser$BadMessage]\"],\"49\":[\"r186 = new java.lang.StringBuilder\", \"specialinvoke r186.<java.lang.StringBuilder: void <init>()>()\", \"$r144 = virtualinvoke r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"response is too large >\")\"],\"57\":[\"r187 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r187.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(413)\", \"r204 = (java.lang.Throwable) r187\", \"throw r204\"],\"64\":[\"tableswitch($i3) {     case 1: goto if b0 != 32 goto (branch);     case 2: goto if b0 != 32 goto (branch);     case 3: goto if b0 > 32 goto $r90 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$ResponseHandler _responseHandler>;     case 4: goto if b0 != 32 goto (branch);     case 5: goto if b0 != 32 goto (branch);     case 6: goto if b0 <= 32 goto (branch);     case 7: goto if b0 != 10 goto (branch);     case 8: goto if b0 != 10 goto (branch);     default: goto r202 = new java.lang.IllegalStateException; }\"],\"84\":[\"if b0 != 10 goto r189 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"r188 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r188.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(java.lang.String)>(\"No URI\")\", \"r205 = (java.lang.Throwable) r188\", \"throw r205\", \"r189 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r189.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"r206 = (java.lang.Throwable) r189\", \"throw r206\"],\"106\":[\"r190 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r190.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Unknown Version\")\", \"r207 = (java.lang.Throwable) r190\", \"throw r207\"],\"113\":[\"r191 = new org.eclipse.jetty.http.HttpParser$IllegalCharacter\", \"specialinvoke r191.<org.eclipse.jetty.http.HttpParser$IllegalCharacter: void <init>(org.eclipse.jetty.http.HttpParser,byte,java.nio.ByteBuffer)>(r0, b0, r1)\", \"r208 = (java.lang.Throwable) r191\", \"throw r208\"],\"160\":[\"r192 = new java.lang.StringBuilder\", \"specialinvoke r192.<java.lang.StringBuilder: void <init>()>()\", \"$r107 = virtualinvoke r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URI is too large >\")\"],\"168\":[\"r193 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r193.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(414)\", \"r209 = (java.lang.Throwable) r193\", \"throw r209\"],\"196\":[\"r194 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"200\":[\"goto [?= specialinvoke r194.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, $r169)]\"],\"202\":[\"specialinvoke r194.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, $r169)\", \"r210 = (java.lang.Throwable) r194\", \"throw r210\"],\"216\":[\"if b0 >= 32 goto r195 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"if b0 < 0 goto r195 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"231\":[\"r195 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r195.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r211 = (java.lang.Throwable) r195\", \"throw r211\"],\"325\":[\"r196 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r196.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r212 = (java.lang.Throwable) r196\", \"throw r212\"],\"417\":[\"r197 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r197.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r213 = (java.lang.Throwable) r197\", \"throw r213\"],\"433\":[\"r198 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r198.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int,java.lang.String)>(400, \"Unknown Version\")\", \"r214 = (java.lang.Throwable) r198\", \"throw r214\"],\"445\":[\"r199 = new org.eclipse.jetty.util.ArrayTernaryTrie\", \"specialinvoke r199.<org.eclipse.jetty.util.ArrayTernaryTrie: void <init>(int)>(i80)\", \"r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.Trie _connectionFields> = r199\"],\"465\":[\"if b0 < 32 goto r200 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"470\":[\"r200 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r200.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r215 = (java.lang.Throwable) r200\", \"throw r215\"],\"488\":[\"if b0 < 32 goto r201 = new org.eclipse.jetty.http.HttpParser$BadMessage\"],\"498\":[\"r201 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r201.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r216 = (java.lang.Throwable) r201\", \"throw r216\", \"r202 = new java.lang.IllegalStateException\"],\"504\":[\"specialinvoke r202.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r138)\", \"throw r202\"]}}",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "qname": "org.eclipse.jetty.http.HttpParser.parseLine(ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": "{\"lhs\" : {\"97\":[\"$r22 = new java.lang.IllegalStateException\", \"specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"too much data after closed\")\", \"throw $r22\"],\"141\":[\"$r54 := @caughtexception\", \"staticinvoke <org.eclipse.jetty.util.BufferUtil: void clear(java.nio.ByteBuffer)>(r1)\", \"$r56 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"$r55 = new java.lang.StringBuilder\", \"specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()\", \"$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\", \"$i23 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: int access$000(org.eclipse.jetty.http.HttpParser$BadMessage)>($r54)\", \"$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23)\", \"$r59 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: java.lang.String access$100(org.eclipse.jetty.http.HttpParser$BadMessage)>($r54)\", \"if $r59 == null goto $r81 = \"\"\", \"$r70 = new java.lang.StringBuilder\", \"specialinvoke $r70.<java.lang.StringBuilder: void <init>()>()\", \"$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")\", \"$r72 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: java.lang.String access$100(org.eclipse.jetty.http.HttpParser$BadMessage)>($r54)\", \"$r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72)\", \"$r81 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)]\", \"$r81 = \"\"\", \"$r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)\", \"$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")\", \"$r62 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62)\", \"$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r65 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r56.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r64, $r65)\", \"$z12 = r0.<org.eclipse.jetty.http.HttpParser: boolean DEBUG>\", \"if $z12 == 0 goto $r66 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"$r69 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r69.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r54)\", \"$r66 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r66)\", \"$r67 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$i24 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: int access$000(org.eclipse.jetty.http.HttpParser$BadMessage)>($r54)\", \"$r68 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: java.lang.String access$100(org.eclipse.jetty.http.HttpParser$BadMessage)>($r54)\", \"interfaceinvoke $r67.<org.eclipse.jetty.http.HttpParser$HttpHandler: void badMessage(int,java.lang.String)>($i24, $r68)\", \"return 0\"],\"180\":[\"$r37 = new java.lang.StringBuilder\", \"specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()\", \"$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\", \"$r40 = virtualinvoke $r36.<java.lang.Exception: java.lang.String toString()>()\", \"$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)\", \"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")\", \"$r43 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43)\", \"$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r46 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r38.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r45, $r46)\"],\"192\":[\"if $z11 == 0 goto $r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r53 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r53.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r36)\", \"$r47 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$i21 = virtualinvoke $r47.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"$r48 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"$i22 = virtualinvoke $r48.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"if $i21 > $i22 goto $r49 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r51 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r51)\", \"$r52 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"interfaceinvoke $r52.<org.eclipse.jetty.http.HttpParser$HttpHandler: void badMessage(int,java.lang.String)>(400, null)\", \"goto [?= return 0]\"],\"206\":[\"interfaceinvoke $r49.<org.eclipse.jetty.http.HttpParser$HttpHandler: void earlyEOF()>()\", \"$r50 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r50)\"],\"210\":null},\"rhs\" : {\"97\":[\"r83 = new java.lang.IllegalStateException\", \"specialinvoke r83.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"too much data after closed\")\", \"throw r83\"],\"141\":null,\"180\":[\"r84 = new java.lang.StringBuilder\", \"specialinvoke r84.<java.lang.StringBuilder: void <init>()>()\", \"$r39 = virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\", \"r87 = (org.eclipse.jetty.http.HttpParser$BadMessage) $r36\", \"$i21 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: int access$000(org.eclipse.jetty.http.HttpParser$BadMessage)>(r87)\", \"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21)\", \"r88 = (org.eclipse.jetty.http.HttpParser$BadMessage) $r36\", \"$r41 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: java.lang.String access$100(org.eclipse.jetty.http.HttpParser$BadMessage)>(r88)\", \"if $r41 == null goto $r81 = \"\"\", \"r85 = new java.lang.StringBuilder\", \"specialinvoke r85.<java.lang.StringBuilder: void <init>()>()\", \"$r53 = virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")\", \"r89 = (org.eclipse.jetty.http.HttpParser$BadMessage) $r36\", \"$r54 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: java.lang.String access$100(org.eclipse.jetty.http.HttpParser$BadMessage)>(r89)\", \"$r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)\", \"$r81 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>()\", \"goto [?= $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)]\", \"$r81 = \"\"\", \"$r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)\", \"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")\", \"$r44 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r44)\", \"$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r47 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r38.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r46, $r47)\"],\"192\":[\"if $z11 == 0 goto $r48 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"$r51 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r51.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r36)\", \"$r48 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r48)\"],\"206\":[\"r90 = (org.eclipse.jetty.http.HttpParser$BadMessage) $r36\", \"$i22 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: int access$000(org.eclipse.jetty.http.HttpParser$BadMessage)>(r90)\", \"r91 = (org.eclipse.jetty.http.HttpParser$BadMessage) $r36\", \"$r50 = staticinvoke <org.eclipse.jetty.http.HttpParser$BadMessage: java.lang.String access$100(org.eclipse.jetty.http.HttpParser$BadMessage)>(r91)\", \"interfaceinvoke $r49.<org.eclipse.jetty.http.HttpParser$HttpHandler: void badMessage(int,java.lang.String)>($i22, $r50)\"],\"210\":[\"$r56 := @caughtexception\", \"staticinvoke <org.eclipse.jetty.util.BufferUtil: void clear(java.nio.ByteBuffer)>(r1)\", \"$r58 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"r86 = new java.lang.StringBuilder\", \"specialinvoke r86.<java.lang.StringBuilder: void <init>()>()\", \"$r59 = virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"badMessage: \")\", \"$r60 = virtualinvoke $r56.<java.lang.Exception: java.lang.String toString()>()\", \"$r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60)\", \"$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")\", \"$r63 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r63)\", \"$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>()\", \"$r66 = newarray (java.lang.Object)[0]\", \"interfaceinvoke $r58.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r65, $r66)\", \"$z12 = r0.<org.eclipse.jetty.http.HttpParser: boolean DEBUG>\", \"if $z12 == 0 goto $r67 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$r73 = <org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.util.log.Logger LOG>\", \"interfaceinvoke $r73.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r56)\", \"$r67 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$State _state>\", \"$i23 = virtualinvoke $r67.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"$r68 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State END>\", \"$i24 = virtualinvoke $r68.<org.eclipse.jetty.http.HttpParser$State: int ordinal()>()\", \"if $i23 > $i24 goto $r69 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"$r71 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r71)\", \"$r72 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"interfaceinvoke $r72.<org.eclipse.jetty.http.HttpParser$HttpHandler: void badMessage(int,java.lang.String)>(400, null)\", \"goto [?= return 0]\", \"$r69 = r0.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.http.HttpParser$HttpHandler _handler>\", \"interfaceinvoke $r69.<org.eclipse.jetty.http.HttpParser$HttpHandler: void earlyEOF()>()\", \"$r70 = <org.eclipse.jetty.http.HttpParser$State: org.eclipse.jetty.http.HttpParser$State CLOSED>\", \"virtualinvoke r0.<org.eclipse.jetty.http.HttpParser: void setState(org.eclipse.jetty.http.HttpParser$State)>($r70)\", \"return 0\"]}}",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "qname": "org.eclipse.jetty.http.HttpParser.parseNext(ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": "{\"lhs\" : {\"58\":[\"$r11 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r11.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"throw $r11\"],\"69\":[\"$r4 = new java.lang.StringBuilder\", \"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()\", \"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"padding is too large >\")\"],\"77\":[\"$r10 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke $r10.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(400)\", \"throw $r10\"]},\"rhs\" : {\"58\":[\"r33 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r33.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>()>()\", \"r36 = (java.lang.Throwable) r33\", \"throw r36\"],\"69\":[\"r34 = new java.lang.StringBuilder\", \"specialinvoke r34.<java.lang.StringBuilder: void <init>()>()\", \"$r6 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"padding is too large >\")\"],\"77\":[\"r35 = new org.eclipse.jetty.http.HttpParser$BadMessage\", \"specialinvoke r35.<org.eclipse.jetty.http.HttpParser$BadMessage: void <init>(int)>(400)\", \"r37 = (java.lang.Throwable) r35\", \"throw r37\"]}}",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/http/HttpParser.class",
            "contained": true,
            "qname": "org.eclipse.jetty.http.HttpParser.quickStart(ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/http/HttpParser.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": null,
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/util/BufferUtil.class",
            "contained": false,
            "qname": "org.eclipse.jetty.util.BufferUtil",
            "affectedFile": "/org/eclipse/jetty/util/BufferUtil.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        },
        {
            "diff": null,
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/4df5647f6dfdc5fa7abb812afe9290d60b17c098/org/eclipse/jetty/util/BufferUtil.class",
            "contained": false,
            "qname": "org.eclipse.jetty.util.BufferUtil.toDebugString(ByteBuffer)",
            "affectedFile": "/org/eclipse/jetty/util/BufferUtil.class",
            "commit": "4df5647f6dfdc5fa7abb812afe9290d60b17c098"
        }
    ],
    "timestamp": "2018-11-30",
    "cve": "CVE-2015-2080",
    "gav": {
        "version": "9.2.7.v20150116",
        "groupId": "org.eclipse.jetty",
        "artifactId": "jetty-http"
    },
    "comment": ""
}